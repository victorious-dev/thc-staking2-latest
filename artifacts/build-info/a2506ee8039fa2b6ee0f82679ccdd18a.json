{
  "id": "a2506ee8039fa2b6ee0f82679ccdd18a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.6.12",
  "solcLongVersion": "0.6.12+commit.27d51765",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DMToken.sol": {
        "content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.6.12;\r\n\r\ninterface IERC20 {\r\n\t/**\r\n\t * @dev Returns the amount of tokens in existence.\r\n\t */\r\n\tfunction totalSupply() external view returns (uint);\r\n\r\n\t/**\r\n\t * @dev Returns the token decimals.\r\n\t */\r\n\tfunction decimals() external view returns (uint8);\r\n\r\n\t/**\r\n\t * @dev Returns the token symbol.\r\n\t */\r\n\tfunction symbol() external view returns (string memory);\r\n\r\n\t/**\r\n\t* @dev Returns the token name.\r\n\t*/\r\n\tfunction name() external view returns (string memory);\r\n\r\n\t/**\r\n\t * @dev Returns the bep token owner.\r\n\t */\r\n\tfunction getOwner() external view returns (address);\r\n\r\n\t/**\r\n\t * @dev Returns the amount of tokens owned by `account`.\r\n\t */\r\n\tfunction balanceOf(address account) external view returns (uint);\r\n\r\n\t/**\r\n\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n\t *\r\n\t * Returns a boolean value indicating whether the operation succeeded.\r\n\t *\r\n\t * Emits a {Transfer} event.\r\n\t */\r\n\tfunction transfer(address recipient, uint amount) external returns (bool);\r\n\r\n\t/**\r\n\t * @dev Returns the remaining number of tokens that `spender` will be\r\n\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n\t * zero by default.\r\n\t *\r\n\t * This value changes when {approve} or {transferFrom} are called.\r\n\t */\r\n\tfunction allowance(address _owner, address spender) external view returns (uint);\r\n\r\n\t/**\r\n\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n\t *\r\n\t * Returns a boolean value indicating whether the operation succeeded.\r\n\t *\r\n\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n\t * that someone may use both the old and the new allowance by unfortunate\r\n\t * transaction ordering. One possible solution to mitigate this race\r\n\t * condition is to first reduce the spender's allowance to 0 and set the\r\n\t * desired value afterwards:\r\n\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n\t *\r\n\t * Emits an {Approval} event.\r\n\t */\r\n\tfunction approve(address spender, uint amount) external returns (bool);\r\n\r\n\t/**\r\n\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n\t * allowance mechanism. `amount` is then deducted from the caller's\r\n\t * allowance.\r\n\t *\r\n\t * Returns a boolean value indicating whether the operation succeeded.\r\n\t *\r\n\t * Emits a {Transfer} event.\r\n\t */\r\n\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n\r\n\t/**\r\n\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n\t * another (`to`).\r\n\t *\r\n\t * Note that `value` may be zero.\r\n\t */\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\r\n\t/**\r\n\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n\t * a call to {approve}. `value` is the new allowance.\r\n\t */\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract Context {\r\n\t// Empty internal constructor, to prevent people from mistakenly deploying\r\n\t// an instance of this contract, which should be used via inheritance.\r\n\tconstructor () internal { }\r\n\r\n\tfunction _msgSender() internal view returns (address payable) {\r\n\t\treturn msg.sender;\r\n\t}\r\n\r\n\tfunction _msgData() internal view returns (bytes memory) {\r\n\t\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n\t\treturn msg.data;\r\n\t}\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n\tfunction add(uint a, uint b) internal pure returns (uint) {\r\n\t\tuint c = a + b;\r\n\t\trequire(c >= a, \"SafeMath: addition overflow\");\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns (uint) {\r\n\t\treturn sub(a, b, \"SafeMath: subtraction overflow\");\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n\t\trequire(b <= a, errorMessage);\r\n\t\tuint c = a - b;\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns (uint) {\r\n\t\t\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tuint c = a * b;\r\n\t\trequire(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns (uint) {\r\n\t\treturn div(a, b, \"SafeMath: division by zero\");\r\n\t}\r\n\r\n\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n\t\t// Solidity only automatically asserts when dividing by 0\r\n\t\trequire(b > 0, errorMessage);\r\n\t\tuint c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction mod(uint a, uint b) internal pure returns (uint) {\r\n\t\treturn mod(a, b, \"SafeMath: modulo by zero\");\r\n\t}\r\n\r\n\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n\t\trequire(b != 0, errorMessage);\r\n\t\treturn a % b;\r\n\t}\r\n}\r\n\r\ncontract Ownable is Context {\r\n\taddress private _owner;\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor () internal {\r\n\t\taddress msgSender = _msgSender();\r\n\t\t_owner = msgSender;\r\n\t\temit OwnershipTransferred(address(0), msgSender);\r\n\t}\r\n\r\n\tfunction owner() public view returns (address) {\r\n\t\treturn _owner;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction renounceOwnership() public onlyOwner {\r\n\t\temit OwnershipTransferred(_owner, address(0));\r\n\t\t_owner = address(0);\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\t_transferOwnership(newOwner);\r\n\t}\r\n\r\n\tfunction _transferOwnership(address newOwner) internal {\r\n\t\trequire(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n\t\temit OwnershipTransferred(_owner, newOwner);\r\n\t\t_owner = newOwner;\r\n\t}\r\n}\r\n\r\ncontract Mintable is Ownable {\r\n\tmapping(address => bool) public isMinters;\r\n\taddress[] public minters;\r\n\t// string[] public poolNames;\r\n\r\n\tevent SetMinters(address indexed newMinter,bool isMinter);\r\n\r\n\tfunction setMinter(address _newMinter) public onlyOwner {\r\n\t\tisMinters[_newMinter] = true;\r\n\t\tminters.push(_newMinter);\r\n\t\temit SetMinters(_newMinter,true);\r\n\t}\r\n\tfunction setMinters(address[] memory _minters) external onlyOwner {\r\n\t\tfor(uint i=0; i<_minters.length; i++) {\r\n\t\t\tsetMinter(_minters[i]);\r\n\t\t}\r\n\t}\r\n\tfunction disableMinter(address _minter) external onlyOwner {\r\n\t\tisMinters[_minter] = false;\r\n\t\temit SetMinters(_minter,false);\r\n\t}\r\n\r\n\tmodifier onlyMinter() {\r\n\t\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \"Mintable: caller is not the minter\");\r\n\t\t_;\r\n\t}\r\n\r\n}\r\n\r\ninterface IPancakeswapFactory {\r\n\t\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n\t\tfunction feeTo() external view returns (address);\r\n\t\tfunction feeToSetter() external view returns (address);\r\n\r\n\t\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\r\n\t\tfunction allPairs(uint) external view returns (address pair);\r\n\t\tfunction allPairsLength() external view returns (uint);\r\n\r\n\t\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n\t\tfunction setFeeTo(address) external;\r\n\t\tfunction setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IPancakeswapPair {\r\n\t\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\t\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\r\n\t\tfunction name() external pure returns (string memory);\r\n\t\tfunction symbol() external pure returns (string memory);\r\n\t\tfunction decimals() external pure returns (uint8);\r\n\t\tfunction totalSupply() external view returns (uint);\r\n\t\tfunction balanceOf(address owner) external view returns (uint);\r\n\t\tfunction allowance(address owner, address spender) external view returns (uint);\r\n\r\n\t\tfunction approve(address spender, uint value) external returns (bool);\r\n\t\tfunction transfer(address to, uint value) external returns (bool);\r\n\t\tfunction transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n\t\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\t\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\t\tfunction nonces(address owner) external view returns (uint);\r\n\r\n\t\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n\t\tevent Mint(address indexed sender, uint amount0, uint amount1);\r\n\t\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n\t\tevent Swap(\r\n\t\t\t\taddress indexed sender,\r\n\t\t\t\tuint amount0In,\r\n\t\t\t\tuint amount1In,\r\n\t\t\t\tuint amount0Out,\r\n\t\t\t\tuint amount1Out,\r\n\t\t\t\taddress indexed to\r\n\t\t);\r\n\t\tevent Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n\t\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\r\n\t\tfunction factory() external view returns (address);\r\n\t\tfunction token0() external view returns (address);\r\n\t\tfunction token1() external view returns (address);\r\n\t\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n\t\tfunction price0CumulativeLast() external view returns (uint);\r\n\t\tfunction price1CumulativeLast() external view returns (uint);\r\n\t\tfunction kLast() external view returns (uint);\r\n\r\n\t\tfunction mint(address to) external returns (uint liquidity);\r\n\t\tfunction burn(address to) external returns (uint amount0, uint amount1);\r\n\t\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n\t\tfunction skim(address to) external;\r\n\t\tfunction sync() external;\r\n\r\n\t\tfunction initialize(address, address) external;\r\n}\r\n\r\ninterface IPancakeswapRouter{\r\n\t\tfunction factory() external pure returns (address);\r\n\t\tfunction WETH() external pure returns (address);\r\n\r\n\t\tfunction addLiquidity(\r\n\t\t\t\taddress tokenA,\r\n\t\t\t\taddress tokenB,\r\n\t\t\t\tuint amountADesired,\r\n\t\t\t\tuint amountBDesired,\r\n\t\t\t\tuint amountAMin,\r\n\t\t\t\tuint amountBMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint amountA, uint amountB, uint liquidity);\r\n\t\tfunction addLiquidityETH(\r\n\t\t\t\taddress token,\r\n\t\t\t\tuint amountTokenDesired,\r\n\t\t\t\tuint amountTokenMin,\r\n\t\t\t\tuint amountETHMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n\t\tfunction removeLiquidity(\r\n\t\t\t\taddress tokenA,\r\n\t\t\t\taddress tokenB,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountAMin,\r\n\t\t\t\tuint amountBMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint amountA, uint amountB);\r\n\t\tfunction removeLiquidityETH(\r\n\t\t\t\taddress token,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountTokenMin,\r\n\t\t\t\tuint amountETHMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint amountToken, uint amountETH);\r\n\t\tfunction removeLiquidityWithPermit(\r\n\t\t\t\taddress tokenA,\r\n\t\t\t\taddress tokenB,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountAMin,\r\n\t\t\t\tuint amountBMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline,\r\n\t\t\t\tbool approveMax, uint8 v, bytes32 r, bytes32 s\r\n\t\t) external returns (uint amountA, uint amountB);\r\n\t\tfunction removeLiquidityETHWithPermit(\r\n\t\t\t\taddress token,\r\n\t\t\t\tuint liquidity,\r\n\t\t\t\tuint amountTokenMin,\r\n\t\t\t\tuint amountETHMin,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline,\r\n\t\t\t\tbool approveMax, uint8 v, bytes32 r, bytes32 s\r\n\t\t) external returns (uint amountToken, uint amountETH);\r\n\t\tfunction swapExactTokensForTokens(\r\n\t\t\t\tuint amountIn,\r\n\t\t\t\tuint amountOutMin,\r\n\t\t\t\taddress[] calldata path,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint[] memory amounts);\r\n\t\tfunction swapTokensForExactTokens(\r\n\t\t\t\tuint amountOut,\r\n\t\t\t\tuint amountInMax,\r\n\t\t\t\taddress[] calldata path,\r\n\t\t\t\taddress to,\r\n\t\t\t\tuint deadline\r\n\t\t) external returns (uint[] memory amounts);\r\n\t\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\tpayable\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\t\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\t\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\t\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n\t\t\t\texternal\r\n\t\t\t\tpayable\r\n\t\t\t\treturns (uint[] memory amounts);\r\n\r\n\t\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n\t\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n\t\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n\t\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n\t\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n\t\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\r\n\t\t\taddress token,\r\n\t\t\tuint liquidity,\r\n\t\t\tuint amountTokenMin,\r\n\t\t\tuint amountETHMin,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external returns (uint amountETH);\r\n\t\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n\t\t\taddress token,\r\n\t\t\tuint liquidity,\r\n\t\t\tuint amountTokenMin,\r\n\t\t\tuint amountETHMin,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline,\r\n\t\t\tbool approveMax, uint8 v, bytes32 r, bytes32 s\r\n\t\t) external returns (uint amountETH);\r\n\t\r\n\t\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n\t\t\tuint amountIn,\r\n\t\t\tuint amountOutMin,\r\n\t\t\taddress[] calldata path,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external;\r\n\t\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n\t\t\tuint amountOutMin,\r\n\t\t\taddress[] calldata path,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external payable;\r\n\t\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n\t\t\tuint amountIn,\r\n\t\t\tuint amountOutMin,\r\n\t\t\taddress[] calldata path,\r\n\t\t\taddress to,\r\n\t\t\tuint deadline\r\n\t\t) external;\r\n}\r\n\r\ninterface IStoreContract {\r\n\tfunction withDraw(address tokenAddress) external ;\r\n}\r\ninterface IStaking {\r\n\tfunction stakeTokenAddress() external view returns(address);\r\n\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\r\n\tfunction countTotalStake() external view returns (uint _totalStake);\r\n\tfunction countTotalReward() external view returns (uint _totalReward);\r\n}\r\n\r\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\r\ncontract DMToken is Context, IERC20, Mintable {\r\n\tusing SafeMath for uint;\r\n\r\n\tmapping (address => uint) private _balances;\r\n\r\n\tmapping (address => mapping (address => uint)) private _allowances;\r\n\t//Presale Event for emit on website\r\n\tevent Presaled (\r\n\t\taddress user,\r\n\t\tuint usdtAmount,\r\n\t\tuint dMtokenAmount\r\n\t);\r\n\r\n\t\r\n\tuint8 private _decimals = 18;\r\n\tstring private _symbol = \"DM\";\r\n\tstring private _name = \"DMToken\";\r\n\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\r\n\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\r\n\r\n\tuint public liquidityFee = 5;\r\n\tuint public rewardFee = 5;\r\n\tuint public insuranceFee = 2;\r\n\tuint public communityFee = 3;\r\n\r\n\t/* address public insurance;\r\n\t; */\r\n\taddress public communityAddress;\r\n\taddress public feeAddress;\r\n\r\n\tbool public swapAndLiquifyEnabled = true; \r\n\tuint public minLiquidityAmount = 1e3 * 1e18;\r\n\r\n\tIPancakeswapRouter public pancakeswapRouter;\r\n\taddress public pancakeswapMDUSDTPair;\r\n\taddress public USDTAddress;\r\n\r\n\taddress public storeAddress;\r\n\r\n\tbool inSwapAndLiquify;\r\n\tmodifier lockTheSwap {\r\n\t\tinSwapAndLiquify = true;\r\n\t\t_;\r\n\t\tinSwapAndLiquify = false;\r\n\t}\r\n\r\n\tbool inRedeem;\r\n\tmodifier lockRedeem {\r\n\t\tinRedeem = true;\r\n\t\t_;\r\n\t\tinRedeem = false;\r\n\t}\r\n\r\n\tuint startTime;\r\n\r\n\tconstructor() public {\r\n\t\t// _balances[msg.sender] = _totalSupply;\r\n\r\n\t\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\r\n\t\tstartTime = block.timestamp;\r\n\t\t// presaleEndTime += startTime;\r\n\t\t// emit Transfer(address(0), msg.sender, _totalSupply);\r\n\t}\r\n\r\n\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\r\n\t\tswapAndLiquifyEnabled = enable;\r\n\t}\r\n\r\n\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\r\n\t\tfeeAddress = _feeAddress;\r\n\t\tcommunityAddress = _communityAddress;\r\n\t\tUSDTAddress = _USDTAddress;\r\n\t\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\r\n\t\tpancakeswapRouter = _pancakeswapRouter;\r\n\t\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\r\n\t\tstoreAddress = _storeAddress;\r\n\t\t\r\n\t}\r\n\t//合约拥有者修改费率设置\r\n\tfunction setFees(uint[4] memory fees) external onlyOwner {\r\n\t\tliquidityFee = fees[0];\r\n\t\trewardFee = fees[1];\r\n\t\tinsuranceFee = fees[2];\r\n\t\tcommunityFee = fees[3];\r\n\t}\r\n\r\n\tfunction getOwner() external view override returns (address) {\r\n\t\treturn owner();\r\n\t}\r\n\r\n\tfunction getTotalFee() public view returns (uint) {\r\n\t\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\r\n\t}\r\n\r\n\tfunction decimals() external override view returns (uint8) {\r\n\t\treturn _decimals;\r\n\t}\r\n\r\n\tfunction symbol() external override view returns (string memory) {\r\n\t\treturn _symbol;\r\n\t}\r\n\r\n\tfunction name() external override view returns (string memory) {\r\n\t\treturn _name;\r\n\t}\r\n\r\n\tfunction totalSupply() external override view returns (uint) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\r\n\tfunction balanceOf(address account) public override view returns (uint) {\r\n\t\treturn _balances[account];\r\n\t}\r\n\r\n\tfunction transfer(address recipient, uint amount) public override returns (bool) {\r\n\t\t_transfer(_msgSender(), recipient, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address owner, address spender) external override view returns (uint) {\r\n\t\treturn _allowances[owner][spender];\r\n\t}\r\n\r\n\tfunction approve(address spender, uint amount) external override returns (bool) {\r\n\t\t_approve(_msgSender(), spender, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\r\n\t\t_transfer(sender, recipient, amount);\r\n\t\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\r\n\t\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\r\n\t\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction mint(uint amount) public onlyMinter returns (bool) {\r\n\t\t_mint(_msgSender(), amount);\r\n\t\treturn true;\r\n\t}\r\n\t//转账功能，买不扣手续费，卖扣手续费，以DM形式存在合约，一旦有人互转时吧DM换成USDT分红。\r\n\tfunction _transfer(address sender, address recipient, uint amount) internal {\r\n\t\trequire(sender != address(0), \"BEP20: transfer from the zero address\");\r\n\t\trequire(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\t\tuint recieveAmount = amount;\r\n\t\t//consider the presale investor's available transfer amount. good.\r\n\t\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\"BEP20: transfer amount exceeds balance\");\r\n\t\t_balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n\r\n\r\n\t\t// fee \r\n\t\tbool isBuy = sender==pancakeswapMDUSDTPair;\r\n\t\tbool isSell =  recipient==pancakeswapMDUSDTPair;\r\n\r\n\t\tif(isSell) {\r\n\t\t\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\r\n\t\t\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\r\n\t\t\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\r\n\t\t\temit Transfer(sender, address(this), feeAmount);\r\n\t\t}\r\n\t\t_balances[recipient] = _balances[recipient].add(recieveAmount);\r\n\t\t//calculate DM reserved in this contract\r\n\t\tuint contractTokenBalance = balanceOf(address(this));\r\n\t\t//swap DM to usdt \r\n\t\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\r\n\t\t\tif(minLiquidityAmount <= contractTokenBalance){\r\n\t\t\t\tswapAndLiquify();\r\n\t\t\t}\r\n\t\t\t//if price < some threshold number. admin open redeem switch.\r\n\t\t\tif (redeemable()) {\r\n\t\t\t\tredeem();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\temit Transfer(sender, recipient, recieveAmount);\r\n\t}\r\n\t\r\n\t//swap reserved DM in contract to USDT and some part of them to liquidty.\r\n \tfunction swapAndLiquify() internal lockTheSwap {\r\n\t\t\r\n\t\tuint contractTokenBalance = _balances[address(this)];\r\n\t\t// convert liquidityFee Part to DM-USDT token ( percentage )\r\n\t\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\r\n\t\t//remained dm = rest\r\n\t\tuint rest = contractTokenBalance.sub(liquidityhalf);\r\n\t\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\r\n\t\t//swap rest DM to Usdt\r\n\t\tswapTokensForUSDT(rest);\r\n\t\t//get USDT amount in DM contract\r\n\t\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\r\n\t\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\r\n\t\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\r\n\t\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\r\n\t\t//transfer usdt directly to community wallet.\r\n\t\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\r\n\t\t\r\n\t\t//add liquidity\r\n\t\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\r\n\t\taddLiquidity(liquidityhalf, newBalance);\r\n \t}\r\n\r\n\t//invoke pancake router swap DM To USDT\r\n\tfunction swapTokensForUSDT(uint tokenAmount) internal {\r\n\t\taddress[] memory path = new address[](2);\r\n\t\tpath[0] = address(this);\r\n\t\tpath[1] = USDTAddress;\r\n\r\n\t\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\r\n\r\n\t\t// make the swap\r\n\r\n\t\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n\t\t\ttokenAmount,\r\n\t\t\t0, // accept any amount of usdt\r\n\t\t\tpath,\r\n\t\t\tstoreAddress,\r\n\t\t\tblock.timestamp\r\n\t\t);\r\n\r\n\t\tIStoreContract(storeAddress).withDraw(USDTAddress);\r\n\t}\r\n\r\n\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\r\n\t\t// approve token transfer to cover all possible scenarios\r\n\t\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\r\n\t\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\r\n\r\n\t\t// add the liquidity\r\n\t\tpancakeswapRouter.addLiquidity(\r\n\t\t\taddress(this),\r\n\t\t\tUSDTAddress,\r\n\t\t\ttokenAmount,\r\n\t\t\tusdtAmount,\r\n\t\t\t0, // slippage is unavoidable\r\n\t\t\t0, // slippage is unavoidable\r\n\t\t\towner(),\r\n\t\t\tblock.timestamp\r\n\t\t);\r\n\t}\r\n\r\n\tfunction _mint(address account, uint amount) internal {\r\n\t\trequire(account != address(0), \"BEP20: mint to the zero address\");\r\n\t\trequire(_totalSupply<_maxSupply, \"exceed max supply\");\r\n\t\t_totalSupply = _totalSupply.add(amount);\r\n\t\t_balances[account] = _balances[account].add(amount);\r\n\t\temit Transfer(address(0), account, amount);\r\n\t}\r\n\r\n\tfunction _burn(address account, uint amount) internal {\r\n\t\trequire(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n\t\t_balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n\t\t_totalSupply = _totalSupply.sub(amount, \"BEP20: burn amount exceeds balance\");\r\n\t\temit Transfer(account, address(0), amount);\r\n\t}\r\n\r\n\tfunction _approve(address owner, address spender, uint amount) internal {\r\n\t\trequire(owner != address(0), \"BEP20: approve from the zero address\");\r\n\t\trequire(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n\t\t_allowances[owner][spender] = amount;\r\n\t\temit Approval(owner, spender, amount);\r\n\t}\r\n\r\n\tfunction _burnFrom(address account, uint amount) internal {\r\n\t\t_burn(account, amount);\r\n\t\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n\t}\r\n\r\n\t/* =========== presale & rewards 预售分红功能=========== */\r\n\r\n\tevent ClaimReward(address user,uint amount);\r\n\tevent Unlocked(address user,uint amount,uint timeStamp);\r\n\r\n\tuint public rewardPoolBalance;\r\n\tuint public rewardedTotalBalance;\r\n\t// mapping(address=>uint) rewardedBalance;\r\n\r\n\tuint public USDTDecimals = 18;\r\n\r\n\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\r\n\t\r\n\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\r\n\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\r\n\r\n\tuint public presaledTotal; // is dmtoken\r\n\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken 最多预售的DM代币数量\r\n\r\n\tuint public presaleEndTime = 1637510400; // 20 days\r\n\tstruct Presale {\r\n\t\tuint amount; // is dm.\r\n\t\tuint unlocked; // is dm.\r\n\t\tuint rewards; // is usdt\r\n\t}\r\n\tmapping(address=>Presale) public presales;\r\n\r\n\t\r\n\r\n\t\t/* [8,   5 minutes],\r\n\t\t[18,  7 minutes],\r\n\t\t[30,  10 minutes],\r\n\t\t[45,  12 minutes],\r\n\t\t[62,  15 minutes],\r\n\t\t[80,  18 minutes],\r\n\t\t[100, 28 minutes] */\r\n\t\t\r\n\tuint[][] unlockSteps = [\r\n\t\t[uint(8),   uint(40 days)],\r\n\t\t[uint(18),  uint(90 days)],\r\n\t\t[uint(30),  uint(150 days)],\r\n\t\t[uint(45),  uint(210 days)],\r\n\t\t[uint(62),  uint(270 days)],\r\n\t\t[uint(80),  uint(330 days)],\r\n\t\t[uint(100), uint(360 days)]\r\n\t];\r\n\r\n\tuint public referralRate = 12;\r\n\t//referal rate\r\n\tfunction setReferralRate(uint _referralRate) external onlyOwner {\r\n\t\treferralRate = _referralRate;\r\n\t}\r\n\t//start presale. record current time\r\n\t/* function startPresale() public onlyOwner {\r\n\t\tstartTime = block.timestamp;\r\n\t} */\r\n\t//investor buy presale alloc\r\n\tfunction presale(uint _usdt,address referral) public {\r\n\t\taddress _sender = msg.sender;\r\n\t\t//calculate quanity to receive\r\n\t\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\r\n\r\n\t\trequire(_sender!=address(0), \"_sender can't be zero address\");\r\n\t\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\"presale ended\");\r\n\t\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \"_sender must be greater or equals than limit1\");\r\n\t\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \"presale total must be less or equals than limit2\");\r\n\t\t//send USDT fund from invesotr to Contract Owner\r\n\t\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\r\n\t\t_mint(_sender, _quantity);//mint equal amount of DM token\r\n\t\tif(referral!=address(0)) {\r\n\t\t\t_mint(referral, _quantity.mul(referralRate).div(100));\r\n\t\t\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\r\n\t\t\tpresaleTotal -= _quantity.mul(referralRate).div(100);\r\n\t\t\tpresaledTotal += _quantity.mul(referralRate).div(100);\r\n\r\n\t\t\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\r\n\t\t\t}\r\n\r\n\t\tpresales[_sender].amount += _quantity;//lump sum DM token minted\r\n\t\tpresaleTotal -= _quantity;\r\n\t\tpresaledTotal += _quantity;\r\n\r\n\t\temit Presaled(_sender, _usdt, _quantity);\r\n\t}\r\n\t//private sale investor can claim USDT reward from USDT dividens pool\r\n\tfunction claimReward() external {\r\n\t\taddress _sender = msg.sender;\r\n\t\tuint rewardBalance = getReward(_sender);\r\n\t\trequire(_sender!=address(0), \"sender can't be zero\");\r\n\t\trequire(rewardBalance>0,\"Claim : There is no reward amount\");\r\n\t\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\r\n\t\tpresales[_sender].rewards += rewardBalance;\r\n\t\t// rewardedBalance[msg.sender] += rewardBalance;\r\n\r\n\t\trewardPoolBalance -= rewardBalance;\r\n\t\trewardedTotalBalance += rewardBalance;\r\n\r\n\t\temit ClaimReward(_sender, rewardBalance);\r\n\t}\r\n\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\r\n\tfunction getReward(address account) public view returns (uint rewardBalance) {\r\n\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\r\n\t        return 0;\r\n\t    } else {\r\n\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\r\n\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\r\n\t    }\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t//user manaully unlock the DM amount\r\n\tfunction unlock() external {\r\n\t\taddress _sender = msg.sender;\r\n\t\tuint _unlockAmount = getUnlockAmount(_sender);\r\n\t\trequire(_sender!=address(0), \"sender can't be zero\");\r\n\t\trequire(_unlockAmount>0, \"_unlockAmount is zero\");\r\n\t\tpresales[_sender].unlocked += _unlockAmount;\r\n\r\n\t\t// uint timeStamp = block.timestamp;\r\n\t\temit Unlocked(_sender, _unlockAmount, block.timestamp);\r\n\t}\r\n\r\n\t//getUnlock Amount user\r\n\tfunction getUnlockAmount(address account) public view returns (uint){\r\n\t\tif (account==0x0000000000000000000000000000000000000000) return 0;\r\n\t\tuint time = block.timestamp;\r\n\t\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\r\n\t\t\tif (time > startTime + unlockSteps[i][1]) {\r\n\t\t\t\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\t/* ======================================== */\r\n\r\n\tfunction emergencyWithdraw(address token) external onlyOwner {\r\n\t\tuint tokenBalance = IERC20(token).balanceOf(address(this));\r\n\t\tIERC20(token).transfer(owner(), tokenBalance);\r\n\t\trewardPoolBalance = 0;\r\n\t\tinsurancePoolBalance = 0;\r\n\t} \r\n\t\r\n\t/* ======================================== */\r\n\r\n\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\r\n\t\tuint i=0;\r\n\t\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\r\n\t\tuint _locked = presales[account].amount;\r\n\r\n\t\tisEnd = block.timestamp > presaleEndTime;\r\n\r\n\t\tparams[i++] = presaleEndTime; \t\t \t\t//presale endtime\r\n\t\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \t\t\t//limit1\r\n\t\tparams[i++] = presaleLimit2 - _locked; \t\t\t\t\t//limit2\r\n\t\tparams[i++] = presaleTotal; \t\t\t\t\t\t\t//remainder\r\n\t\tparams[i++] = getReward(account); \t\t\t\t\t\t//reward\r\n\t\tparams[i++] = _balances[account]; \t\t\t\t\t\t//dmBalance\r\n\t\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \t//usdtBalance\r\n\t\tparams[i++] = getUnlockAmount(account); \t\t\t\t//unlockable\r\n\t\tparams[i++] = rewardPoolBalance;\r\n\t\tparams[i++] = rewardedTotalBalance;\r\n\t\tparams[i++] = insurancePoolBalance;\r\n\t\tparams[i++] = insurancePoolBurnt;\r\n\r\n\r\n\t\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\r\n\t\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\r\n\t\tparams[i++] = _balances[pancakeswapMDUSDTPair];\r\n\t\tparams[i++] = _balances[address(this)];\r\n\r\n\r\n\t\ti=0;\r\n\t\t//this investors statistic in each pool infos.\r\n\t\tfor(uint k=0; k<minters.length; k++) {\r\n\t\t\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\r\n\t\t\tpools[i++] = _total;\r\n\t\t\tpools[i++] = _staking;\r\n\t\t\tpools[i++] = _rewardable;\r\n\t\t\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\r\n\t\t}\r\n\t\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\r\n\t}\r\n\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////////\r\n\t////////////////////////////////////////////////////////////////////////////////////\r\n\t////////////////////////////////////////////////////////////////////////////////////\r\n\t////////////////////////////////////////////////////////////////////////////////////\r\n\t////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tuint public insurancePoolBalance;\r\n\tuint public insurancePoolBurnt;\r\n\t//查看是否达到回购条件，4.保险池达到10万USDT时，使用50%资金，自动回购DM销毁 买 ( DMAN-USDT) 交易对\r\n\tfunction redeemable() internal view returns(bool) {\r\n\t\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\r\n\t}\r\n\t//保险池达到10万USDT时，使用50%资金，自动回购DM销毁 买 ( DMAN-USDT) 交易对\r\n\tfunction redeem() internal lockRedeem{\r\n        require(redeemable(), \"not enought insurance pool balance\");\r\n\r\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\r\n        address[] memory path = new address[](2);\r\n        path[0] = USDTAddress;\r\n        path[1] = address(this);\r\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\r\n\t\tuint256 _initbalance = _balances[address(this)];\r\n        // make the swap\r\n        pancakeswapRouter.swapExactTokensForTokens(\r\n            swapAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            storeAddress,\r\n            block.timestamp\r\n        );\r\n\r\n\t\t_balances[address(this)] += _balances[storeAddress];\r\n\t\t_balances[storeAddress] = 0;\r\n\r\n\t\tinsurancePoolBalance -= swapAmount;\r\n\t\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\r\n\t\tinsurancePoolBurnt += swapedAmount;\r\n\t\t_burn(address(this), swapedAmount);\r\n        \r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/DMToken.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "DMToken": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ClaimReward",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "usdtAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "dMtokenAmount",
                  "type": "uint256"
                }
              ],
              "name": "Presaled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newMinter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isMinter",
                  "type": "bool"
                }
              ],
              "name": "SetMinters",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timeStamp",
                  "type": "uint256"
                }
              ],
              "name": "Unlocked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "USDTAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "USDTDecimals",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "communityAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "communityFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "disableMinter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "emergencyWithdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rewardBalance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getStakerInfo",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isEnd",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[15]",
                  "name": "params",
                  "type": "uint256[15]"
                },
                {
                  "internalType": "uint256[36]",
                  "name": "pools",
                  "type": "uint256[36]"
                },
                {
                  "internalType": "bool",
                  "name": "isFirst",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getUnlockAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "insuranceFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "insurancePoolBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "insurancePoolBurnt",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isMinters",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidityFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minLiquidityAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "minters",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pancakeswapMDUSDTPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pancakeswapRouter",
              "outputs": [
                {
                  "internalType": "contract IPancakeswapRouter",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_usdt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "referral",
                  "type": "address"
                }
              ],
              "name": "presale",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "presaleEndTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "presaleLimit1",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "presaleLimit2",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "presalePrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "presaleTotal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "presaledTotal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "presales",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unlocked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewards",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "referralRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardPoolBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardedTotalBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[4]",
                  "name": "fees",
                  "type": "uint256[4]"
                }
              ],
              "name": "setFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_communityAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_RouterAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_USDTAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_storeAddress",
                  "type": "address"
                }
              ],
              "name": "setInitialAddresses",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newMinter",
                  "type": "address"
                }
              ],
              "name": "setMinter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_minters",
                  "type": "address[]"
                }
              ],
              "name": "setMinters",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_referralRate",
                  "type": "uint256"
                }
              ],
              "name": "setReferralRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "enable",
                  "type": "bool"
                }
              ],
              "name": "setSwapAndLiquifyEnabled",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storeAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "swapAndLiquifyEnabled",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unlock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "decimals()": {
                "details": "Returns the token decimals."
              },
              "getOwner()": {
                "details": "Returns the bep token owner."
              },
              "name()": {
                "details": "Returns the token name."
              },
              "symbol()": {
                "details": "Returns the token symbol."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH2 0x444D PUSH1 0xF0 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x32 SWAP2 PUSH1 0x6 SWAP2 SWAP1 PUSH3 0x255 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0x2226AA37B5B2B7 PUSH1 0xC9 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x61 SWAP2 DUP2 PUSH3 0x255 JUMP JUMPDEST POP PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x8 SSTORE PUSH11 0xCECB8F27F4200F3A000000 PUSH1 0x9 SSTORE PUSH1 0x5 PUSH1 0xA DUP2 DUP2 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0x2 PUSH1 0xC SSTORE PUSH1 0x3 PUSH1 0xD SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x10 SSTORE PUSH1 0x12 PUSH1 0x18 SSTORE PUSH7 0x11C37937E08000 PUSH1 0x19 DUP2 SWAP1 SSTORE SWAP2 SLOAD PUSH1 0xFF AND SWAP1 EXP PUSH9 0xAD78EBC5AC6200000 DUP2 MUL DUP3 SWAP1 DIV PUSH1 0x1A SSTORE PUSH9 0xA2A15D09519BE00000 MUL DIV PUSH1 0x1B SSTORE PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0xEE6B280 MUL PUSH1 0x1D SSTORE PUSH4 0x619A6D00 PUSH1 0x1E SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x8 PUSH1 0xE0 DUP3 ADD SWAP1 DUP2 MSTORE PUSH3 0x34BC00 PUSH2 0x100 DUP4 ADD MSTORE DUP2 MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH3 0x76A700 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE SWAP4 DUP5 MSTORE PUSH3 0xC5C100 DUP5 DUP3 ADD MSTORE DUP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH4 0x114DB00 DUP2 DUP6 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x3E DUP2 MSTORE PUSH4 0x163F500 DUP2 DUP6 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x50 DUP2 MSTORE PUSH4 0x1B30F00 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP3 MSTORE PUSH4 0x1DA9C00 DUP3 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH3 0x1DD SWAP2 SWAP1 PUSH1 0x7 PUSH3 0x2DA JUMP JUMPDEST POP PUSH1 0xC PUSH1 0x21 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x1FD PUSH3 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP TIMESTAMP PUSH1 0x15 SSTORE PUSH3 0x3CC JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x298 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2C8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2C8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2C8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AB JUMP JUMPDEST POP PUSH3 0x2D6 SWAP3 SWAP2 POP PUSH3 0x334 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x326 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x326 JUMPI DUP3 MLOAD PUSH3 0x315 SWAP1 DUP4 SWAP1 PUSH1 0x2 PUSH3 0x34B JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2FB JUMP JUMPDEST POP PUSH3 0x2D6 SWAP3 SWAP2 POP PUSH3 0x388 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x335 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2C8 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD DUP3 DUP2 GT ISZERO PUSH3 0x2C8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2AB JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2D6 JUMPI PUSH1 0x0 PUSH3 0x39F DUP3 DUP3 PUSH3 0x3A9 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x388 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x3C9 SWAP2 SWAP1 PUSH3 0x334 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A54 DUP1 PUSH3 0x3DC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xC00007B0 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xDC1D85F6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xFD64E078 EQ PUSH2 0xA65 JUMPI DUP1 PUSH4 0xFF920C74 EQ PUSH2 0xA6D JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xDC1D85F6 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0xEFCD708F EQ PUSH2 0x9CD JUMPI DUP1 PUSH4 0xF2C4DA93 EQ PUSH2 0xA11 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xC9559786 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC9559786 EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0xCA4863FD EQ PUSH2 0x96A JUMPI DUP1 PUSH4 0xDA7A3687 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xDB6754ED EQ PUSH2 0x98F JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xC49B9A80 EQ PUSH2 0x93B JUMPI DUP1 PUSH4 0xC8F0C577 EQ PUSH2 0x95A JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xA0712D68 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0xADA3DA15 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xBAEDC8D6 EQ PUSH2 0x90D JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x8AB JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x97C4FAC7 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x97C4FAC7 EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x9A258A79 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0xA053CE1F EQ PUSH2 0x85A JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0x8E33F3ED EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x83A JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x547D0096 GT PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x7A5C08AE GT PUSH2 0x261 JUMPI DUP1 PUSH4 0x86E476DD GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x86E476DD EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0x8961BE6B EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0x8B424267 EQ PUSH2 0x822 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x7A5C08AE EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x7AE316D0 EQ PUSH2 0x7B9 JUMPI DUP1 PUSH4 0x7C2003E3 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0x8623EC7B EQ PUSH2 0x7ED JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0x29D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x71E8EC68 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0x714 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x547D0096 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x6B74B211 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x6B8 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x3033BED8 GT PUSH2 0x330 JUMPI DUP1 PUSH4 0x41275358 GT PUSH2 0x30A JUMPI DUP1 PUSH4 0x41275358 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x49371B19 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x4A74BB02 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x4D9E9E09 EQ PUSH2 0x5BB JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x3033BED8 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x51B JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x36C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x21A5CEEE EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x249B7C19 EQ PUSH2 0x4CF JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH3 0xE7FA8 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x429 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39A PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x41B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x505 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x54F PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x455 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x39A PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xFA4 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x80 ADD SWAP1 PUSH1 0x4 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP2 SWAP5 POP PUSH2 0x1030 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x39A PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x73A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 PUSH2 0x1E0 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x768 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x750 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x24 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x793 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x77B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH2 0x188B JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x54F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1CC1 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1D3D JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210A JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x21BE JUMP JUMPDEST PUSH2 0x39A PUSH2 0x2234 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x223A JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x229D JUMP JUMPDEST PUSH2 0x54F PUSH2 0x22A3 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x246E JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0xB1E PUSH2 0x247D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2481 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB3D PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB8D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP5 DUP5 DUP5 PUSH2 0x256D JUMP JUMPDEST PUSH2 0xC60 DUP5 PUSH2 0xBFC PUSH2 0x247D JUMP JUMPDEST PUSH2 0xC5B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3801 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xC3A PUSH2 0x247D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC88 JUMPI POP PUSH1 0x0 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x20 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 NOT ADD JUMPDEST DUP1 ISZERO PUSH2 0xD60 JUMPI PUSH1 0x20 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCA5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0xCBB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x15 SLOAD ADD DUP3 GT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x1F PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x64 PUSH1 0x20 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD09 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xD1F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD MUL DUP2 PUSH2 0xD4C JUMPI INVALID JUMPDEST DIV SUB SWAP3 POP POP POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x0 NOT ADD PUSH2 0xC92 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0xD82 PUSH2 0x247D JUMP JUMPDEST DUP5 PUSH2 0xC5B DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0xD93 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDDA PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE2A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xE DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x13 DUP1 SLOAD DUP6 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP3 SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x64E329CB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC9C65396 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x14 DUP1 SLOAD SWAP5 SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFAC PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x102C JUMPI PUSH2 0x1024 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1017 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1038 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1088 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xA SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xB SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xC SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x10AE PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10FE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xA9059CBB PUSH2 0x1192 PUSH2 0x1CAC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x22 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1236 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 PUSH2 0x3753 JUMP JUMPDEST PUSH2 0x12E8 PUSH2 0x3772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1E SLOAD DUP1 DUP6 MSTORE TIMESTAMP GT SWAP5 POP PUSH1 0x1 SWAP1 DUP1 PUSH2 0x131B JUMPI PUSH1 0x1A SLOAD PUSH2 0x131E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x132F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1B SLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 DUP3 SWAP1 SUB SWAP1 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x134D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1D SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1366 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH2 0x1374 DUP8 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1385 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x13BC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x144E JUMPI PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1462 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH2 0x1470 DUP8 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1481 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x16 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x149A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x17 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x14B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x22 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x14CC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x23 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x14E5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1552 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x157B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x15B4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x15E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x0 SWAP2 POP DUP2 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1609 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC3453153 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC3453153 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x165F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 DUP10 ADD SWAP9 SWAP2 SWAP6 POP SWAP2 SWAP4 POP SWAP1 SWAP2 POP DUP4 SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x16B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 DUP7 ADD SWAP6 DUP3 SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x16CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 DUP7 ADD SWAP6 DUP2 SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x16E3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x2 DUP1 SLOAD DUP6 SWAP1 DUP2 LT PUSH2 0x16F6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x106395F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x106395F SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1753 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP8 ADD SWAP7 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x17F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x15ED JUMP JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 SWAP9 SWAP6 SWAP8 POP SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SWAP4 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xA SLOAD ADD ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 DUP6 MUL DUP2 PUSH2 0x18BD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x191B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F73656E6465722063616E2774206265207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1D SLOAD GT DUP1 ISZERO PUSH2 0x192D JUMPI POP PUSH1 0x1E SLOAD TIMESTAMP LT JUMPDEST PUSH2 0x196E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C1C995CD85B1948195B991959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1A SLOAD SWAP1 DUP3 ADD LT ISZERO PUSH2 0x19CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38D3 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1B SLOAD SWAP1 DUP3 ADD GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39AB PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ABE SWAP1 POP DUP3 DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1AF6 DUP4 PUSH2 0x1AF1 PUSH1 0x64 PUSH2 0x1AEB PUSH1 0x21 SLOAD DUP7 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0x64 PUSH2 0x1AEB PUSH1 0x21 SLOAD DUP5 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH2 0x1B44 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1AEB SWAP1 DUP5 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x1D DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH2 0x1B63 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1AEB SWAP1 DUP5 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH32 0xF0ABE27DE28FCB91718E6302B9813C494EF6D8A617B38C71B44D6F70BE3A5F2A SWAP1 DUP5 SWAP1 PUSH2 0x1BA5 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1AEB SWAP1 DUP10 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x64 PUSH2 0x1AEB PUSH1 0x21 SLOAD DUP8 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x1D DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1C DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE MLOAD PUSH32 0xF0ABE27DE28FCB91718E6302B9813C494EF6D8A617B38C71B44D6F70BE3A5F2A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C68 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9B PUSH2 0x1CAC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x23 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 PUSH2 0x1D7E JUMPI POP PUSH2 0x1D69 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3943 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCA PUSH2 0x1DC4 PUSH2 0x247D JUMP JUMPDEST DUP4 PUSH2 0x2986 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0x1DDF PUSH2 0x247D JUMP JUMPDEST DUP5 PUSH2 0xC5B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3965 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x4 PUSH1 0x0 PUSH2 0x1E09 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1E46 DUP3 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E6465722063616E2774206265207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1EE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5F756E6C6F636B416D6F756E74206973207A65726F PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE TIMESTAMP DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0x3F2F29FA02CC34566AC167B446BE0BE9E0254CAC18EDA93B2DFE6A7A7C8AFFB9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0x1F57 PUSH2 0x247D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x256D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FD3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E6465722063616E2774206265207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2012 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3829 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x207C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x16 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH1 0x17 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1C SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2124 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x2131 JUMPI POP PUSH1 0x0 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x17 SLOAD PUSH1 0x16 SLOAD PUSH2 0x216D SWAP4 SWAP3 PUSH2 0x1AEB SWAP3 SWAP1 SWAP2 PUSH2 0x2167 SWAP2 PUSH2 0x2925 JUMP JUMPDEST SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SUB PUSH2 0xD67 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C6 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2216 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x22 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2248 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2298 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x21 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x231B PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x236B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2374 DUP2 PUSH2 0x2B41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x237F PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP6 ADD DUP3 SSTORE SWAP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP2 MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x37B7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39FD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3792 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3920 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x2639 SWAP3 PUSH2 0x2633 SWAP2 PUSH2 0x2925 JUMP JUMPDEST SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST LT ISZERO PUSH2 0x2676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38AD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26B3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x38AD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x12 SLOAD DUP2 AND SWAP2 DUP3 EQ SWAP2 SWAP1 DUP6 AND EQ DUP1 ISZERO PUSH2 0x2789 JUMPI PUSH2 0x26FD PUSH1 0x64 PUSH2 0x1AEB PUSH2 0x26F3 PUSH2 0x1891 JUMP JUMPDEST DUP8 SWAP1 PUSH1 0x64 SUB PUSH2 0x2AA6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x2727 PUSH1 0x64 PUSH2 0x1AEB PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD ADD ADD ADD DUP9 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2744 SWAP1 DUP3 PUSH2 0x2925 JUMP JUMPDEST ADDRESS PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x27AC SWAP1 DUP5 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x27D1 ADDRESS PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x27F8 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2802 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x280C JUMPI POP DUP2 ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2821 JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x284C JUMPI DUP1 PUSH1 0x10 SLOAD GT PUSH2 0x2837 JUMPI PUSH2 0x2837 PUSH2 0x2C23 JUMP JUMPDEST PUSH2 0x283F PUSH2 0x2F28 JUMP JUMPDEST ISZERO PUSH2 0x284C JUMPI PUSH2 0x284C PUSH2 0x2F3F JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x291D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x28CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x290F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x297F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD LT PUSH2 0x2A2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x657863656564206D617820737570706C79 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2A3A SWAP1 DUP3 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A60 SWAP1 DUP3 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AB5 JUMPI POP PUSH1 0x0 PUSH2 0xB29 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2AC2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x297F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x386C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x297F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x32B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x37DB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x288E JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH2 0x2C65 PUSH1 0x2 PUSH2 0x1AEB PUSH2 0x2C57 PUSH2 0x1891 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1AEB SWAP1 DUP8 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C73 DUP4 DUP4 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2CFB DUP3 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x2D81 SWAP3 DUP6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DC1 PUSH2 0x2DB8 PUSH2 0x2DAA PUSH2 0x2DA2 PUSH1 0x2 PUSH1 0xA SLOAD PUSH2 0x2AFF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2633 PUSH2 0x1891 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1AEB SWAP1 DUP6 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0xA SLOAD PUSH2 0x2DF5 SWAP1 PUSH2 0x2DEC SWAP1 PUSH2 0x2DDE SWAP1 PUSH2 0x2DA2 SWAP1 PUSH1 0x2 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1AEB SWAP1 DUP6 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x22 SLOAD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x13 SLOAD PUSH1 0xE SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 AND SWAP1 PUSH2 0x2E36 SWAP1 PUSH2 0x2E28 SWAP1 PUSH2 0x2DA2 SWAP1 PUSH1 0x2 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1AEB SWAP1 DUP8 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x22 SLOAD PUSH1 0x16 SLOAD PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP5 PUSH2 0x2F07 SWAP5 SWAP1 SWAP4 PUSH2 0x2633 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x2F13 DUP6 DUP3 PUSH2 0x34D3 JUMP JUMPDEST POP POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 SLOAD PUSH1 0xA EXP PUSH3 0x186A0 MUL PUSH1 0x22 SLOAD LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH2 0x2F5A PUSH2 0x2F28 JUMP JUMPDEST PUSH2 0x2F95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x384A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2FA6 SWAP1 PUSH1 0x2 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x13 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2FE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP ADDRESS DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3012 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x308D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x11 SLOAD PUSH1 0x14 SLOAD SWAP3 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 DUP2 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD SWAP1 DUP2 MSTORE DUP11 MLOAD PUSH1 0xA4 DUP7 ADD MSTORE DUP11 MLOAD SWAP7 SWAP10 SWAP6 SWAP1 SWAP8 AND SWAP8 PUSH4 0x38ED1739 SWAP8 DUP13 SWAP8 DUP13 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP3 PUSH1 0xC4 SWAP1 SWAP3 ADD SWAP2 DUP8 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3143 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x312B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x316C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x31C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x31DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3228 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3210 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 DUP2 KECCAK256 SLOAD ADDRESS DUP1 DUP4 MSTORE DUP6 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 ADD DUP3 SSTORE SWAP4 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x22 DUP1 SLOAD DUP13 SWAP1 SUB SWAP1 SSTORE SWAP1 DUP3 MSTORE SLOAD SWAP1 SWAP6 POP PUSH2 0x328D SWAP5 POP SWAP3 POP DUP6 SWAP2 POP POP PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE SWAP1 POP PUSH2 0x32A1 ADDRESS DUP3 PUSH2 0x364B JUMP JUMPDEST POP POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x28E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x28CA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x330F JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3347 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x3372 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x3398 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x44 DUP7 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0xA4 DUP8 ADD MSTORE DUP9 MLOAD SWAP7 SWAP1 SWAP8 AND SWAP7 PUSH4 0x5C11D795 SWAP7 DUP11 SWAP7 SWAP5 SWAP6 DUP11 SWAP6 SWAP1 SWAP3 SWAP2 PUSH1 0xC4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP1 DUP9 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3425 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x340D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3462 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x14 SLOAD PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA67D2C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP4 POP PUSH4 0xA67D2C7 SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x34EB SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3558 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x356E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x11 SLOAD PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xE8E33700 SWAP2 ADDRESS SWAP2 AND DUP6 DUP6 PUSH1 0x0 DUP1 PUSH2 0x3598 PUSH2 0x1CAC JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x361B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x362F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x398A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36CD DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x371D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x9 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x480 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E6365436C PUSH2 0x696D KECCAK256 GASPRICE KECCAK256 SLOAD PUSH9 0x657265206973206E6F KECCAK256 PUSH19 0x657761726420616D6F756E746E6F7420656E6F PUSH22 0x67687420696E737572616E636520706F6F6C2062616C PUSH2 0x6E63 PUSH6 0x536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F774F776E61626C653A2063616C6C6572 KECCAK256 PUSH10 0x73206E6F742074686520 PUSH16 0x776E657242455032303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x655F7365 PUSH15 0x646572206D75737420626520677265 PUSH2 0x7465 PUSH19 0x206F7220657175616C73207468616E206C696D PUSH10 0x7431DDF252AD1BE2C89B PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4D PUSH10 0x6E7461626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206D696E7465 PUSH19 0x42455032303A2064656372656173656420616C PUSH13 0x6F77616E63652062656C6F7720 PUSH27 0x65726F42455032303A206275726E2066726F6D20746865207A6572 PUSH16 0x206164647265737370726573616C6520 PUSH21 0x6F74616C206D757374206265206C657373206F7220 PUSH6 0x7175616C7320 PUSH21 0x68616E206C696D69743242455032303A206275726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636542455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220753E4B169568 0xAC PUSH13 0xFB8A0579CE50CA61A19892B820 DUP14 0xBD 0x27 0xCD 0xDA 0x21 0xBC 0xC7 POP 0x29 XOR PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "14731:28:0:-:0;;;-1:-1:-1;;14731:28:0;14757:2;14731:28;;;14763:29;14407:18774;14763:29;;14407:18774;14763:29;;;-1:-1:-1;;;14763:29:0;;;;;;;;;;:::i;:::-;-1:-1:-1;14796:32:0;;;;;;;;;;;;;-1:-1:-1;;;14796:32:0;;;;;;;;;;;:::i;:::-;-1:-1:-1;14858:14:0;14832:40;;14917:20;14889:48;;14987:1;14960:28;;;;14992:25;;;;15048:1;15021:28;;15080:1;15053:28;;15191:40;;;-1:-1:-1;;;;;;;15191:40:0;;;;;;15269:10;15236:43;;24556:2;24529:29;;24591:28;24564:55;;;;24671:9;;15191:40;24671:9;24660:21;;24654:48;;;:63;;;24626:91;;24763:49;;:64;24735:92;;24940:9;;;;24929:2;:21;24917:9;:33;24890:60;;25029:10;25000:39;;;;25372:249;;;;;;;;25406:1;25372:249;;;;;;25417:7;24940:9;25372:249;;;;;;;;;;;;25437:2;25372:249;;25448:7;25372:249;;;;;;;;;;;;;;;;;;;;;;;;;25479:8;25372:249;;;;;;;;;;;;;;;;;;25500:2;25372:249;;25511:8;25372:249;;;;;;;;;;;;;;;25532:2;25372:249;;25543:8;25372:249;;;;;;;;;;;;;;;25564:2;25372:249;;25575:8;25372:249;;;;-1:-1:-1;;;25372:249:0;;;;;;;;;25596:3;25372:249;;25607:8;25372:249;;;;-1:-1:-1;;;25372:249:0;;;;;;;;;:::i;:::-;;25654:2;25627:29;;15670:308;;;;;;;;;-1:-1:-1;4975:17:0;4995:12;:10;:12::i;:::-;5012:6;:18;;-1:-1:-1;;;;;;5012:18:0;-1:-1:-1;;;;;5012:18:0;;;;;;;5040:43;;5012:18;;-1:-1:-1;5012:18:0;5040:43;;5012:6;;5040:43;-1:-1:-1;15864:15:0;15852:9;:27;14407:18774;;3128:89;3202:10;3128:89;:::o;14407:18774::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14407:18774:0;;;-1:-1:-1;14407:18774:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;14407:18774:0;;;-1:-1:-1;14407:18774:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061038d5760003560e01c80638da5cb5b116101de578063c00007b01161010f578063dc1d85f6116100ad578063f2fde38b1161007c578063f2fde38b14610a19578063fca3b5aa14610a3f578063fd64e07814610a65578063ff920c7414610a6d5761038d565b8063dc1d85f614610997578063dd62ed3e1461099f578063efcd708f146109cd578063f2c4da9314610a115761038d565b8063c9559786116100e9578063c955978614610962578063ca4863fd1461096a578063da7a368714610987578063db6754ed1461098f5761038d565b8063c00007b014610915578063c49b9a801461093b578063c8f0c5771461095a5761038d565b8063a0712d681161017c578063a9059cbb11610156578063a9059cbb146108b3578063ada3da15146108df578063b88a802f14610905578063baedc8d61461090d5761038d565b8063a0712d6814610862578063a457c2d71461087f578063a69df4b5146108ab5761038d565b806397c4fac7116101b857806397c4fac71461084257806398118cb41461084a5780639a258a7914610852578063a053ce1f1461085a5761038d565b80638da5cb5b1461082a5780638e33f3ed1461083257806395d89b411461083a5761038d565b8063547d0096116102c35780637a5c08ae1161026157806386e476dd1161023057806386e476dd1461080a578063893d20e8146108125780638961be6b1461081a5780638b424267146108225761038d565b80637a5c08ae146107b15780637ae316d0146107b95780637c2003e3146107c15780638623ec7b146107ed5761038d565b806370a082311161029d57806370a08231146106de578063715018a61461070457806371e8ec681461070c578063733bdef0146107145761038d565b8063547d0096146105c35780636b74b211146106665780636ff1c9bc146106b85761038d565b80633033bed811610330578063412753581161030a578063412753581461054757806349371b191461056b5780634a74bb02146105b35780634d9e9e09146105bb5761038d565b80633033bed8146104d7578063313ce567146104fd578063395093511461051b5761038d565b806318160ddd1161036c57806318160ddd1461046957806321a5ceee1461047157806323b872dd14610499578063249b7c19146104cf5761038d565b80620e7fa81461039257806306fdde03146103ac578063095ea7b314610429575b600080fd5b61039a610a75565b60408051918252519081900360200190f35b6103b4610a7b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103ee5781810151838201526020016103d6565b50505050905090810190601f16801561041b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104556004803603604081101561043f57600080fd5b506001600160a01b038135169060200135610b11565b604080519115158252519081900360200190f35b61039a610b2f565b6104976004803603602081101561048757600080fd5b50356001600160a01b0316610b35565b005b610455600480360360608110156104af57600080fd5b506001600160a01b03813581169160208101359091169060400135610be3565b61039a610c6a565b61039a600480360360208110156104ed57600080fd5b50356001600160a01b0316610c70565b610505610d6c565b6040805160ff9092168252519081900360200190f35b6104556004803603604081101561053157600080fd5b506001600160a01b038135169060200135610d75565b61054f610dc3565b604080516001600160a01b039092168252519081900360200190f35b610497600480360360a081101561058157600080fd5b506001600160a01b03813581169160208101358216916040820135811691606081013582169160809091013516610dd2565b610455610f8e565b61039a610f9e565b610497600480360360208110156105d957600080fd5b8101906020810181356401000000008111156105f457600080fd5b82018360208201111561060657600080fd5b8035906020019184602083028401116401000000008311171561062857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610fa4945050505050565b6104976004803603608081101561067c57600080fd5b81019080806080019060048060200260405190810160405280929190826004602002808284376000920191909152509194506110309350505050565b610497600480360360208110156106ce57600080fd5b50356001600160a01b03166110a6565b61039a600480360360208110156106f457600080fd5b50356001600160a01b0316611213565b61049761122e565b61039a6112d0565b61073a6004803603602081101561072a57600080fd5b50356001600160a01b03166112d6565b604051841515815260208101846101e080838360005b83811015610768578181015183820152602001610750565b5050505090500183602460200280838360005b8381101561079357818101518382015260200161077b565b50505050905001821515815260200194505050505060405180910390f35b61039a61188b565b61039a611891565b610497600480360360408110156107d757600080fd5b50803590602001356001600160a01b03166118a3565b61054f6004803603602081101561080357600080fd5b5035611c5b565b61054f611c82565b61054f611c91565b61039a611ca0565b61039a611ca6565b61054f611cac565b61039a611cbb565b6103b4611cc1565b61039a611d22565b61039a611d28565b61054f611d2e565b61039a611d3d565b6104556004803603602081101561087857600080fd5b5035611d43565b6104556004803603604081101561089557600080fd5b506001600160a01b038135169060200135611dd2565b610497611e3a565b610455600480360360408110156108c957600080fd5b506001600160a01b038135169060200135611f4a565b610455600480360360208110156108f557600080fd5b50356001600160a01b0316611f5e565b610497611f73565b61039a612104565b61039a6004803603602081101561092b57600080fd5b50356001600160a01b031661210a565b6104976004803603602081101561095157600080fd5b503515156121be565b61039a612234565b61039a61223a565b6104976004803603602081101561098057600080fd5b5035612240565b61039a61229d565b61054f6122a3565b61039a6122b2565b61039a600480360360408110156109b557600080fd5b506001600160a01b03813581169160200135166122b8565b6109f3600480360360208110156109e357600080fd5b50356001600160a01b03166122e3565b60408051938452602084019290925282820152519081900360600190f35b61054f612304565b61049760048036036020811015610a2f57600080fd5b50356001600160a01b0316612313565b61049760048036036020811015610a5557600080fd5b50356001600160a01b0316612377565b61039a612468565b61054f61246e565b60195481565b60078054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610b075780601f10610adc57610100808354040283529160200191610b07565b820191906000526020600020905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b6000610b25610b1e61247d565b8484612481565b5060015b92915050565b60095490565b610b3d61247d565b6000546001600160a01b03908116911614610b8d576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160209081526040808320805460ff191690558051928352517f4579ec50a131ee14d9ab0dfeddceba4be2fb6907f7326c52237be3fab060ba7f9281900390910190a250565b6000610bf084848461256d565b610c6084610bfc61247d565b610c5b85604051806060016040528060288152602001613801602891396001600160a01b038a16600090815260046020526040812090610c3a61247d565b6001600160a01b03168152602081019190915260400160002054919061288e565b612481565b5060019392505050565b601e5481565b60006001600160a01b038216610c8857506000610d67565b6020544290600019015b8015610d605760208181548110610ca557fe5b90600052602060002001600181548110610cbb57fe5b906000526020600020015460155401821115610d5757601f6000856001600160a01b03166001600160a01b0316815260200190815260200160002060010154606460208381548110610d0957fe5b90600052602060002001600081548110610d1f57fe5b60009182526020808320909101546001600160a01b0389168352601f9091526040909120540281610d4c57fe5b040392505050610d67565b60001901610c92565b5060009150505b919050565b60055460ff1690565b6000610b25610d8261247d565b84610c5b8560046000610d9361247d565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490612925565b600f546001600160a01b031681565b610dda61247d565b6000546001600160a01b03908116911614610e2a576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b600f80546001600160a01b038088166001600160a01b031992831617909255600e8054878416908316179055601380548584169083161790556011805492861692909116821790556040805163c45a015560e01b8152905185929163c45a0155916004808301926020929190829003018186803b158015610eaa57600080fd5b505afa158015610ebe573d6000803e3d6000fd5b505050506040513d6020811015610ed457600080fd5b5051601354604080516364e329cb60e11b81523060048201526001600160a01b0392831660248201529051919092169163c9c653969160448083019260209291908290030181600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050506040513d6020811015610f5557600080fd5b5051601280546001600160a01b039283166001600160a01b03199182161790915560148054949092169316929092179091555050505050565b600f54600160a01b900460ff1681565b60105481565b610fac61247d565b6000546001600160a01b03908116911614610ffc576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b60005b815181101561102c5761102482828151811061101757fe5b6020026020010151612377565b600101610fff565b5050565b61103861247d565b6000546001600160a01b03908116911614611088576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b8051600a556020810151600b556040810151600c5560600151600d55565b6110ae61247d565b6000546001600160a01b039081169116146110fe576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561114d57600080fd5b505afa158015611161573d6000803e3d6000fd5b505050506040513d602081101561117757600080fd5b505190506001600160a01b03821663a9059cbb611192611cac565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d602081101561120357600080fd5b5050600060168190556022555050565b6001600160a01b031660009081526003602052604090205490565b61123661247d565b6000546001600160a01b03908116911614611286576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b601b5481565b60006112e0613753565b6112e8613772565b6001600160a01b0384166000908152601f6020526040812054601e54808552421194506001908061131b57601a5461131e565b60005b60018301928690600f811061132f57fe5b6020020152601b54600183019290829003908690600f811061134d57fe5b6020020152601d5460018301928690600f811061136657fe5b60200201526113748761210a565b60018301928690600f811061138557fe5b602090810291909101919091526001600160a01b03881660009081526003909152604090205460018301928690600f81106113bc57fe5b60200201526001600160a01b0387161561144e57601354604080516370a0823160e01b81526001600160a01b038a81166004830152915191909216916370a08231916024808301926020929190829003018186803b15801561141d57600080fd5b505afa158015611431573d6000803e3d6000fd5b505050506040513d602081101561144757600080fd5b5051611451565b60005b60018301928690600f811061146257fe5b602002015261147087610c70565b60018301928690600f811061148157fe5b602002015260165460018301928690600f811061149a57fe5b602002015260175460018301928690600f81106114b357fe5b602002015260225460018301928690600f81106114cc57fe5b602002015260235460018301928690600f81106114e557fe5b60209081029190910191909152601354601254604080516370a0823160e01b81526001600160a01b039283166004820152905191909216926370a082319260248082019391829003018186803b15801561153e57600080fd5b505afa158015611552573d6000803e3d6000fd5b505050506040513d602081101561156857600080fd5b505160018301928690600f811061157b57fe5b602090810291909101919091526012546001600160a01b031660009081526003909152604090205460018301928690600f81106115b457fe5b602090810291909101919091523060009081526003909152604090205460018301928690600f81106115e257fe5b602002015260009150815b6002548110156118005760008060006002848154811061160957fe5b6000918252602090912001546040805163c345315360e01b81526001600160a01b038e811660048301529151919092169163c3453153916024808301926080929190829003018186803b15801561165f57600080fd5b505afa158015611673573d6000803e3d6000fd5b505050506040513d608081101561168957600080fd5b5080516020820151604090920151600189019891955091935090915083908990602481106116b357fe5b6020020152600186019582908990602481106116cb57fe5b6020020152600186019581908990602481106116e357fe5b602002015260028054859081106116f657fe5b6000918252602091829020015460408051630106395f60e01b815290516001600160a01b0390921692630106395f92600480840193829003018186803b15801561173f57600080fd5b505afa158015611753573d6000803e3d6000fd5b505050506040513d602081101561176957600080fd5b50516040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b1580156117ad57600080fd5b505afa1580156117c1573d6000803e3d6000fd5b505050506040513d60208110156117d757600080fd5b5051600187019660ff909116908990602481106117f057fe5b60200201525050506001016115ed565b5060125460408051630dfe168160e01b8152905130926001600160a01b031691630dfe1681916004808301926020929190829003018186803b15801561184557600080fd5b505afa158015611859573d6000803e3d6000fd5b505050506040513d602081101561186f57600080fd5b5051969895975093956001600160a01b03169093149392505050565b60165481565b600d54600b54600c54600a5401010190565b6019543390600090670de0b6b3a76400008502816118bd57fe5b0490506001600160a01b03821661191b576040805162461bcd60e51b815260206004820152601d60248201527f5f73656e6465722063616e2774206265207a65726f2061646472657373000000604482015290519081900360640190fd5b80601d5411801561192d5750601e5442105b61196e576040805162461bcd60e51b815260206004820152600d60248201526c1c1c995cd85b1948195b991959609a1b604482015290519081900360640190fd5b6001600160a01b0382166000908152601f6020526040902054601a5490820110156119ca5760405162461bcd60e51b815260040180806020018281038252602d8152602001806138d3602d913960400191505060405180910390fd5b6001600160a01b0382166000908152601f6020526040902054601b549082011115611a265760405162461bcd60e51b81526004018080602001828103825260308152602001806139ab6030913960400191505060405180910390fd5b601354600f54604080516323b872dd60e01b81526001600160a01b038681166004830152928316602482015260448101889052905191909216916323b872dd9160648083019260209291908290030181600087803b158015611a8757600080fd5b505af1158015611a9b573d6000803e3d6000fd5b505050506040513d6020811015611ab157600080fd5b50611abe90508282612986565b6001600160a01b03831615611be757611af683611af16064611aeb60215486612aa690919063ffffffff16565b90612aff565b612986565b611b106064611aeb60215484612aa690919063ffffffff16565b6001600160a01b0384166000908152601f6020526040902080549091019055602154611b4490606490611aeb908490612aa6565b601d8054919091039055602154611b6390606490611aeb908490612aa6565b601c805490910190556021547ff0abe27de28fcb91718e6302b9813c494ef6d8a617b38c71b44d6f70be3a5f2a908490611ba590606490611aeb908990612aa6565b611bbf6064611aeb60215487612aa690919063ffffffff16565b604080516001600160a01b039094168452602084019290925282820152519081900360600190a15b6001600160a01b0382166000818152601f6020908152604091829020805485019055601d80548590039055601c80548501905581519283528201869052818101839052517ff0abe27de28fcb91718e6302b9813c494ef6d8a617b38c71b44d6f70be3a5f2a9181900360600190a150505050565b60028181548110611c6857fe5b6000918252602090912001546001600160a01b0316905081565b600e546001600160a01b031681565b6000611c9b611cac565b905090565b600d5481565b600b5481565b6000546001600160a01b031690565b60235481565b60068054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610b075780601f10610adc57610100808354040283529160200191610b07565b600c5481565b600a5481565b6012546001600160a01b031681565b60215481565b33600090815260016020819052604082205460ff1615151480611d7e5750611d69611cac565b6001600160a01b0316336001600160a01b0316145b611db95760405162461bcd60e51b81526004018080602001828103825260228152602001806139436022913960400191505060405180910390fd5b611dca611dc461247d565b83612986565b506001919050565b6000610b25611ddf61247d565b84610c5b856040518060600160405280602581526020016139656025913960046000611e0961247d565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061288e565b336000611e4682610c70565b90506001600160a01b038216611e9a576040805162461bcd60e51b815260206004820152601460248201527373656e6465722063616e2774206265207a65726f60601b604482015290519081900360640190fd5b60008111611ee7576040805162461bcd60e51b81526020600482015260156024820152745f756e6c6f636b416d6f756e74206973207a65726f60581b604482015290519081900360640190fd5b6001600160a01b0382166000818152601f6020908152604091829020600101805485019055815192835282018390524282820152517f3f2f29fa02cc34566ac167b446be0be9e0254cac18eda93b2dfe6a7a7c8affb99181900360600190a15050565b6000610b25611f5761247d565b848461256d565b60016020526000908152604090205460ff1681565b336000611f7f8261210a565b90506001600160a01b038216611fd3576040805162461bcd60e51b815260206004820152601460248201527373656e6465722063616e2774206265207a65726f60601b604482015290519081900360640190fd5b600081116120125760405162461bcd60e51b81526004018080602001828103825260218152602001806138296021913960400191505060405180910390fd5b6013546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561206857600080fd5b505af115801561207c573d6000803e3d6000fd5b505050506040513d602081101561209257600080fd5b50506001600160a01b0382166000818152601f602090815260409182902060020180548501905560168054859003905560178054850190558151928352820183905280517fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9281900390910190a15050565b60175481565b6000601c546000148061212457506001600160a01b038216155b1561213157506000610d67565b601c546001600160a01b0383166000908152601f602052604090205460175460165461216d9392611aeb92909161216791612925565b90612aa6565b6001600160a01b0383166000908152601f60205260409020600201549091508111156121b6576001600160a01b0382166000908152601f60205260409020600201549003610d67565b506000919050565b6121c661247d565b6000546001600160a01b03908116911614612216576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b600f8054911515600160a01b0260ff60a01b19909216919091179055565b601a5481565b60225481565b61224861247d565b6000546001600160a01b03908116911614612298576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b602155565b601c5481565b6011546001600160a01b031681565b601d5481565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b601f6020526000908152604090208054600182015460029092015490919083565b6014546001600160a01b031681565b61231b61247d565b6000546001600160a01b0390811691161461236b576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b61237481612b41565b50565b61237f61247d565b6000546001600160a01b039081169116146123cf576040805162461bcd60e51b8152602060048201819052602482015260008051602061388d833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905560028054808501825594527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b03191685179055825191825291517f4579ec50a131ee14d9ab0dfeddceba4be2fb6907f7326c52237be3fab060ba7f929181900390910190a250565b60185481565b6013546001600160a01b031681565b3390565b6001600160a01b0383166124c65760405162461bcd60e51b81526004018080602001828103825260248152602001806137b76024913960400191505060405180910390fd5b6001600160a01b03821661250b5760405162461bcd60e51b81526004018080602001828103825260228152602001806139fd6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166125b25760405162461bcd60e51b81526004018080602001828103825260258152602001806137926025913960400191505060405180910390fd5b6001600160a01b0382166125f75760405162461bcd60e51b81526004018080602001828103825260238152602001806139206023913960400191505060405180910390fd5b6001600160a01b0383166000908152601f6020908152604080832080546001909101546003909352922054839283926126399261263391612925565b90612be1565b10156126765760405162461bcd60e51b81526004018080602001828103825260268152602001806138ad6026913960400191505060405180910390fd5b6126b3826040518060600160405280602681526020016138ad602691396001600160a01b038716600090815260036020526040902054919061288e565b6001600160a01b03808616600081815260036020526040902092909255601254811691821491908516148015612789576126fd6064611aeb6126f3611891565b8790606403612aa6565b925060006127276064611aeb600d54600c54600b54600a5401010188612aa690919063ffffffff16565b306000908152600360205260409020549091506127449082612925565b30600081815260036020908152604091829020939093558051848152905191926001600160a01b038b16926000805160206139008339815191529281900390910190a3505b6001600160a01b0385166000908152600360205260409020546127ac9084612925565b6001600160a01b0386166000908152600360205260408120919091556127d130611213565b601454909150600160a01b900460ff161580156127f85750601454600160a81b900460ff16155b8015612802575082155b801561280c575081155b80156128215750600f54600160a01b900460ff165b1561284c57806010541161283757612837612c23565b61283f612f28565b1561284c5761284c612f3f565b856001600160a01b0316876001600160a01b0316600080516020613900833981519152866040518082815260200191505060405180910390a350505050505050565b6000818484111561291d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156128e25781810151838201526020016128ca565b50505050905090810190601f16801561290f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561297f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0382166129e1576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b60085460095410612a2d576040805162461bcd60e51b8152602060048201526011602482015270657863656564206d617820737570706c7960781b604482015290519081900360640190fd5b600954612a3a9082612925565b6009556001600160a01b038216600090815260036020526040902054612a609082612925565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391926000805160206139008339815191529281900390910190a35050565b600082612ab557506000610b29565b82820282848281612ac257fe5b041461297f5760405162461bcd60e51b815260040180806020018281038252602181526020018061386c6021913960400191505060405180910390fd5b600061297f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506132b4565b6001600160a01b038116612b865760405162461bcd60e51b81526004018080602001828103825260268152602001806137db6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061297f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061288e565b6014805460ff60a01b1916600160a01b1790553060009081526003602052604081205490612c656002611aeb612c57611891565b600a54611aeb908790612aa6565b90506000612c738383612be1565b601354604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015612cc457600080fd5b505afa158015612cd8573d6000803e3d6000fd5b505050506040513d6020811015612cee57600080fd5b50519050612cfb82613319565b601354604080516370a0823160e01b81523060048201529051600092612d819285926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015612d4f57600080fd5b505afa158015612d63573d6000803e3d6000fd5b505050506040513d6020811015612d7957600080fd5b505190612be1565b9050612dc1612db8612daa612da26002600a54612aff90919063ffffffff16565b612633611891565b600b54611aeb908590612aa6565b60165490612925565b601655600a54612df590612dec90612dde90612da2906002612aff565b600c54611aeb908590612aa6565b60225490612925565b602255601354600e54600a546001600160a01b039283169263a9059cbb921690612e3690612e2890612da2906002612aff565b600d54611aeb908790612aa6565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015612e7c57600080fd5b505af1158015612e90573d6000803e3d6000fd5b505050506040513d6020811015612ea657600080fd5b5050602254601654601354604080516370a0823160e01b81523060048201529051600094612f079490936126339391926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015612d4f57600080fd5b9050612f1385826134d3565b50506014805460ff60a01b1916905550505050565b6000601854600a0a620186a0026022541015905090565b6014805460ff60a81b1916600160a81b179055612f5a612f28565b612f955760405162461bcd60e51b815260040180806020018281038252602281526020018061384a6022913960400191505060405180910390fd5b602254600090612fa6906002612aff565b604080516002808252606080830184529394509091602083019080368337505060135482519293506001600160a01b031691839150600090612fe457fe5b60200260200101906001600160a01b031690816001600160a01b031681525050308160018151811061301257fe5b6001600160a01b039283166020918202929092018101919091526013546011546040805163095ea7b360e01b815291851660048301526024820187905251919093169263095ea7b39260448083019391928290030181600087803b15801561307957600080fd5b505af115801561308d573d6000803e3d6000fd5b505050506040513d60208110156130a357600080fd5b50503060009081526003602090815260408083205460115460145492516338ed173960e01b815260048101888152602482018790526001600160a01b0394851660648301819052426084840181905260a0604485019081528a5160a48601528a51969995909716976338ed1739978c978c9694959394919260c49092019187810191028083838b5b8381101561314357818101518382015260200161312b565b505050509050019650505050505050600060405180830381600087803b15801561316c57600080fd5b505af1158015613180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156131a957600080fd5b81019080805160405193929190846401000000008211156131c957600080fd5b9083019060208201858111156131de57600080fd5b82518660208202830111640100000000821117156131fb57600080fd5b82525081516020918201928201910280838360005b83811015613228578181015183820152602001613210565b50505050919091016040908152601480546001600160a01b039081166000908152600360205283812054308083528583208054909201825593549092168152928320839055602280548c900390559082525490955061328d9450925085915050612be1565b602380548201905590506132a1308261364b565b50506014805460ff60a81b191690555050565b600081836133035760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156128e25781810151838201526020016128ca565b50600083858161330f57fe5b0495945050505050565b6040805160028082526060808301845292602083019080368337019050509050308160008151811061334757fe5b6001600160a01b03928316602091820292909201015260135482519116908290600190811061337257fe5b6001600160a01b0392831660209182029290920101526011546133989130911684612481565b601154601454604051635c11d79560e01b8152600481018581526000602483018190526001600160a01b0393841660648401819052426084850181905260a060448601908152885160a487015288519690971696635c11d795968a9694958a9590929160c490910190602080880191028083838b5b8381101561342557818101518382015260200161340d565b505050509050019650505050505050600060405180830381600087803b15801561344e57600080fd5b505af1158015613462573d6000803e3d6000fd5b505060145460135460408051630a67d2c760e01b81526001600160a01b0392831660048201529051919092169350630a67d2c79250602480830192600092919082900301818387803b1580156134b757600080fd5b505af11580156134cb573d6000803e3d6000fd5b505050505050565b6011546134eb9030906001600160a01b031684612481565b6013546011546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561354457600080fd5b505af1158015613558573d6000803e3d6000fd5b505050506040513d602081101561356e57600080fd5b50506011546013546001600160a01b039182169163e8e33700913091168585600080613598611cac565b426040518963ffffffff1660e01b815260040180896001600160a01b03168152602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001836001600160a01b0316815260200182815260200198505050505050505050606060405180830381600087803b15801561361b57600080fd5b505af115801561362f573d6000803e3d6000fd5b505050506040513d606081101561364557600080fd5b50505050565b6001600160a01b0382166136905760405162461bcd60e51b815260040180806020018281038252602181526020018061398a6021913960400191505060405180910390fd5b6136cd816040518060600160405280602281526020016139db602291396001600160a01b038516600090815260036020526040902054919061288e565b60036000846001600160a01b03166001600160a01b031681526020019081526020016000208190555061371d816040518060600160405280602281526020016139db60229139600954919061288e565b6009556040805182815290516000916001600160a01b038516916000805160206139008339815191529181900360200190a35050565b604051806101e00160405280600f906020820280368337509192915050565b604051806104800160405280602490602082028036833750919291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365436c61696d203a205468657265206973206e6f2072657761726420616d6f756e746e6f7420656e6f7567687420696e737572616e636520706f6f6c2062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657242455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e63655f73656e646572206d7573742062652067726561746572206f7220657175616c73207468616e206c696d697431ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef42455032303a207472616e7366657220746f20746865207a65726f20616464726573734d696e7461626c653a2063616c6c6572206973206e6f7420746865206d696e74657242455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737370726573616c6520746f74616c206d757374206265206c657373206f7220657175616c73207468616e206c696d69743242455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220753e4b169568ac6cfb8a0579ce50ca61a19892b8208dbd27cdda21bcc750291864736f6c634300060c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x1DE JUMPI DUP1 PUSH4 0xC00007B0 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xDC1D85F6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0xA3F JUMPI DUP1 PUSH4 0xFD64E078 EQ PUSH2 0xA65 JUMPI DUP1 PUSH4 0xFF920C74 EQ PUSH2 0xA6D JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xDC1D85F6 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0xEFCD708F EQ PUSH2 0x9CD JUMPI DUP1 PUSH4 0xF2C4DA93 EQ PUSH2 0xA11 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xC9559786 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xC9559786 EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0xCA4863FD EQ PUSH2 0x96A JUMPI DUP1 PUSH4 0xDA7A3687 EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0xDB6754ED EQ PUSH2 0x98F JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xC49B9A80 EQ PUSH2 0x93B JUMPI DUP1 PUSH4 0xC8F0C577 EQ PUSH2 0x95A JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xA0712D68 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0xADA3DA15 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x905 JUMPI DUP1 PUSH4 0xBAEDC8D6 EQ PUSH2 0x90D JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x8AB JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x97C4FAC7 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x97C4FAC7 EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x9A258A79 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0xA053CE1F EQ PUSH2 0x85A JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0x8E33F3ED EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x83A JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x547D0096 GT PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x7A5C08AE GT PUSH2 0x261 JUMPI DUP1 PUSH4 0x86E476DD GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x86E476DD EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0x8961BE6B EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0x8B424267 EQ PUSH2 0x822 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x7A5C08AE EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0x7AE316D0 EQ PUSH2 0x7B9 JUMPI DUP1 PUSH4 0x7C2003E3 EQ PUSH2 0x7C1 JUMPI DUP1 PUSH4 0x8623EC7B EQ PUSH2 0x7ED JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0x29D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0x71E8EC68 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0x714 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x547D0096 EQ PUSH2 0x5C3 JUMPI DUP1 PUSH4 0x6B74B211 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x6B8 JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x3033BED8 GT PUSH2 0x330 JUMPI DUP1 PUSH4 0x41275358 GT PUSH2 0x30A JUMPI DUP1 PUSH4 0x41275358 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x49371B19 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0x4A74BB02 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x4D9E9E09 EQ PUSH2 0x5BB JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x3033BED8 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x51B JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x36C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x21A5CEEE EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x249B7C19 EQ PUSH2 0x4CF JUMPI PUSH2 0x38D JUMP JUMPDEST DUP1 PUSH3 0xE7FA8 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x429 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39A PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x41B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x39A PUSH2 0xC6A JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x505 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x54F PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x455 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x39A PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xFA4 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x80 ADD SWAP1 PUSH1 0x4 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP2 SWAP5 POP PUSH2 0x1030 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1213 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x39A PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x73A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 PUSH2 0x1E0 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x768 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x750 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 PUSH1 0x24 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x793 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x77B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39A PUSH2 0x188B JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x54F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x1CC1 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x39A PUSH2 0x1D3D JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x210A JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x21BE JUMP JUMPDEST PUSH2 0x39A PUSH2 0x2234 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x223A JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x229D JUMP JUMPDEST PUSH2 0x54F PUSH2 0x22A3 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH2 0x2304 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2313 JUMP JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x2468 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x246E JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0xB1E PUSH2 0x247D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x2481 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB3D PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB8D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP5 DUP5 DUP5 PUSH2 0x256D JUMP JUMPDEST PUSH2 0xC60 DUP5 PUSH2 0xBFC PUSH2 0x247D JUMP JUMPDEST PUSH2 0xC5B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3801 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xC3A PUSH2 0x247D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH2 0x2481 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC88 JUMPI POP PUSH1 0x0 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x20 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 NOT ADD JUMPDEST DUP1 ISZERO PUSH2 0xD60 JUMPI PUSH1 0x20 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCA5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0xCBB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x15 SLOAD ADD DUP3 GT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x1F PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x64 PUSH1 0x20 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD09 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xD1F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD MUL DUP2 PUSH2 0xD4C JUMPI INVALID JUMPDEST DIV SUB SWAP3 POP POP POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x0 NOT ADD PUSH2 0xC92 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0xD82 PUSH2 0x247D JUMP JUMPDEST DUP5 PUSH2 0xC5B DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0xD93 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDDA PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE2A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xE DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x13 DUP1 SLOAD DUP6 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP3 SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x64E329CB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC9C65396 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x14 DUP1 SLOAD SWAP5 SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFAC PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xFFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x102C JUMPI PUSH2 0x1024 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1017 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2377 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1038 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1088 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0xA SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xB SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xC SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x10AE PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x10FE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xA9059CBB PUSH2 0x1192 PUSH2 0x1CAC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x22 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1236 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 PUSH2 0x3753 JUMP JUMPDEST PUSH2 0x12E8 PUSH2 0x3772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1E SLOAD DUP1 DUP6 MSTORE TIMESTAMP GT SWAP5 POP PUSH1 0x1 SWAP1 DUP1 PUSH2 0x131B JUMPI PUSH1 0x1A SLOAD PUSH2 0x131E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x132F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1B SLOAD PUSH1 0x1 DUP4 ADD SWAP3 SWAP1 DUP3 SWAP1 SUB SWAP1 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x134D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1D SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1366 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH2 0x1374 DUP8 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1385 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x13BC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x144E JUMPI PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1431 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1462 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH2 0x1470 DUP8 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x1481 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x16 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x149A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x17 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x14B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x22 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x14CC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x23 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x14E5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x153E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1552 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x157B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x15B4 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 DUP4 ADD SWAP3 DUP7 SWAP1 PUSH1 0xF DUP2 LT PUSH2 0x15E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x0 SWAP2 POP DUP2 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1609 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC3453153 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC3453153 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x165F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 DUP10 ADD SWAP9 SWAP2 SWAP6 POP SWAP2 SWAP4 POP SWAP1 SWAP2 POP DUP4 SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x16B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 DUP7 ADD SWAP6 DUP3 SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x16CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x1 DUP7 ADD SWAP6 DUP2 SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x16E3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x2 DUP1 SLOAD DUP6 SWAP1 DUP2 LT PUSH2 0x16F6 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x106395F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x106395F SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1753 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 DUP8 ADD SWAP7 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 PUSH1 0x24 DUP2 LT PUSH2 0x17F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0x15ED JUMP JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xDFE1681 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 SWAP9 SWAP6 SWAP8 POP SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SWAP4 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xA SLOAD ADD ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xDE0B6B3A7640000 DUP6 MUL DUP2 PUSH2 0x18BD JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x191B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F73656E6465722063616E2774206265207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1D SLOAD GT DUP1 ISZERO PUSH2 0x192D JUMPI POP PUSH1 0x1E SLOAD TIMESTAMP LT JUMPDEST PUSH2 0x196E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C1C995CD85B1948195B991959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1A SLOAD SWAP1 DUP3 ADD LT ISZERO PUSH2 0x19CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38D3 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1B SLOAD SWAP1 DUP3 ADD GT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39AB PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ABE SWAP1 POP DUP3 DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1AF6 DUP4 PUSH2 0x1AF1 PUSH1 0x64 PUSH2 0x1AEB PUSH1 0x21 SLOAD DUP7 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0x2986 JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0x64 PUSH2 0x1AEB PUSH1 0x21 SLOAD DUP5 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH2 0x1B44 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1AEB SWAP1 DUP5 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x1D DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH2 0x1B63 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1AEB SWAP1 DUP5 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH32 0xF0ABE27DE28FCB91718E6302B9813C494EF6D8A617B38C71B44D6F70BE3A5F2A SWAP1 DUP5 SWAP1 PUSH2 0x1BA5 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1AEB SWAP1 DUP10 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x64 PUSH2 0x1AEB PUSH1 0x21 SLOAD DUP8 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x1D DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1C DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE MLOAD PUSH32 0xF0ABE27DE28FCB91718E6302B9813C494EF6D8A617B38C71B44D6F70BE3A5F2A SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C68 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9B PUSH2 0x1CAC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x23 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 PUSH2 0x1D7E JUMPI POP PUSH2 0x1D69 PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3943 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCA PUSH2 0x1DC4 PUSH2 0x247D JUMP JUMPDEST DUP4 PUSH2 0x2986 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0x1DDF PUSH2 0x247D JUMP JUMPDEST DUP5 PUSH2 0xC5B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3965 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x4 PUSH1 0x0 PUSH2 0x1E09 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1E46 DUP3 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E6465722063616E2774206265207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1EE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5F756E6C6F636B416D6F756E74206973207A65726F PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE TIMESTAMP DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0x3F2F29FA02CC34566AC167B446BE0BE9E0254CAC18EDA93B2DFE6A7A7C8AFFB9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB25 PUSH2 0x1F57 PUSH2 0x247D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x256D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FD3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x73656E6465722063616E2774206265207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2012 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3829 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x207C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 ADD SWAP1 SSTORE PUSH1 0x16 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE PUSH1 0x17 DUP1 SLOAD DUP6 ADD SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1C SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x2124 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x2131 JUMPI POP PUSH1 0x0 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x17 SLOAD PUSH1 0x16 SLOAD PUSH2 0x216D SWAP4 SWAP3 PUSH2 0x1AEB SWAP3 SWAP1 SWAP2 PUSH2 0x2167 SWAP2 PUSH2 0x2925 JUMP JUMPDEST SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SUB PUSH2 0xD67 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C6 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2216 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x22 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2248 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x2298 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x21 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x231B PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x236B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2374 DUP2 PUSH2 0x2B41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x237F PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x23CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x388D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP6 ADD DUP3 SSTORE SWAP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP2 MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x37B7 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39FD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x25B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3792 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3920 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD DUP4 SWAP3 DUP4 SWAP3 PUSH2 0x2639 SWAP3 PUSH2 0x2633 SWAP2 PUSH2 0x2925 JUMP JUMPDEST SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST LT ISZERO PUSH2 0x2676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38AD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26B3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x38AD PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x12 SLOAD DUP2 AND SWAP2 DUP3 EQ SWAP2 SWAP1 DUP6 AND EQ DUP1 ISZERO PUSH2 0x2789 JUMPI PUSH2 0x26FD PUSH1 0x64 PUSH2 0x1AEB PUSH2 0x26F3 PUSH2 0x1891 JUMP JUMPDEST DUP8 SWAP1 PUSH1 0x64 SUB PUSH2 0x2AA6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x2727 PUSH1 0x64 PUSH2 0x1AEB PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0xA SLOAD ADD ADD ADD DUP9 PUSH2 0x2AA6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2744 SWAP1 DUP3 PUSH2 0x2925 JUMP JUMPDEST ADDRESS PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x27AC SWAP1 DUP5 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x27D1 ADDRESS PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x27F8 JUMPI POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2802 JUMPI POP DUP3 ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x280C JUMPI POP DUP2 ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2821 JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x284C JUMPI DUP1 PUSH1 0x10 SLOAD GT PUSH2 0x2837 JUMPI PUSH2 0x2837 PUSH2 0x2C23 JUMP JUMPDEST PUSH2 0x283F PUSH2 0x2F28 JUMP JUMPDEST ISZERO PUSH2 0x284C JUMPI PUSH2 0x284C PUSH2 0x2F3F JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x291D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x28CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x290F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x297F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD LT PUSH2 0x2A2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x657863656564206D617820737570706C79 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2A3A SWAP1 DUP3 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A60 SWAP1 DUP3 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2AB5 JUMPI POP PUSH1 0x0 PUSH2 0xB29 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2AC2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x297F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x386C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x297F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x32B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x37DB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x288E JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH2 0x2C65 PUSH1 0x2 PUSH2 0x1AEB PUSH2 0x2C57 PUSH2 0x1891 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1AEB SWAP1 DUP8 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2C73 DUP4 DUP4 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2CFB DUP3 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x2D81 SWAP3 DUP6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D63 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DC1 PUSH2 0x2DB8 PUSH2 0x2DAA PUSH2 0x2DA2 PUSH1 0x2 PUSH1 0xA SLOAD PUSH2 0x2AFF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2633 PUSH2 0x1891 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1AEB SWAP1 DUP6 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0xA SLOAD PUSH2 0x2DF5 SWAP1 PUSH2 0x2DEC SWAP1 PUSH2 0x2DDE SWAP1 PUSH2 0x2DA2 SWAP1 PUSH1 0x2 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1AEB SWAP1 DUP6 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x22 SLOAD SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x22 SSTORE PUSH1 0x13 SLOAD PUSH1 0xE SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 AND SWAP1 PUSH2 0x2E36 SWAP1 PUSH2 0x2E28 SWAP1 PUSH2 0x2DA2 SWAP1 PUSH1 0x2 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x1AEB SWAP1 DUP8 SWAP1 PUSH2 0x2AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x22 SLOAD PUSH1 0x16 SLOAD PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP5 PUSH2 0x2F07 SWAP5 SWAP1 SWAP4 PUSH2 0x2633 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x2F13 DUP6 DUP3 PUSH2 0x34D3 JUMP JUMPDEST POP POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x18 SLOAD PUSH1 0xA EXP PUSH3 0x186A0 MUL PUSH1 0x22 SLOAD LT ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH2 0x2F5A PUSH2 0x2F28 JUMP JUMPDEST PUSH2 0x2F95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x384A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2FA6 SWAP1 PUSH1 0x2 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x13 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2FE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP ADDRESS DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3012 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x13 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x308D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x11 SLOAD PUSH1 0x14 SLOAD SWAP3 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 DUP2 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x44 DUP6 ADD SWAP1 DUP2 MSTORE DUP11 MLOAD PUSH1 0xA4 DUP7 ADD MSTORE DUP11 MLOAD SWAP7 SWAP10 SWAP6 SWAP1 SWAP8 AND SWAP8 PUSH4 0x38ED1739 SWAP8 DUP13 SWAP8 DUP13 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP2 SWAP3 PUSH1 0xC4 SWAP1 SWAP3 ADD SWAP2 DUP8 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3143 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x312B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x316C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3180 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x31C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x31DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3228 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3210 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 DUP2 KECCAK256 SLOAD ADDRESS DUP1 DUP4 MSTORE DUP6 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 ADD DUP3 SSTORE SWAP4 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE SWAP3 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x22 DUP1 SLOAD DUP13 SWAP1 SUB SWAP1 SSTORE SWAP1 DUP3 MSTORE SLOAD SWAP1 SWAP6 POP PUSH2 0x328D SWAP5 POP SWAP3 POP DUP6 SWAP2 POP POP PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE SWAP1 POP PUSH2 0x32A1 ADDRESS DUP3 PUSH2 0x364B JUMP JUMPDEST POP POP PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3303 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x28E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x28CA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x330F JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3347 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x13 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x3372 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x3398 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0x84 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x44 DUP7 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0xA4 DUP8 ADD MSTORE DUP9 MLOAD SWAP7 SWAP1 SWAP8 AND SWAP7 PUSH4 0x5C11D795 SWAP7 DUP11 SWAP7 SWAP5 SWAP6 DUP11 SWAP6 SWAP1 SWAP3 SWAP2 PUSH1 0xC4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP1 DUP9 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3425 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x340D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3462 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x14 SLOAD PUSH1 0x13 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA67D2C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP4 POP PUSH4 0xA67D2C7 SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x34EB SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3558 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x356E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x11 SLOAD PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xE8E33700 SWAP2 ADDRESS SWAP2 AND DUP6 DUP6 PUSH1 0x0 DUP1 PUSH2 0x3598 PUSH2 0x1CAC JUMP JUMPDEST TIMESTAMP PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x361B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x362F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x398A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36CD DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x371D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39DB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x9 SLOAD SWAP2 SWAP1 PUSH2 0x288E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3900 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x480 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E6365436C PUSH2 0x696D KECCAK256 GASPRICE KECCAK256 SLOAD PUSH9 0x657265206973206E6F KECCAK256 PUSH19 0x657761726420616D6F756E746E6F7420656E6F PUSH22 0x67687420696E737572616E636520706F6F6C2062616C PUSH2 0x6E63 PUSH6 0x536166654D61 PUSH21 0x683A206D756C7469706C69636174696F6E206F7665 PUSH19 0x666C6F774F776E61626C653A2063616C6C6572 KECCAK256 PUSH10 0x73206E6F742074686520 PUSH16 0x776E657242455032303A207472616E73 PUSH7 0x657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x655F7365 PUSH15 0x646572206D75737420626520677265 PUSH2 0x7465 PUSH19 0x206F7220657175616C73207468616E206C696D PUSH10 0x7431DDF252AD1BE2C89B PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4D PUSH10 0x6E7461626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206D696E7465 PUSH19 0x42455032303A2064656372656173656420616C PUSH13 0x6F77616E63652062656C6F7720 PUSH27 0x65726F42455032303A206275726E2066726F6D20746865207A6572 PUSH16 0x206164647265737370726573616C6520 PUSH21 0x6F74616C206D757374206265206C657373206F7220 PUSH6 0x7175616C7320 PUSH21 0x68616E206C696D69743242455032303A206275726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636542455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220753E4B169568 0xAC PUSH13 0xFB8A0579CE50CA61A19892B820 DUP14 0xBD 0x27 0xCD 0xDA 0x21 0xBC 0xC7 POP 0x29 XOR PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "14407:18774:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24564:55;;;:::i;:::-;;;;;;;;;;;;;;;;17268:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17857:145;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17857:145:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;17358:90;;;:::i;6243:130::-;;;;;;;;;;;;;;;;-1:-1:-1;6243:130:0;-1:-1:-1;;;;;6243:130:0;;:::i;:::-;;18007:291;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18007:291:0;;;;;;;;;;;;;;;;;:::i;25000:39::-;;;:::i;28872:394::-;;;;;;;;;;;;;;;;-1:-1:-1;28872:394:0;-1:-1:-1;;;;;28872:394:0;;:::i;17084:85::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18303:192;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18303:192:0;;;;;;;;:::i;15160:25::-;;;:::i;:::-;;;;-1:-1:-1;;;;;15160:25:0;;;;;;;;;;;;;;16094:565;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16094:565:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15191:40::-;;;:::i;15236:43::-;;;:::i;6093:147::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6093:147:0;;-1:-1:-1;6093:147:0;;-1:-1:-1;;;;;6093:147:0:i;16700:167::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16700:167:0;;-1:-1:-1;16700:167:0;;-1:-1:-1;;;;16700:167:0:i;29320:234::-;;;;;;;;;;;;;;;;-1:-1:-1;29320:234:0;-1:-1:-1;;;;;29320:234:0;;:::i;17453:107::-;;;;;;;;;;;;;;;;-1:-1:-1;17453:107:0;-1:-1:-1;;;;;17453:107:0;;:::i;5277:125::-;;;:::i;24735:92::-;;;:::i;29612:1723::-;;;;;;;;;;;;;;;;-1:-1:-1;29612:1723:0;-1:-1:-1;;;;;29612:1723:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24413:29;;;:::i;16962:117::-;;;:::i;25939:1339::-;;;;;;;;;;;;;;;;-1:-1:-1;25939:1339:0;;;;;;-1:-1:-1;;;;;25939:1339:0;;:::i;5805:24::-;;;;;;;;;;;;;;;;-1:-1:-1;5805:24:0;;:::i;15125:31::-;;;:::i;16872:85::-;;;:::i;15053:28::-;;;:::i;14992:25::-;;;:::i;5093:70::-;;;:::i;31815:30::-;;;:::i;17174:89::-;;;:::i;15021:28::-;;;:::i;14960:::-;;;:::i;15332:36::-;;;:::i;25627:29::-;;;:::i;18748:113::-;;;;;;;;;;;;;;;;-1:-1:-1;18748:113:0;;:::i;18500:243::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18500:243:0;;;;;;;;:::i;28466:375::-;;;:::i;17565:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17565:149:0;;;;;;;;:::i;5760:41::-;;;;;;;;;;;;;;;;-1:-1:-1;5760:41:0;-1:-1:-1;;;;;5760:41:0;;:::i;27353:522::-;;;:::i;24446:32::-;;;:::i;27972:450::-;;;;;;;;;;;;;;;;-1:-1:-1;27972:450:0;-1:-1:-1;;;;;27972:450:0;;:::i;15983:106::-;;;;;;;;;;;;;;;;-1:-1:-1;15983:106:0;;;;:::i;24626:91::-;;;:::i;31779:32::-;;;:::i;25677:102::-;;;;;;;;;;;;;;;;-1:-1:-1;25677:102:0;;:::i;24847:25::-;;;:::i;15285:43::-;;;:::i;24890:60::-;;;:::i;17719:133::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17719:133:0;;;;;;;;;;:::i;25159:41::-;;;;;;;;;;;;;;;;-1:-1:-1;25159:41:0;-1:-1:-1;;;;;25159:41:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;15404:27;;;:::i;5407:100::-;;;;;;;;;;;;;;;;-1:-1:-1;5407:100:0;-1:-1:-1;;;;;5407:100:0;;:::i;5930:160::-;;;;;;;;;;;;;;;;-1:-1:-1;5930:160:0;-1:-1:-1;;;;;5930:160:0;;:::i;24529:29::-;;;:::i;15372:26::-;;;:::i;24564:55::-;;;;:::o;17268:85::-;17343:5;17336:12;;;;;;;;-1:-1:-1;;17336:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17316:13;;17336:12;;17343:5;;17336:12;;17343:5;17336:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17268:85;:::o;17857:145::-;17931:4;17942:39;17951:12;:10;:12::i;:::-;17965:7;17974:6;17942:8;:39::i;:::-;-1:-1:-1;17993:4:0;17857:145;;;;;:::o;17358:90::-;17431:12;;17358:90;:::o;6243:130::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;6307:18:0;::::1;6328:5;6307:18:::0;;;:9:::1;:18;::::0;;;;;;;:26;;-1:-1:-1;;6307:26:0::1;::::0;;6343:25;;;;;;::::1;::::0;;;;;;;;::::1;6243:130:::0;:::o;18007:291::-;18104:4;18115:36;18125:6;18133:9;18144:6;18115:9;:36::i;:::-;18156:121;18165:6;18173:12;:10;:12::i;:::-;18187:89;18225:6;18187:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18187:19:0;;;;;;:11;:19;;;;;;18207:12;:10;:12::i;:::-;-1:-1:-1;;;;;18187:33:0;;;;;;;;;;;;-1:-1:-1;18187:33:0;;;:89;:37;:89::i;:::-;18156:8;:121::i;:::-;-1:-1:-1;18289:4:0;18007:291;;;;;:::o;25000:39::-;;;;:::o;28872:394::-;28935:4;-1:-1:-1;;;;;28949:51:0;;28945:65;;-1:-1:-1;29009:1:0;29002:8;;28945:65;29060:11;:18;29027:15;;-1:-1:-1;;29060:22:0;29047:202;29084:5;;29047:202;;29125:11;29137:1;29125:14;;;;;;;;;;;;;;;29140:1;29125:17;;;;;;;;;;;;;;;;29113:9;;:29;29106:4;:36;29102:142;;;29211:8;:17;29220:7;-1:-1:-1;;;;;29211:17:0;-1:-1:-1;;;;;29211:17:0;;;;;;;;;;;;:26;;;29205:3;29185:11;29197:1;29185:14;;;;;;;;;;;;;;;29200:1;29185:17;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29158:17:0;;;;:8;:17;;;;;;;:24;:44;:50;;;;;;:79;29151:86;;;;;;29102:142;-1:-1:-1;;29091:3:0;29047:202;;;;29260:1;29253:8;;;28872:394;;;;:::o;17084:85::-;17155:9;;;;17084:85;:::o;18303:192::-;18380:4;18391:83;18400:12;:10;:12::i;:::-;18414:7;18423:50;18462:10;18423:11;:25;18435:12;:10;:12::i;:::-;-1:-1:-1;;;;;18423:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;18423:25:0;;;:34;;;;;;;;;;;:38;:50::i;15160:25::-;;;-1:-1:-1;;;;;15160:25:0;;:::o;16094:565::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;16264:10:::1;:24:::0;;-1:-1:-1;;;;;16264:24:0;;::::1;-1:-1:-1::0;;;;;;16264:24:0;;::::1;;::::0;;;16293:16:::1;:36:::0;;;;::::1;::::0;;::::1;;::::0;;16334:11:::1;:26:::0;;;;::::1;::::0;;::::1;;::::0;;16444:17:::1;:38:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;16531:28:::1;::::0;;-1:-1:-1;;;16531:28:0;;;;16424:14;;16444:38;16531:26:::1;::::0;:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;16444:38;16531:28;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;16531:28:0;16587:11:::1;::::0;16511:88:::1;::::0;;-1:-1:-1;;;16511:88:0;;16580:4:::1;16511:88;::::0;::::1;::::0;-1:-1:-1;;;;;16587:11:0;;::::1;16511:88:::0;;;;;;:60;;;::::1;::::0;::::1;::::0;:88;;;;;16531:28:::1;::::0;16511:88;;;;;;;16587:11:::1;16511:60:::0;:88;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;16511:88:0;16487:21:::1;:112:::0;;-1:-1:-1;;;;;16487:112:0;;::::1;-1:-1:-1::0;;;;;;16487:112:0;;::::1;;::::0;;;16622:12:::1;:28:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;16094:565:0:o;15191:40::-;;;-1:-1:-1;;;15191:40:0;;;;;:::o;15236:43::-;;;;:::o;6093:147::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;6168:6:::1;6164:72;6180:8;:15;6178:1;:17;6164:72;;;6208:22;6218:8;6227:1;6218:11;;;;;;;;;;;;;;6208:9;:22::i;:::-;6197:3;;6164:72;;;;6093:147:::0;:::o;16700:167::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;16777:7;;16762:12:::1;:22:::0;16777:7:::1;16801::::0;::::1;::::0;16789:9:::1;:19:::0;16828:7;;::::1;::::0;16813:12:::1;:22:::0;16855:7;::::1;::::0;16840:12:::1;:22:::0;16700:167::o;29320:234::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;29386:17:::1;29413:5;-1:-1:-1::0;;;;;29406:23:0::1;;29438:4;29406:38;;;;;;;;;;;;;-1:-1:-1::0;;;;;29406:38:0::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;29406:38:0;;-1:-1:-1;;;;;;29449:22:0;::::1;;29472:7;:5;:7::i;:::-;29481:12;29449:45;;;;;;;;;;;;;-1:-1:-1::0;;;;;29449:45:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;29519:1:0::1;29499:17;:21:::0;;;29525:20:::1;:24:::0;-1:-1:-1;;29320:234:0:o;17453:107::-;-1:-1:-1;;;;;17537:18:0;17519:4;17537:18;;;:9;:18;;;;;;;17453:107::o;5277:125::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;5370:1:::1;5354:6:::0;;5333:40:::1;::::0;-1:-1:-1;;;;;5354:6:0;;::::1;::::0;5333:40:::1;::::0;5370:1;;5333:40:::1;5395:1;5378:19:::0;;-1:-1:-1;;;;;;5378:19:0::1;::::0;;5277:125::o;24735:92::-;;;;:::o;29612:1723::-;29675:10;29687:22;;:::i;:::-;29711:21;;:::i;:::-;-1:-1:-1;;;;;29891:17:0;;29734:12;29891:17;;;:8;:17;;;;;:24;29948:14;;29969:28;;;29930:15;-1:-1:-1;;;29976:3:0;;29891:24;30039:31;;30057:13;;30039:31;;;30053:1;30039:31;30032:3;;;;30025:6;;:11;;;;;;;;;;:45;30101:13;;30094:3;;;;30101:23;;;;;30087:6;;:11;;;;;;;;;;:37;30157:12;;30150:3;;;;30143:6;;:11;;;;;;;;;;:26;30207:18;30217:7;30207:9;:18::i;:::-;30200:3;;;;30193:6;;:11;;;;;;;;;;;;;;;:32;;;;-1:-1:-1;;;;;30259:18:0;;;;;;:9;:18;;;;;;;30252:3;;;;30245:6;;:11;;;;;;;;;;:32;-1:-1:-1;;;;;30314:51:0;;;:96;;30379:11;;30372:38;;;-1:-1:-1;;;30372:38:0;;-1:-1:-1;;;;;30372:38:0;;;;;;;;;30379:11;;;;;30372:29;;:38;;;;;;;;;;;;;;30379:11;30372:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30372:38:0;30314:96;;;30368:1;30314:96;30307:3;;;;30300:6;;:11;;;;;;;;;;:110;30444:24;30460:7;30444:15;:24::i;:::-;30437:3;;;;30430:6;;:11;;;;;;;;;;:38;30504:17;;30497:3;;;;30490:6;;:11;;;;;;;;;;:31;30540:20;;30533:3;;;;30526:6;;:11;;;;;;;;;;:34;30579:20;;30572:3;;;;30565:6;;:11;;;;;;;;;;:34;30618:18;;30611:3;;;;30604:6;;:11;;;;;;;;;;;;;;;:32;;;;30737:11;;30760:21;;30730:52;;;-1:-1:-1;;;30730:52:0;;-1:-1:-1;;;;;30760:21:0;;;30730:52;;;;;;30737:11;;;;;30730:29;;:52;;;;;;;;;;;30737:11;30730:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30730:52:0;30723:3;;;;30716:6;;:11;;;;;;;;;;;;;;;:66;;;;30811:21;;-1:-1:-1;;;;;30811:21:0;30801:32;;;;:9;:32;;;;;;;30811:21;30794:3;;;30787:6;;:11;;;;;;;;;;;;;;;:46;;;;30870:4;30852:24;;;;:9;:24;;;;;;;30845:3;;;;30838:6;;:11;;;;;;;;;;:38;30887:1;;-1:-1:-1;30887:1:0;30943:308;30959:7;:14;30957:16;;30943:308;;;30987:11;31000:13;31015:16;31046:7;31054:1;31046:10;;;;;;;;;;;;;;;;;;31037:42;;;-1:-1:-1;;;31037:42:0;;-1:-1:-1;;;;;31037:42:0;;;;;;;;;31046:10;;;;;31037:33;;:42;;;;;;;;;;;;;;31046:10;31037:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31037:42:0;;;;;;;;;;;31091:3;;;;31037:42;;-1:-1:-1;31037:42:0;;-1:-1:-1;31037:42:0;;-1:-1:-1;31037:42:0;;31085:5;;:10;;;;;;;;;;:19;31116:3;;;;31123:8;;31110:5;;:10;;;;;;;;;;:21;31143:3;;;;31150:11;;31137:5;;:10;;;;;;;;;;:24;31201:7;:10;;31209:1;;31201:10;;;;;;;;;;;;;;;;;31192:40;;;-1:-1:-1;;;31192:40:0;;;;-1:-1:-1;;;;;31201:10:0;;;;31192:38;;:40;;;;;;;;;;31201:10;31192:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31192:40:0;31185:59;;;-1:-1:-1;;;31185:59:0;;;;-1:-1:-1;;;;;31185:57:0;;;;;;:59;;;;;31192:40;;31185:59;;;;;;;;:57;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31185:59:0;31173:3;;;;31180:65;;;;;31167:5;;:10;;;;;;;;;;:78;-1:-1:-1;;;30975:3:0;;30943:308;;;-1:-1:-1;31282:21:0;;31265:48;;;-1:-1:-1;;;31265:48:0;;;;31325:4;;-1:-1:-1;;;;;31282:21:0;;31265:46;;:48;;;;;;;;;;;;;;31282:21;31265:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31265:48:0;29612:1723;;;;-1:-1:-1;29612:1723:0;;-1:-1:-1;;;;;31265:65:0;;;;;29612:1723;-1:-1:-1;;;29612:1723:0:o;24413:29::-;;;;:::o;16962:117::-;17061:12;;17051:9;;17038:12;;17025;;:25;:35;:48;16962:117;:::o;25939:1339::-;26100:12;;26015:10;;25997:15;;26089:8;26081:16;;26100:12;26081:31;;;;;;-1:-1:-1;;;;;;26127:19:0;;26119:61;;;;;-1:-1:-1;;;26119:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;26208:9;26193:12;;:24;:60;;;;;26239:14;;26221:15;:32;26193:60;26185:85;;;;;-1:-1:-1;;;26185:85:0;;;;;;;;;;;;-1:-1:-1;;;26185:85:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;26300:17:0;;;;;;:8;:17;;;;;:24;26283:13;;26300:36;;;-1:-1:-1;26283:53:0;26275:111;;;;-1:-1:-1;;;26275:111:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26416:17:0;;;;;;:8;:17;;;;;:24;26399:13;;26416:36;;;-1:-1:-1;26399:53:0;26391:114;;;;-1:-1:-1;;;26391:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26569:11;;26604:10;;26562:60;;;-1:-1:-1;;;26562:60:0;;-1:-1:-1;;;;;26562:60:0;;;;;;;26604:10;;;26562:60;;;;;;;;;;;;26569:11;;;;;26562:32;;:60;;;;;;;;;;;;;;26569:11;;26562:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26627:25:0;;-1:-1:-1;26633:7:0;26642:9;26627:5;:25::i;:::-;-1:-1:-1;;;;;26691:20:0;;;26688:408;;26719:53;26725:8;26735:36;26767:3;26735:27;26749:12;;26735:9;:13;;:27;;;;:::i;:::-;:31;;:36::i;:::-;26719:5;:53::i;:::-;26807:36;26839:3;26807:27;26821:12;;26807:9;:13;;:27;;;;:::i;:36::-;-1:-1:-1;;;;;26778:18:0;;;;;;:8;:18;;;;;:65;;;;;;;26905:12;;26891:36;;26923:3;;26891:27;;:9;;:13;:27::i;:36::-;26875:12;:52;;;;;;;;26964:12;;26950:36;;26982:3;;26950:27;;:9;;:13;:27::i;:36::-;26933:13;:53;;;;;;;27028:12;;26999:90;;27008:8;;27018:32;;27046:3;;27018:23;;:5;;:9;:23::i;:32::-;27052:36;27084:3;27052:27;27066:12;;27052:9;:13;;:27;;;;:::i;:36::-;26999:90;;;-1:-1:-1;;;;;26999:90:0;;;;;;;;;;;;;;;;;;;;;;;;;26688:408;-1:-1:-1;;;;;27102:17:0;;;;;;:8;:17;;;;;;;;;:37;;;;;;27170:12;:25;;;;;;;27200:13;:26;;;;;;27238:35;;;;;;;;;;;;;;;;;;;;;;;;;;25939:1339;;;;:::o;5805:24::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5805:24:0;;-1:-1:-1;5805:24:0;:::o;15125:31::-;;;-1:-1:-1;;;;;15125:31:0;;:::o;16872:85::-;16924:7;16945;:5;:7::i;:::-;16938:14;;16872:85;:::o;15053:28::-;;;;:::o;14992:25::-;;;;:::o;5093:70::-;5131:7;5152:6;-1:-1:-1;;;;;5152:6:0;5093:70;:::o;31815:30::-;;;;:::o;17174:89::-;17251:7;17244:14;;;;;;;;-1:-1:-1;;17244:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17224:13;;17244:14;;17251:7;;17244:14;;17251:7;17244:14;;;;;;;;;;;;;;;;;;;;;;;;15021:28;;;;:::o;14960:::-;;;;:::o;15332:36::-;;;-1:-1:-1;;;;;15332:36:0;;:::o;25627:29::-;;;;:::o;18748:113::-;6423:10;18802:4;6413:21;;;:9;:21;;;;;;;;;;:29;;;;:52;;;6458:7;:5;:7::i;:::-;-1:-1:-1;;;;;6446:19:0;:10;-1:-1:-1;;;;;6446:19:0;;6413:52;6405:99;;;;-1:-1:-1;;;6405:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18813:27:::1;18819:12;:10;:12::i;:::-;18833:6;18813:5;:27::i;:::-;-1:-1:-1::0;18852:4:0::1;18748:113:::0;;;:::o;18500:243::-;18582:4;18593:129;18602:12;:10;:12::i;:::-;18616:7;18625:96;18664:15;18625:96;;;;;;;;;;;;;;;;;:11;:25;18637:12;:10;:12::i;:::-;-1:-1:-1;;;;;18625:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;18625:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;28466:375::-;28516:10;28498:15;28552:24;28516:10;28552:15;:24::i;:::-;28531:45;-1:-1:-1;;;;;;28589:19:0;;28581:52;;;;;-1:-1:-1;;;28581:52:0;;;;;;;;;;;;-1:-1:-1;;;28581:52:0;;;;;;;;;;;;;;;28660:1;28646:13;:15;28638:49;;;;;-1:-1:-1;;;28638:49:0;;;;;;;;;;;;-1:-1:-1;;;28638:49:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;28692:17:0;;;;;;:8;:17;;;;;;;;;:26;;:43;;;;;;28787:49;;;;;;;;;;28820:15;28787:49;;;;;;;;;;;;;;28466:375;;:::o;17565:149::-;17640:4;17651:42;17661:12;:10;:12::i;:::-;17675:9;17686:6;17651:9;:42::i;5760:41::-;;;;;;;;;;;;;;;:::o;27353:522::-;27408:10;27390:15;27444:18;27408:10;27444:9;:18::i;:::-;27423:39;-1:-1:-1;;;;;;27475:19:0;;27467:52;;;;;-1:-1:-1;;;27467:52:0;;;;;;;;;;;;-1:-1:-1;;;27467:52:0;;;;;;;;;;;;;;;27546:1;27532:13;:15;27524:60;;;;-1:-1:-1;;;27524:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27596:11;;27589:52;;;-1:-1:-1;;;27589:52:0;;-1:-1:-1;;;;;27589:52:0;;;;;;;;;;;;;;;27596:11;;;;;27589:28;;:52;;;;;;;;;;;;;;27596:11;;27589:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;27646:17:0;;;;;;:8;27589:52;27646:17;;;;;;;;:25;;:42;;;;;;27747:17;:34;;;;;;;27786:20;:37;;;;;;27835:35;;;;;;;;;;;;;;;;;;;;;;27353:522;;:::o;24446:32::-;;;;:::o;27972:450::-;28029:18;28061:13;;28076:1;28061:16;:71;;;-1:-1:-1;;;;;;28081:51:0;;;28061:71;28057:348;;;-1:-1:-1;28153:1:0;28146:8;;28057:348;28275:13;;-1:-1:-1;;;;;28245:17:0;;;;;;:8;:17;;;;;:24;28219:20;;28197:17;;:92;;28275:13;28197:73;;28245:24;;28197:43;;:21;:43::i;:::-;:47;;:73::i;:92::-;-1:-1:-1;;;;;28321:17:0;;;;;;:8;:17;;;;;:25;;;28181:108;;-1:-1:-1;28305:41:0;;28301:95;;;-1:-1:-1;;;;;28371:17:0;;;;;;:8;:17;;;;;:25;;;28355:41;;28348:48;;28301:95;-1:-1:-1;28416:1:0;27972:450;;;:::o;15983:106::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;16054:21:::1;:30:::0;;;::::1;;-1:-1:-1::0;;;16054:30:0::1;-1:-1:-1::0;;;;16054:30:0;;::::1;::::0;;;::::1;::::0;;15983:106::o;24626:91::-;;;;:::o;31779:32::-;;;;:::o;25677:102::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;25746:12:::1;:28:::0;25677:102::o;24847:25::-;;;;:::o;15285:43::-;;;-1:-1:-1;;;;;15285:43:0;;:::o;24890:60::-;;;;:::o;17719:133::-;-1:-1:-1;;;;;17820:18:0;;;17802:4;17820:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;17719:133::o;25159:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15404:27::-;;;-1:-1:-1;;;;;15404:27:0;;:::o;5407:100::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;5474:28:::1;5493:8;5474:18;:28::i;:::-;5407:100:::0;:::o;5930:160::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;5991:21:0;::::1;;::::0;;;6015:4:::1;5991:21;::::0;;;;;;;:28;;-1:-1:-1;;5991:28:0::1;::::0;::::1;::::0;;6024:7:::1;:24:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;6024:24:0::1;::::0;::::1;::::0;;6058:27;;;;;;;::::1;::::0;;;;;;;;;::::1;5930:160:::0;:::o;24529:29::-;;;;:::o;15372:26::-;;;-1:-1:-1;;;;;15372:26:0;;:::o;3128:89::-;3202:10;3128:89;:::o;23703:308::-;-1:-1:-1;;;;;23788:19:0;;23780:68;;;;-1:-1:-1;;;23780:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23861:21:0;;23853:68;;;;-1:-1:-1;;;23853:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23928:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;23974:32;;;;;;;;;;;;;;;;;23703:308;;;:::o;18994:1541::-;-1:-1:-1;;;;;19083:20:0;;19075:70;;;;-1:-1:-1;;;19075:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19158:23:0;;19150:71;;;;-1:-1:-1;;;19150:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19389:16:0;;19226:18;19389:16;;;:8;:16;;;;;;;;:23;;19358:25;;;;;19336:9;:17;;;;;;19247:6;;;;19336:77;;:48;;:21;:48::i;:::-;:52;;:77::i;:::-;:85;;19328:135;;;;-1:-1:-1;;;19328:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19488:71;19510:6;19488:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19488:17:0;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;19468:17:0;;;;;;;:9;:17;;;;;:91;;;;19600:21;;;;19592:29;;;;19641:32;;;;19680:323;;;;19713:40;19749:3;19713:31;19730:13;:11;:13::i;:::-;19713:6;;19724:3;:19;19713:10;:31::i;:40::-;19697:56;;19759:14;19776:69;19841:3;19776:60;19823:12;;19810;;19800:9;;19787:12;;:22;:35;:48;19776:6;:10;;:60;;;;:::i;:69::-;19896:4;19878:24;;;;:9;:24;;;;;;19759:86;;-1:-1:-1;19878:39:0;;19759:86;19878:28;:39::i;:::-;19869:4;19851:24;;;;:9;:24;;;;;;;;;:66;;;;19955:42;;;;;;;19869:4;;-1:-1:-1;;;;;19955:42:0;;;-1:-1:-1;;;;;;;;;;;19955:42:0;;;;;;;;;19680:323;;-1:-1:-1;;;;;20030:20:0;;;;;;:9;:20;;;;;;:39;;20055:13;20030:24;:39::i;:::-;-1:-1:-1;;;;;20007:20:0;;;;;;:9;:20;;;;;:62;;;;20146:24;20164:4;20146:9;:24::i;:::-;20202:16;;20118:52;;-1:-1:-1;;;;20202:16:0;;;;20201:17;:30;;;;-1:-1:-1;20223:8:0;;-1:-1:-1;;;20223:8:0;;;;20222:9;20201:30;:40;;;;;20236:5;20235:6;20201:40;:51;;;;;20246:6;20245:7;20201:51;:76;;;;-1:-1:-1;20256:21:0;;-1:-1:-1;;;20256:21:0;;;;20201:76;20197:280;;;20310:20;20288:18;;:42;20285:76;;20338:16;:14;:16::i;:::-;20436:12;:10;:12::i;:::-;20432:40;;;20457:8;:6;:8::i;:::-;20505:9;-1:-1:-1;;;;;20488:42:0;20497:6;-1:-1:-1;;;;;20488:42:0;-1:-1:-1;;;;;;;;;;;20516:13:0;20488:42;;;;;;;;;;;;;;;;;;18994:1541;;;;;;;:::o;3738:159::-;3818:4;3845:12;3837:6;;;;3829:29;;;;-1:-1:-1;;;3829:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3872:5:0;;;3738:159::o;3462:148::-;3514:4;3534:5;;;3552:6;;;;3544:46;;;;;-1:-1:-1;;;3544:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3604:1;3462:148;-1:-1:-1;;;3462:148:0:o;23003:334::-;-1:-1:-1;;;;;23070:21:0;;23062:65;;;;;-1:-1:-1;;;23062:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;23153:10;;23140:12;;:23;23132:53;;;;;-1:-1:-1;;;23132:53:0;;;;;;;;;;;;-1:-1:-1;;;23132:53:0;;;;;;;;;;;;;;;23205:12;;:24;;23222:6;23205:16;:24::i;:::-;23190:12;:39;-1:-1:-1;;;;;23255:18:0;;;;;;:9;:18;;;;;;:30;;23278:6;23255:22;:30::i;:::-;-1:-1:-1;;;;;23234:18:0;;;;;;:9;:18;;;;;;;;:51;;;;23295:37;;;;;;;23234:18;;;;-1:-1:-1;;;;;;;;;;;23295:37:0;;;;;;;;;23003:334;;:::o;3902:200::-;3954:4;3973:6;3969:32;;-1:-1:-1;3994:1:0;3987:8;;3969:32;4016:5;;;4020:1;4016;:5;:1;4034:5;;;;;:10;4026:56;;;;-1:-1:-1;;;4026:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4107:114;4159:4;4177:39;4181:1;4184;4177:39;;;;;;;;;;;;;;;;;:3;:39::i;5512:208::-;-1:-1:-1;;;;;5580:22:0;;5572:73;;;;-1:-1:-1;;;5572:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5676:6;;;5655:38;;-1:-1:-1;;;;;5655:38:0;;;;5676:6;;;5655:38;;;5698:6;:17;;-1:-1:-1;;;;;;5698:17:0;-1:-1:-1;;;;;5698:17:0;;;;;;;;;;5512:208::o;3615:118::-;3667:4;3685:43;3689:1;3692;3685:43;;;;;;;;;;;;;;;;;:3;:43::i;20618:1327::-;15488:16;:23;;-1:-1:-1;;;;15488:23:0;-1:-1:-1;;;15488:23:0;;;20720:4:::1;15488:23:::0;20702:24;;;:9:::1;:24;::::0;;;;;;20816:64:::1;20878:1;20816:57;20859:13;:11;:13::i;:::-;20841:12;::::0;20816:38:::1;::::0;:20;;:24:::1;:38::i;:64::-;20795:85:::0;-1:-1:-1;20909:9:0::1;20921:39;:20:::0;20795:85;20921:24:::1;:39::i;:::-;20994:11;::::0;20987:44:::1;::::0;;-1:-1:-1;;;20987:44:0;;21025:4:::1;20987:44;::::0;::::1;::::0;;;20909:51;;-1:-1:-1;20965:19:0::1;::::0;-1:-1:-1;;;;;20994:11:0;;::::1;::::0;20987:29:::1;::::0;:44;;;;;::::1;::::0;;;;;;;;;20994:11;20987:44;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;20987:44:0;;-1:-1:-1;21062:23:0::1;21080:4:::0;21062:17:::1;:23::i;:::-;21149:11;::::0;21142:44:::1;::::0;;-1:-1:-1;;;21142:44:0;;21180:4:::1;21142:44;::::0;::::1;::::0;;;21126:13:::1;::::0;21142:64:::1;::::0;21191:14;;-1:-1:-1;;;;;21149:11:0;;::::1;::::0;21142:29:::1;::::0;:44;;;;;::::1;::::0;;;;;;;;;21149:11;21142:44;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;21142:44:0;;:48:::1;:64::i;:::-;21126:80;;21370:90;21392:67;21420:38;21438:19;21455:1;21438:12;;:16;;:19;;;;:::i;:::-;21420:13;:11;:13::i;:38::-;21405:9;::::0;21392:23:::1;::::0;:8;;:12:::1;:23::i;:67::-;21370:17;::::0;;:21:::1;:90::i;:::-;21350:17;:110:::0;21562:12:::1;::::0;21488:96:::1;::::0;21513:70:::1;::::0;21544:38:::1;::::0;21562:19:::1;::::0;21579:1:::1;21562:16;:19::i;21544:38::-;21526:12;::::0;21513:26:::1;::::0;:8;;:12:::1;:26::i;:70::-;21488:20;::::0;;:24:::1;:96::i;:::-;21465:20;:119:::0;21645:11:::1;::::0;21667:16:::1;::::0;21734:12:::1;::::0;-1:-1:-1;;;;;21645:11:0;;::::1;::::0;21638:28:::1;::::0;21667:16:::1;::::0;21685:70:::1;::::0;21716:38:::1;::::0;21734:19:::1;::::0;21751:1:::1;21734:16;:19::i;21716:38::-;21698:12;::::0;21685:26:::1;::::0;:8;;:12:::1;:26::i;:70::-;21638:118;;;;;;;;;;;;;-1:-1:-1::0;;;;;21638:118:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;21874:20:0::1;::::0;21851:17:::1;::::0;21809:11:::1;::::0;21802:44:::1;::::0;;-1:-1:-1;;;21802:44:0;;21840:4:::1;21802:44;::::0;::::1;::::0;;;21784:15:::1;::::0;21802:93:::1;::::0;21874:20;;21802:67:::1;::::0;21851:17;;-1:-1:-1;;;;;21809:11:0;;::::1;::::0;21802:29:::1;::::0;:44;;;;;21638:118:::1;::::0;21802:44;;;;;;;21809:11;21802:44;::::1;;::::0;::::1;;;;::::0;::::1;:93;21784:111;;21900:39;21913:13;21928:10;21900:12;:39::i;:::-;-1:-1:-1::0;;15522:16:0;:24;;-1:-1:-1;;;;15522:24:0;;;-1:-1:-1;;;;20618:1327:0:o;31984:121::-;32028:4;32087:12;;32076:2;:24;32070:3;:30;32046:20;;:54;;32039:61;;31984:121;:::o;32208:970::-;15598:8;:15;;-1:-1:-1;;;;15598:15:0;-1:-1:-1;;;15598:15:0;;;32264:12:::1;:10;:12::i;:::-;32256:59;;;;-1:-1:-1::0;;;32256:59:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32346:20;::::0;32328:15:::1;::::0;32346:27:::1;::::0;32371:1:::1;32346:24;:27::i;:::-;32434:16;::::0;;32448:1:::1;32434:16:::0;;;32410:21:::1;32434:16:::0;;::::1;::::0;;32328:45;;-1:-1:-1;32434:16:0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;32471:11:0::1;::::0;32461:7;;;;-1:-1:-1;;;;;;32471:11:0::1;::::0;32461:7;;-1:-1:-1;32471:11:0::1;::::0;32461:7:::1;;;;;;;;;:21;-1:-1:-1::0;;;;;32461:21:0::1;;;-1:-1:-1::0;;;;;32461:21:0::1;;;::::0;::::1;32511:4;32493;32498:1;32493:7;;;;;;;;-1:-1:-1::0;;;;;32493:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;32534:11:::1;::::0;32563:17:::1;::::0;32527:67:::1;::::0;;-1:-1:-1;;;32527:67:0;;32563:17;;::::1;32527:67;::::0;::::1;::::0;;;;;;;;32534:11;;;::::1;::::0;32527:27:::1;::::0;:67;;;;;32493:7;;32527:67;;;;;32534:11:::1;::::0;32527:67;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;32640:4:0::1;32599:20;32622:24:::0;;;:9:::1;32527:67;32622:24:::0;;;;;;;;32683:17:::1;::::0;32828:12:::1;::::0;32683:198;;-1:-1:-1;;;32683:198:0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;32828:12:0;;::::1;32683:198:::0;;;;;;32855:15:::1;32683:198:::0;;;;;;;;;;;;;;;;;;;;;32622:24;;32683:17;;;::::1;::::0;:42:::1;::::0;32740:10;;32809:4;;32828:12;;32855:15;;32683:198;;;;;;;;;::::1;::::0;::::1;::::0;;;32599:20;32683:198:::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;32683:198:0::1;::::0;::::1;;::::0;::::1;::::0;::::1;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;::::0;;-1:-1:-1;32683:198:0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;-1:-1:-1::0;;;;32683:198:0;;;::::1;;::::0;;;32926:12:::1;::::0;;-1:-1:-1;;;;;32926:12:0;;::::1;32916:23;::::0;;;:9:::1;:23;::::0;;;;;32906:4:::1;32888:24:::0;;;;;;:51;;;;::::1;::::0;;32954:12;;;;::::1;32944:23:::0;;;;;:27;;;32978:20:::1;:34:::0;;;;::::1;::::0;;33040:24;;;;32916:23;;-1:-1:-1;33040:42:0::1;::::0;-1:-1:-1;33040:24:0;-1:-1:-1;33069:12:0;;-1:-1:-1;;33040:28:0::1;:42::i;:::-;33087:18;:34:::0;;;::::1;::::0;;33017:65;-1:-1:-1;33126:34:0::1;33140:4;33017:65:::0;33126:5:::1;:34::i;:::-;-1:-1:-1::0;;15624:8:0;:16;;-1:-1:-1;;;;15624:16:0;;;-1:-1:-1;;32208:970:0:o;4226:300::-;4306:4;4393:12;4386:5;4378:28;;;;-1:-1:-1;;;4378:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4411:6;4424:1;4420;:5;;;;;;;4226:300;-1:-1:-1;;;;;4226:300:0:o;21992:493::-;22075:16;;;22089:1;22075:16;;;22051:21;22075:16;;;;;22051:21;22075:16;;;;;;;;;;-1:-1:-1;22075:16:0;22051:40;;22114:4;22096;22101:1;22096:7;;;;;;;;-1:-1:-1;;;;;22096:23:0;;;:7;;;;;;;;;:23;22134:11;;22124:7;;22134:11;;;22124:4;;22134:11;;22124:7;;;;;;-1:-1:-1;;;;;22124:21:0;;;:7;;;;;;;;;:21;22184:17;;22152:64;;22169:4;;22184:17;22204:11;22152:8;:64::i;:::-;22245:17;;22385:12;;22245:178;;-1:-1:-1;;;22245:178:0;;;;;;;;:17;:178;;;;;;-1:-1:-1;;;;;22385:12:0;;;22245:178;;;;;;22403:15;22245:178;;;;;;;;;;;;;;;;;;;;;:17;;;;;:71;;22322:11;;22245:17;;22375:4;;22245:178;;;;;;;;;;;;;;;;;:17;:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22445:12:0;;22468:11;;22430:50;;;-1:-1:-1;;;22430:50:0;;-1:-1:-1;;;;;22468:11:0;;;22430:50;;;;;;22445:12;;;;;-1:-1:-1;22430:37:0;;-1:-1:-1;22430:50:0;;;;;22445:12;;22430:50;;;;;;;22445:12;;22430:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21992:493;;:::o;22490:508::-;22653:17;;22621:64;;22638:4;;-1:-1:-1;;;;;22653:17:0;22673:11;22621:8;:64::i;:::-;22697:11;;22726:17;;22690:66;;;-1:-1:-1;;;22690:66:0;;-1:-1:-1;;;;;22726:17:0;;;22690:66;;;;;;;;;;;;22697:11;;;;;22690:27;;:66;;;;;;;;;;;;;;22697:11;;22690:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22787:17:0;;22842:11;;-1:-1:-1;;;;;22787:17:0;;;;:30;;22831:4;;22842:11;22859;22876:10;22787:17;;22960:7;:5;:7::i;:::-;22973:15;22787:206;;;;;;;;;;;;;-1:-1:-1;;;;;22787:206:0;;;;;;-1:-1:-1;;;;;22787:206:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22787:206:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;22490:508:0:o;23342:356::-;-1:-1:-1;;;;;23409:21:0;;23401:67;;;;-1:-1:-1;;;23401:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23496:68;23519:6;23496:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23496:18:0;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;23475:9;:18;23485:7;-1:-1:-1;;;;;23475:18:0;-1:-1:-1;;;;;23475:18:0;;;;;;;;;;;;:89;;;;23584:62;23601:6;23584:62;;;;;;;;;;;;;;;;;:12;;;:62;:16;:62::i;:::-;23569:12;:77;23656:37;;;;;;;;23682:1;;-1:-1:-1;;;;;23656:37:0;;;-1:-1:-1;;;;;;;;;;;23656:37:0;;;;;;;;23342:356;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2986400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "USDTAddress()": "1169",
                "USDTDecimals()": "1108",
                "allowance(address,address)": "1339",
                "approve(address,uint256)": "infinite",
                "balanceOf(address)": "1210",
                "claimReward()": "infinite",
                "communityAddress()": "1104",
                "communityFee()": "1109",
                "decimals()": "1104",
                "decreaseAllowance(address,uint256)": "infinite",
                "disableMinter(address)": "infinite",
                "emergencyWithdraw(address)": "infinite",
                "feeAddress()": "1105",
                "getOwner()": "1161",
                "getReward(address)": "infinite",
                "getStakerInfo(address)": "infinite",
                "getTotalFee()": "3506",
                "getUnlockAmount(address)": "infinite",
                "increaseAllowance(address,uint256)": "infinite",
                "insuranceFee()": "1066",
                "insurancePoolBalance()": "1065",
                "insurancePoolBurnt()": "1089",
                "isMinters(address)": "1225",
                "liquidityFee()": "1088",
                "minLiquidityAmount()": "1132",
                "mint(uint256)": "infinite",
                "minters(uint256)": "2104",
                "name()": "infinite",
                "owner()": "1106",
                "pancakeswapMDUSDTPair()": "1149",
                "pancakeswapRouter()": "1170",
                "presale(uint256,address)": "infinite",
                "presaleEndTime()": "1133",
                "presaleLimit1()": "1110",
                "presaleLimit2()": "1110",
                "presalePrice()": "1068",
                "presaleTotal()": "1065",
                "presaledTotal()": "1109",
                "presales(address)": "2907",
                "referralRate()": "1132",
                "renounceOwnership()": "infinite",
                "rewardFee()": "1131",
                "rewardPoolBalance()": "1066",
                "rewardedTotalBalance()": "1131",
                "setFees(uint256[4])": "infinite",
                "setInitialAddresses(address,address,address,address,address)": "infinite",
                "setMinter(address)": "infinite",
                "setMinters(address[])": "infinite",
                "setReferralRate(uint256)": "infinite",
                "setSwapAndLiquifyEnabled(bool)": "infinite",
                "storeAddress()": "1170",
                "swapAndLiquifyEnabled()": "1139",
                "symbol()": "infinite",
                "totalSupply()": "1067",
                "transfer(address,uint256)": "infinite",
                "transferFrom(address,address,uint256)": "infinite",
                "transferOwnership(address)": "infinite",
                "unlock()": "infinite"
              },
              "internal": {
                "_approve(address,address,uint256)": "infinite",
                "_burn(address,uint256)": "infinite",
                "_burnFrom(address,uint256)": "infinite",
                "_mint(address,uint256)": "infinite",
                "_transfer(address,address,uint256)": "infinite",
                "addLiquidity(uint256,uint256)": "infinite",
                "redeem()": "infinite",
                "redeemable()": "3253",
                "swapAndLiquify()": "infinite",
                "swapTokensForUSDT(uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "USDTAddress()": "ff920c74",
              "USDTDecimals()": "fd64e078",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "claimReward()": "b88a802f",
              "communityAddress()": "86e476dd",
              "communityFee()": "8961be6b",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "disableMinter(address)": "21a5ceee",
              "emergencyWithdraw(address)": "6ff1c9bc",
              "feeAddress()": "41275358",
              "getOwner()": "893d20e8",
              "getReward(address)": "c00007b0",
              "getStakerInfo(address)": "733bdef0",
              "getTotalFee()": "7ae316d0",
              "getUnlockAmount(address)": "3033bed8",
              "increaseAllowance(address,uint256)": "39509351",
              "insuranceFee()": "97c4fac7",
              "insurancePoolBalance()": "c9559786",
              "insurancePoolBurnt()": "8e33f3ed",
              "isMinters(address)": "ada3da15",
              "liquidityFee()": "98118cb4",
              "minLiquidityAmount()": "4d9e9e09",
              "mint(uint256)": "a0712d68",
              "minters(uint256)": "8623ec7b",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "pancakeswapMDUSDTPair()": "9a258a79",
              "pancakeswapRouter()": "db6754ed",
              "presale(uint256,address)": "7c2003e3",
              "presaleEndTime()": "249b7c19",
              "presaleLimit1()": "c8f0c577",
              "presaleLimit2()": "71e8ec68",
              "presalePrice()": "000e7fa8",
              "presaleTotal()": "dc1d85f6",
              "presaledTotal()": "da7a3687",
              "presales(address)": "efcd708f",
              "referralRate()": "a053ce1f",
              "renounceOwnership()": "715018a6",
              "rewardFee()": "8b424267",
              "rewardPoolBalance()": "7a5c08ae",
              "rewardedTotalBalance()": "baedc8d6",
              "setFees(uint256[4])": "6b74b211",
              "setInitialAddresses(address,address,address,address,address)": "49371b19",
              "setMinter(address)": "fca3b5aa",
              "setMinters(address[])": "547d0096",
              "setReferralRate(uint256)": "ca4863fd",
              "setSwapAndLiquifyEnabled(bool)": "c49b9a80",
              "storeAddress()": "f2c4da93",
              "swapAndLiquifyEnabled()": "4a74bb02",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "unlock()": "a69df4b5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dMtokenAmount\",\"type\":\"uint256\"}],\"name\":\"Presaled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMinter\",\"type\":\"bool\"}],\"name\":\"SetMinters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"name\":\"Unlocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDTDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"disableMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isEnd\",\"type\":\"bool\"},{\"internalType\":\"uint256[15]\",\"name\":\"params\",\"type\":\"uint256[15]\"},{\"internalType\":\"uint256[36]\",\"name\":\"pools\",\"type\":\"uint256[36]\"},{\"internalType\":\"bool\",\"name\":\"isFirst\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getUnlockAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insurancePoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insurancePoolBurnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLiquidityAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeswapMDUSDTPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeswapRouter\",\"outputs\":[{\"internalType\":\"contract IPancakeswapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"presale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleLimit1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleLimit2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presalePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaledTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"presales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardedTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"fees\",\"type\":\"uint256[4]\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_communityAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_RouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_USDTAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_storeAddress\",\"type\":\"address\"}],\"name\":\"setInitialAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMinter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_minters\",\"type\":\"address[]\"}],\"name\":\"setMinters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referralRate\",\"type\":\"uint256\"}],\"name\":\"setReferralRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setSwapAndLiquifyEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"DMToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 314,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 426,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "isMinters",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 429,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "minters",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 1265,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_balances",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1271,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_allowances",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1282,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_decimals",
                "offset": 0,
                "slot": "5",
                "type": "t_uint8"
              },
              {
                "astId": 1285,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_symbol",
                "offset": 0,
                "slot": "6",
                "type": "t_string_storage"
              },
              {
                "astId": 1288,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_name",
                "offset": 0,
                "slot": "7",
                "type": "t_string_storage"
              },
              {
                "astId": 1295,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_maxSupply",
                "offset": 0,
                "slot": "8",
                "type": "t_uint256"
              },
              {
                "astId": 1304,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "9",
                "type": "t_uint256"
              },
              {
                "astId": 1307,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "liquidityFee",
                "offset": 0,
                "slot": "10",
                "type": "t_uint256"
              },
              {
                "astId": 1310,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "rewardFee",
                "offset": 0,
                "slot": "11",
                "type": "t_uint256"
              },
              {
                "astId": 1313,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "insuranceFee",
                "offset": 0,
                "slot": "12",
                "type": "t_uint256"
              },
              {
                "astId": 1316,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "communityFee",
                "offset": 0,
                "slot": "13",
                "type": "t_uint256"
              },
              {
                "astId": 1318,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "communityAddress",
                "offset": 0,
                "slot": "14",
                "type": "t_address"
              },
              {
                "astId": 1320,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "feeAddress",
                "offset": 0,
                "slot": "15",
                "type": "t_address"
              },
              {
                "astId": 1323,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "swapAndLiquifyEnabled",
                "offset": 20,
                "slot": "15",
                "type": "t_bool"
              },
              {
                "astId": 1328,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "minLiquidityAmount",
                "offset": 0,
                "slot": "16",
                "type": "t_uint256"
              },
              {
                "astId": 1330,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "pancakeswapRouter",
                "offset": 0,
                "slot": "17",
                "type": "t_contract(IPancakeswapRouter)1217"
              },
              {
                "astId": 1332,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "pancakeswapMDUSDTPair",
                "offset": 0,
                "slot": "18",
                "type": "t_address"
              },
              {
                "astId": 1334,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "USDTAddress",
                "offset": 0,
                "slot": "19",
                "type": "t_address"
              },
              {
                "astId": 1336,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "storeAddress",
                "offset": 0,
                "slot": "20",
                "type": "t_address"
              },
              {
                "astId": 1338,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "inSwapAndLiquify",
                "offset": 20,
                "slot": "20",
                "type": "t_bool"
              },
              {
                "astId": 1352,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "inRedeem",
                "offset": 21,
                "slot": "20",
                "type": "t_bool"
              },
              {
                "astId": 1366,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "startTime",
                "offset": 0,
                "slot": "21",
                "type": "t_uint256"
              },
              {
                "astId": 2362,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "rewardPoolBalance",
                "offset": 0,
                "slot": "22",
                "type": "t_uint256"
              },
              {
                "astId": 2364,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "rewardedTotalBalance",
                "offset": 0,
                "slot": "23",
                "type": "t_uint256"
              },
              {
                "astId": 2367,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "USDTDecimals",
                "offset": 0,
                "slot": "24",
                "type": "t_uint256"
              },
              {
                "astId": 2377,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presalePrice",
                "offset": 0,
                "slot": "25",
                "type": "t_uint256"
              },
              {
                "astId": 2393,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presaleLimit1",
                "offset": 0,
                "slot": "26",
                "type": "t_uint256"
              },
              {
                "astId": 2409,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presaleLimit2",
                "offset": 0,
                "slot": "27",
                "type": "t_uint256"
              },
              {
                "astId": 2411,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presaledTotal",
                "offset": 0,
                "slot": "28",
                "type": "t_uint256"
              },
              {
                "astId": 2423,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presaleTotal",
                "offset": 0,
                "slot": "29",
                "type": "t_uint256"
              },
              {
                "astId": 2426,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presaleEndTime",
                "offset": 0,
                "slot": "30",
                "type": "t_uint256"
              },
              {
                "astId": 2437,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "presales",
                "offset": 0,
                "slot": "31",
                "type": "t_mapping(t_address,t_struct(Presale)2433_storage)"
              },
              {
                "astId": 2505,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "unlockSteps",
                "offset": 0,
                "slot": "32",
                "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage"
              },
              {
                "astId": 2508,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "referralRate",
                "offset": 0,
                "slot": "33",
                "type": "t_uint256"
              },
              {
                "astId": 3218,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "insurancePoolBalance",
                "offset": 0,
                "slot": "34",
                "type": "t_uint256"
              },
              {
                "astId": 3220,
                "contract": "contracts/DMToken.sol:DMToken",
                "label": "insurancePoolBurnt",
                "offset": 0,
                "slot": "35",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
                "base": "t_array(t_uint256)dyn_storage",
                "encoding": "dynamic_array",
                "label": "uint256[][]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)dyn_storage": {
                "base": "t_uint256",
                "encoding": "dynamic_array",
                "label": "uint256[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_contract(IPancakeswapRouter)1217": {
                "encoding": "inplace",
                "label": "contract IPancakeswapRouter",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_struct(Presale)2433_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct DMToken.Presale)",
                "numberOfBytes": "32",
                "value": "t_struct(Presale)2433_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(Presale)2433_storage": {
                "encoding": "inplace",
                "label": "struct DMToken.Presale",
                "members": [
                  {
                    "astId": 2428,
                    "contract": "contracts/DMToken.sol:DMToken",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2430,
                    "contract": "contracts/DMToken.sol:DMToken",
                    "label": "unlocked",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2432,
                    "contract": "contracts/DMToken.sol:DMToken",
                    "label": "rewards",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "decimals()": {
                "details": "Returns the token decimals."
              },
              "getOwner()": {
                "details": "Returns the bep token owner."
              },
              "name()": {
                "details": "Returns the token name."
              },
              "symbol()": {
                "details": "Returns the token symbol."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "getOwner()": "893d20e8",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IPancakeswapFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"IPancakeswapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IPancakeswapPair": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "skim(address)": "bc25cf77",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"IPancakeswapPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IPancakeswapRouter": {
          "abi": [
            {
              "inputs": [],
              "name": "WETH",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountADesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenDesired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveOut",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsIn",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                }
              ],
              "name": "getAmountsOut",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveB",
                  "type": "uint256"
                }
              ],
              "name": "quote",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountTokenMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountETHMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountETH",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountAMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountBMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "approveMax",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "removeLiquidityWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountA",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountB",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapETHForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactETH",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMax",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "path",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensForExactTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "WETH()": "ad5c4648",
              "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
              "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
              "factory()": "c45a0155",
              "getAmountIn(uint256,uint256,uint256)": "85f8c259",
              "getAmountOut(uint256,uint256,uint256)": "054d50d4",
              "getAmountsIn(uint256,address[])": "1f00ca74",
              "getAmountsOut(uint256,address[])": "d06ca61f",
              "quote(uint256,uint256,uint256)": "ad615dec",
              "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
              "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
              "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
              "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
              "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
              "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
              "swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
              "swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
              "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
              "swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
              "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
              "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
              "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
              "swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
              "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"IPancakeswapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IStaking": {
          "abi": [
            {
              "inputs": [],
              "name": "countTotalReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_totalReward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "countTotalStake",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_totalStake",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "stakerAddress",
                  "type": "address"
                }
              ],
              "name": "getStakeInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_total",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_staking",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_rewardable",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_rewards",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stakeTokenAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "countTotalReward()": "e7caa8c4",
              "countTotalStake()": "2461da55",
              "getStakeInfo(address)": "c3453153",
              "stakeTokenAddress()": "0106395f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"countTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalStake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"}],\"name\":\"getStakeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_staking\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"IStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IStoreContract": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                }
              ],
              "name": "withDraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "withDraw(address)": "0a67d2c7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"IStoreContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Mintable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newMinter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isMinter",
                  "type": "bool"
                }
              ],
              "name": "SetMinters",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_minter",
                  "type": "address"
                }
              ],
              "name": "disableMinter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isMinters",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "minters",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newMinter",
                  "type": "address"
                }
              ],
              "name": "setMinter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_minters",
                  "type": "address[]"
                }
              ],
              "name": "setMinters",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6106c38061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610199578063ada3da15146101a1578063f2fde38b146101db578063fca3b5aa1461020157610088565b806321a5ceee1461008d578063547d0096146100b5578063715018a6146101585780638623ec7b14610160575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610227565b005b6100b3600480360360208110156100cb57600080fd5b8101906020810181356401000000008111156100e657600080fd5b8201836020820111156100f857600080fd5b8035906020019184602083028401116401000000008311171561011a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506102d5945050505050565b6100b3610361565b61017d6004803603602081101561017657600080fd5b5035610403565b604080516001600160a01b039092168252519081900360200190f35b61017d61042a565b6101c7600480360360208110156101b757600080fd5b50356001600160a01b0316610439565b604080519115158252519081900360200190f35b6100b3600480360360208110156101f157600080fd5b50356001600160a01b031661044e565b6100b36004803603602081101561021757600080fd5b50356001600160a01b03166104b2565b61022f6105a3565b6000546001600160a01b0390811691161461027f576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160209081526040808320805460ff191690558051928352517f4579ec50a131ee14d9ab0dfeddceba4be2fb6907f7326c52237be3fab060ba7f9281900390910190a250565b6102dd6105a3565b6000546001600160a01b0390811691161461032d576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b60005b815181101561035d5761035582828151811061034857fe5b60200260200101516104b2565b600101610330565b5050565b6103696105a3565b6000546001600160a01b039081169116146103b9576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002818154811061041057fe5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031690565b60016020526000908152604090205460ff1681565b6104566105a3565b6000546001600160a01b039081169116146104a6576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b6104af816105a7565b50565b6104ba6105a3565b6000546001600160a01b0390811691161461050a576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905560028054808501825594527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b03191685179055825191825291517f4579ec50a131ee14d9ab0dfeddceba4be2fb6907f7326c52237be3fab060ba7f929181900390910190a250565b3390565b6001600160a01b0381166105ec5760405162461bcd60e51b81526004018080602001828103825260268152602001806106486026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220e6d31cae0e0c1b3f7bf941e91e15400fed501d0254dda8253296ade91cb1a24864736f6c634300060c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x1B PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x6E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x6C3 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xADA3DA15 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x201 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x21A5CEEE EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x547D0096 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8623EC7B EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2D5 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB3 PUSH2 0x361 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44E JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x27F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x32D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH2 0x355 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x348 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x330 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x369 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x410 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4AF DUP2 PUSH2 0x5A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4BA PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x50A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP6 ADD DUP3 SSTORE SWAP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP2 MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x648 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220E6D3 SHR 0xAE 0xE 0xC SHL EXTCODEHASH PUSH28 0xF941E91E15400FED501D0254DDA8253296ADE91CB1A24864736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
              "sourceMap": "5727:793:0:-:0;;;;;;;;;;;;-1:-1:-1;4975:17:0;4995:12;:10;:12::i;:::-;5012:6;:18;;-1:-1:-1;;;;;;5012:18:0;-1:-1:-1;;;;;5012:18:0;;;;;;;5040:43;;5012:18;;-1:-1:-1;5012:18:0;5040:43;;5012:6;;5040:43;4946:142;5727:793;;3128:89;3202:10;3128:89;:::o;5727:793::-;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610199578063ada3da15146101a1578063f2fde38b146101db578063fca3b5aa1461020157610088565b806321a5ceee1461008d578063547d0096146100b5578063715018a6146101585780638623ec7b14610160575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610227565b005b6100b3600480360360208110156100cb57600080fd5b8101906020810181356401000000008111156100e657600080fd5b8201836020820111156100f857600080fd5b8035906020019184602083028401116401000000008311171561011a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506102d5945050505050565b6100b3610361565b61017d6004803603602081101561017657600080fd5b5035610403565b604080516001600160a01b039092168252519081900360200190f35b61017d61042a565b6101c7600480360360208110156101b757600080fd5b50356001600160a01b0316610439565b604080519115158252519081900360200190f35b6100b3600480360360208110156101f157600080fd5b50356001600160a01b031661044e565b6100b36004803603602081101561021757600080fd5b50356001600160a01b03166104b2565b61022f6105a3565b6000546001600160a01b0390811691161461027f576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160209081526040808320805460ff191690558051928352517f4579ec50a131ee14d9ab0dfeddceba4be2fb6907f7326c52237be3fab060ba7f9281900390910190a250565b6102dd6105a3565b6000546001600160a01b0390811691161461032d576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b60005b815181101561035d5761035582828151811061034857fe5b60200260200101516104b2565b600101610330565b5050565b6103696105a3565b6000546001600160a01b039081169116146103b9576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002818154811061041057fe5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031690565b60016020526000908152604090205460ff1681565b6104566105a3565b6000546001600160a01b039081169116146104a6576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b6104af816105a7565b50565b6104ba6105a3565b6000546001600160a01b0390811691161461050a576040805162461bcd60e51b8152602060048201819052602482015260008051602061066e833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152600160208181526040808420805460ff19168417905560028054808501825594527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180546001600160a01b03191685179055825191825291517f4579ec50a131ee14d9ab0dfeddceba4be2fb6907f7326c52237be3fab060ba7f929181900390910190a250565b3390565b6001600160a01b0381166105ec5760405162461bcd60e51b81526004018080602001828103825260268152602001806106486026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220e6d31cae0e0c1b3f7bf941e91e15400fed501d0254dda8253296ade91cb1a24864736f6c634300060c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xADA3DA15 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xFCA3B5AA EQ PUSH2 0x201 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x21A5CEEE EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x547D0096 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8623EC7B EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x2D5 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB3 PUSH2 0x361 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH2 0x42A JUMP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44E JUMP JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x27F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x32D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH2 0x355 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x348 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x330 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x369 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x410 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x456 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4AF DUP2 PUSH2 0x5A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4BA PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x50A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x66E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP6 ADD DUP3 SSTORE SWAP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE SWAP2 MLOAD PUSH32 0x4579EC50A131EE14D9AB0DFEDDCEBA4BE2FB6907F7326C52237BE3FAB060BA7F SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x648 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A2646970667358221220E6D3 SHR 0xAE 0xE 0xC SHL EXTCODEHASH PUSH28 0xF941E91E15400FED501D0254DDA8253296ADE91CB1A24864736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
              "sourceMap": "5727:793:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6243:130;;;;;;;;;;;;;;;;-1:-1:-1;6243:130:0;-1:-1:-1;;;;;6243:130:0;;:::i;:::-;;6093:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6093:147:0;;-1:-1:-1;6093:147:0;;-1:-1:-1;;;;;6093:147:0:i;5277:125::-;;;:::i;5805:24::-;;;;;;;;;;;;;;;;-1:-1:-1;5805:24:0;;:::i;:::-;;;;-1:-1:-1;;;;;5805:24:0;;;;;;;;;;;;;;5093:70;;;:::i;5760:41::-;;;;;;;;;;;;;;;;-1:-1:-1;5760:41:0;-1:-1:-1;;;;;5760:41:0;;:::i;:::-;;;;;;;;;;;;;;;;;;5407:100;;;;;;;;;;;;;;;;-1:-1:-1;5407:100:0;-1:-1:-1;;;;;5407:100:0;;:::i;5930:160::-;;;;;;;;;;;;;;;;-1:-1:-1;5930:160:0;-1:-1:-1;;;;;5930:160:0;;:::i;6243:130::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;6307:18:0;::::1;6328:5;6307:18:::0;;;:9:::1;:18;::::0;;;;;;;:26;;-1:-1:-1;;6307:26:0::1;::::0;;6343:25;;;;;;::::1;::::0;;;;;;;;::::1;6243:130:::0;:::o;6093:147::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;6168:6:::1;6164:72;6180:8;:15;6178:1;:17;6164:72;;;6208:22;6218:8;6227:1;6218:11;;;;;;;;;;;;;;6208:9;:22::i;:::-;6197:3;;6164:72;;;;6093:147:::0;:::o;5277:125::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;5370:1:::1;5354:6:::0;;5333:40:::1;::::0;-1:-1:-1;;;;;5354:6:0;;::::1;::::0;5333:40:::1;::::0;5370:1;;5333:40:::1;5395:1;5378:19:::0;;-1:-1:-1;;;;;;5378:19:0::1;::::0;;5277:125::o;5805:24::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5805:24:0;;-1:-1:-1;5805:24:0;:::o;5093:70::-;5131:7;5152:6;-1:-1:-1;;;;;5152:6:0;5093:70;:::o;5760:41::-;;;;;;;;;;;;;;;:::o;5407:100::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;5474:28:::1;5493:8;5474:18;:28::i;:::-;5407:100:::0;:::o;5930:160::-;5212:12;:10;:12::i;:::-;5202:6;;-1:-1:-1;;;;;5202:6:0;;;:22;;;5194:67;;;;;-1:-1:-1;;;5194:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5194:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;5991:21:0;::::1;;::::0;;;6015:4:::1;5991:21;::::0;;;;;;;:28;;-1:-1:-1;;5991:28:0::1;::::0;::::1;::::0;;6024:7:::1;:24:::0;;;;::::1;::::0;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;6024:24:0::1;::::0;::::1;::::0;;6058:27;;;;;;;::::1;::::0;;;;;;;;;::::1;5930:160:::0;:::o;3128:89::-;3202:10;3128:89;:::o;5512:208::-;-1:-1:-1;;;;;5580:22:0;;5572:73;;;;-1:-1:-1;;;5572:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5676:6;;;5655:38;;-1:-1:-1;;;;;5655:38:0;;;;5676:6;;;5655:38;;;5698:6;:17;;-1:-1:-1;;;;;;5698:17:0;-1:-1:-1;;;;;5698:17:0;;;;;;;;;;5512:208::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "346200",
                "executionCost": "22821",
                "totalCost": "369021"
              },
              "external": {
                "disableMinter(address)": "infinite",
                "isMinters(address)": "1158",
                "minters(uint256)": "2037",
                "owner()": "1037",
                "renounceOwnership()": "infinite",
                "setMinter(address)": "infinite",
                "setMinters(address[])": "infinite",
                "transferOwnership(address)": "infinite"
              }
            },
            "methodIdentifiers": {
              "disableMinter(address)": "21a5ceee",
              "isMinters(address)": "ada3da15",
              "minters(uint256)": "8623ec7b",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setMinter(address)": "fca3b5aa",
              "setMinters(address[])": "547d0096",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMinter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isMinter\",\"type\":\"bool\"}],\"name\":\"SetMinters\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"disableMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMinter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_minters\",\"type\":\"address[]\"}],\"name\":\"setMinters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"Mintable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 314,
                "contract": "contracts/DMToken.sol:Mintable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 426,
                "contract": "contracts/DMToken.sol:Mintable",
                "label": "isMinters",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 429,
                "contract": "contracts/DMToken.sol:Mintable",
                "label": "minters",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_address)dyn_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 314,
                "contract": "contracts/DMToken.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220106c18dd0dbe8aebf49ccf1fc9663fdc96b7d3a9eb6f54999a797603e2e0b72064736f6c634300060c0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH13 0x18DD0DBE8AEBF49CCF1FC9663F 0xDC SWAP7 0xB7 0xD3 0xA9 0xEB PUSH16 0x54999A797603E2E0B72064736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "3439:1354:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220106c18dd0dbe8aebf49ccf1fc9663fdc96b7d3a9eb6f54999a797603e2e0b72064736f6c634300060c0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH13 0x18DD0DBE8AEBF49CCF1FC9663F 0xDC SWAP7 0xB7 0xD3 0xA9 0xEB PUSH16 0x54999A797603E2E0B72064736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "3439:1354:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "div(uint256,uint256,string memory)": "infinite",
                "mod(uint256,uint256)": "infinite",
                "mod(uint256,uint256,string memory)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite",
                "sub(uint256,uint256,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DMToken.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DMToken.sol\":{\"content\":\"//SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens in existence.\\r\\n\\t */\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token decimals.\\r\\n\\t */\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the token symbol.\\r\\n\\t */\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t* @dev Returns the token name.\\r\\n\\t*/\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the bep token owner.\\r\\n\\t */\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the amount of tokens owned by `account`.\\r\\n\\t */\\r\\n\\tfunction balanceOf(address account) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transfer(address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Returns the remaining number of tokens that `spender` will be\\r\\n\\t * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n\\t * zero by default.\\r\\n\\t *\\r\\n\\t * This value changes when {approve} or {transferFrom} are called.\\r\\n\\t */\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n\\t * that someone may use both the old and the new allowance by unfortunate\\r\\n\\t * transaction ordering. One possible solution to mitigate this race\\r\\n\\t * condition is to first reduce the spender's allowance to 0 and set the\\r\\n\\t * desired value afterwards:\\r\\n\\t * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n\\t *\\r\\n\\t * Emits an {Approval} event.\\r\\n\\t */\\r\\n\\tfunction approve(address spender, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n\\t * allowance mechanism. `amount` is then deducted from the caller's\\r\\n\\t * allowance.\\r\\n\\t *\\r\\n\\t * Returns a boolean value indicating whether the operation succeeded.\\r\\n\\t *\\r\\n\\t * Emits a {Transfer} event.\\r\\n\\t */\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external returns (bool);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n\\t * another (`to`).\\r\\n\\t *\\r\\n\\t * Note that `value` may be zero.\\r\\n\\t */\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t/**\\r\\n\\t * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n\\t * a call to {approve}. `value` is the new allowance.\\r\\n\\t */\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\t// Empty internal constructor, to prevent people from mistakenly deploying\\r\\n\\t// an instance of this contract, which should be used via inheritance.\\r\\n\\tconstructor () internal { }\\r\\n\\r\\n\\tfunction _msgSender() internal view returns (address payable) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n\\tfunction add(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\tuint c = a + b;\\r\\n\\t\\trequire(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b <= a, errorMessage);\\r\\n\\t\\tuint c = a - b;\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mul(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\t\\r\\n\\t\\tif (a == 0) {\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint c = a * b;\\r\\n\\t\\trequire(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\t// Solidity only automatically asserts when dividing by 0\\r\\n\\t\\trequire(b > 0, errorMessage);\\r\\n\\t\\tuint c = a / b;\\r\\n\\t\\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b) internal pure returns (uint) {\\r\\n\\t\\treturn mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\\r\\n\\t\\trequire(b != 0, errorMessage);\\r\\n\\t\\treturn a % b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n\\taddress private _owner;\\r\\n\\r\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\t_owner = msgSender;\\r\\n\\t\\temit OwnershipTransferred(address(0), msgSender);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address) {\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction renounceOwnership() public onlyOwner {\\r\\n\\t\\temit OwnershipTransferred(_owner, address(0));\\r\\n\\t\\t_owner = address(0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner {\\r\\n\\t\\t_transferOwnership(newOwner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferOwnership(address newOwner) internal {\\r\\n\\t\\trequire(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\t\\temit OwnershipTransferred(_owner, newOwner);\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Mintable is Ownable {\\r\\n\\tmapping(address => bool) public isMinters;\\r\\n\\taddress[] public minters;\\r\\n\\t// string[] public poolNames;\\r\\n\\r\\n\\tevent SetMinters(address indexed newMinter,bool isMinter);\\r\\n\\r\\n\\tfunction setMinter(address _newMinter) public onlyOwner {\\r\\n\\t\\tisMinters[_newMinter] = true;\\r\\n\\t\\tminters.push(_newMinter);\\r\\n\\t\\temit SetMinters(_newMinter,true);\\r\\n\\t}\\r\\n\\tfunction setMinters(address[] memory _minters) external onlyOwner {\\r\\n\\t\\tfor(uint i=0; i<_minters.length; i++) {\\r\\n\\t\\t\\tsetMinter(_minters[i]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tfunction disableMinter(address _minter) external onlyOwner {\\r\\n\\t\\tisMinters[_minter] = false;\\r\\n\\t\\temit SetMinters(_minter,false);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyMinter() {\\r\\n\\t\\trequire(isMinters[msg.sender] == true || msg.sender==owner(), \\\"Mintable: caller is not the minter\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\ninterface IPancakeswapFactory {\\r\\n\\t\\tevent PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n\\t\\tfunction feeTo() external view returns (address);\\r\\n\\t\\tfunction feeToSetter() external view returns (address);\\r\\n\\r\\n\\t\\tfunction getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\t\\tfunction allPairs(uint) external view returns (address pair);\\r\\n\\t\\tfunction allPairsLength() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n\\t\\tfunction setFeeTo(address) external;\\r\\n\\t\\tfunction setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapPair {\\r\\n\\t\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n\\t\\tfunction name() external pure returns (string memory);\\r\\n\\t\\tfunction symbol() external pure returns (string memory);\\r\\n\\t\\tfunction decimals() external pure returns (uint8);\\r\\n\\t\\tfunction totalSupply() external view returns (uint);\\r\\n\\t\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\t\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\t\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\t\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n\\t\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\t\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\t\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\r\\n\\t\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n\\t\\tevent Mint(address indexed sender, uint amount0, uint amount1);\\r\\n\\t\\tevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n\\t\\tevent Swap(\\r\\n\\t\\t\\t\\taddress indexed sender,\\r\\n\\t\\t\\t\\tuint amount0In,\\r\\n\\t\\t\\t\\tuint amount1In,\\r\\n\\t\\t\\t\\tuint amount0Out,\\r\\n\\t\\t\\t\\tuint amount1Out,\\r\\n\\t\\t\\t\\taddress indexed to\\r\\n\\t\\t);\\r\\n\\t\\tevent Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n\\t\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\t\\tfunction factory() external view returns (address);\\r\\n\\t\\tfunction token0() external view returns (address);\\r\\n\\t\\tfunction token1() external view returns (address);\\r\\n\\t\\tfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n\\t\\tfunction price0CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction price1CumulativeLast() external view returns (uint);\\r\\n\\t\\tfunction kLast() external view returns (uint);\\r\\n\\r\\n\\t\\tfunction mint(address to) external returns (uint liquidity);\\r\\n\\t\\tfunction burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\t\\tfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n\\t\\tfunction skim(address to) external;\\r\\n\\t\\tfunction sync() external;\\r\\n\\r\\n\\t\\tfunction initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakeswapRouter{\\r\\n\\t\\tfunction factory() external pure returns (address);\\r\\n\\t\\tfunction WETH() external pure returns (address);\\r\\n\\r\\n\\t\\tfunction addLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint amountADesired,\\r\\n\\t\\t\\t\\tuint amountBDesired,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n\\t\\tfunction addLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint amountTokenDesired,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n\\t\\tfunction removeLiquidity(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETH(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction removeLiquidityWithPermit(\\r\\n\\t\\t\\t\\taddress tokenA,\\r\\n\\t\\t\\t\\taddress tokenB,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountAMin,\\r\\n\\t\\t\\t\\tuint amountBMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountA, uint amountB);\\r\\n\\t\\tfunction removeLiquidityETHWithPermit(\\r\\n\\t\\t\\t\\taddress token,\\r\\n\\t\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline,\\r\\n\\t\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountToken, uint amountETH);\\r\\n\\t\\tfunction swapExactTokensForTokens(\\r\\n\\t\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactTokens(\\r\\n\\t\\t\\t\\tuint amountOut,\\r\\n\\t\\t\\t\\tuint amountInMax,\\r\\n\\t\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\t\\taddress to,\\r\\n\\t\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\t\\tfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n\\t\\t\\t\\texternal\\r\\n\\t\\t\\t\\tpayable\\r\\n\\t\\t\\t\\treturns (uint[] memory amounts);\\r\\n\\r\\n\\t\\tfunction quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n\\t\\tfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n\\t\\tfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n\\t\\tfunction getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n\\t\\tfunction removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\tfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\taddress token,\\r\\n\\t\\t\\tuint liquidity,\\r\\n\\t\\t\\tuint amountTokenMin,\\r\\n\\t\\t\\tuint amountETHMin,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline,\\r\\n\\t\\t\\tbool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n\\t\\t) external returns (uint amountETH);\\r\\n\\t\\r\\n\\t\\tfunction swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n\\t\\tfunction swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external payable;\\r\\n\\t\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\tuint amountIn,\\r\\n\\t\\t\\tuint amountOutMin,\\r\\n\\t\\t\\taddress[] calldata path,\\r\\n\\t\\t\\taddress to,\\r\\n\\t\\t\\tuint deadline\\r\\n\\t\\t) external;\\r\\n}\\r\\n\\r\\ninterface IStoreContract {\\r\\n\\tfunction withDraw(address tokenAddress) external ;\\r\\n}\\r\\ninterface IStaking {\\r\\n\\tfunction stakeTokenAddress() external view returns(address);\\r\\n\\tfunction getStakeInfo(address stakerAddress) external view returns(uint _total, uint _staking, uint _rewardable, uint _rewards);\\r\\n\\tfunction countTotalStake() external view returns (uint _totalStake);\\r\\n\\tfunction countTotalReward() external view returns (uint _totalReward);\\r\\n}\\r\\n\\r\\n// Dman Token contract written by Galaxy Foundation Team bussiness email:xhe18623@gmail.com\\r\\ncontract DMToken is Context, IERC20, Mintable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tmapping (address => uint) private _balances;\\r\\n\\r\\n\\tmapping (address => mapping (address => uint)) private _allowances;\\r\\n\\t//Presale Event for emit on website\\r\\n\\tevent Presaled (\\r\\n\\t\\taddress user,\\r\\n\\t\\tuint usdtAmount,\\r\\n\\t\\tuint dMtokenAmount\\r\\n\\t);\\r\\n\\r\\n\\t\\r\\n\\tuint8 private _decimals = 18;\\r\\n\\tstring private _symbol = \\\"DM\\\";\\r\\n\\tstring private _name = \\\"DMToken\\\";\\r\\n\\tuint private _maxSupply = 1e9 * 10 ** 18; // maxsupply\\r\\n\\tuint private _totalSupply = 250 * 1e6 * 10 ** 18; // presale amout\\r\\n\\r\\n\\tuint public liquidityFee = 5;\\r\\n\\tuint public rewardFee = 5;\\r\\n\\tuint public insuranceFee = 2;\\r\\n\\tuint public communityFee = 3;\\r\\n\\r\\n\\t/* address public insurance;\\r\\n\\t; */\\r\\n\\taddress public communityAddress;\\r\\n\\taddress public feeAddress;\\r\\n\\r\\n\\tbool public swapAndLiquifyEnabled = true; \\r\\n\\tuint public minLiquidityAmount = 1e3 * 1e18;\\r\\n\\r\\n\\tIPancakeswapRouter public pancakeswapRouter;\\r\\n\\taddress public pancakeswapMDUSDTPair;\\r\\n\\taddress public USDTAddress;\\r\\n\\r\\n\\taddress public storeAddress;\\r\\n\\r\\n\\tbool inSwapAndLiquify;\\r\\n\\tmodifier lockTheSwap {\\r\\n\\t\\tinSwapAndLiquify = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinSwapAndLiquify = false;\\r\\n\\t}\\r\\n\\r\\n\\tbool inRedeem;\\r\\n\\tmodifier lockRedeem {\\r\\n\\t\\tinRedeem = true;\\r\\n\\t\\t_;\\r\\n\\t\\tinRedeem = false;\\r\\n\\t}\\r\\n\\r\\n\\tuint startTime;\\r\\n\\r\\n\\tconstructor() public {\\r\\n\\t\\t// _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n\\t\\t// IPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t\\t// presaleEndTime += startTime;\\r\\n\\t\\t// emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n\\t}\\r\\n\\r\\n\\tfunction setSwapAndLiquifyEnabled(bool enable) external onlyOwner {\\r\\n\\t\\tswapAndLiquifyEnabled = enable;\\r\\n\\t}\\r\\n\\r\\n\\tfunction setInitialAddresses(address _feeAddress, address _communityAddress, address _RouterAddress, address _USDTAddress, address _storeAddress) external onlyOwner {\\r\\n\\t\\tfeeAddress = _feeAddress;\\r\\n\\t\\tcommunityAddress = _communityAddress;\\r\\n\\t\\tUSDTAddress = _USDTAddress;\\r\\n\\t\\tIPancakeswapRouter _pancakeswapRouter = IPancakeswapRouter(_RouterAddress);\\r\\n\\t\\tpancakeswapRouter = _pancakeswapRouter;\\r\\n\\t\\tpancakeswapMDUSDTPair = IPancakeswapFactory(_pancakeswapRouter.factory()).createPair(address(this), USDTAddress); //MD vs USDT pair\\r\\n\\t\\tstoreAddress = _storeAddress;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t//\\u5408\\u7ea6\\u62e5\\u6709\\u8005\\u4fee\\u6539\\u8d39\\u7387\\u8bbe\\u7f6e\\r\\n\\tfunction setFees(uint[4] memory fees) external onlyOwner {\\r\\n\\t\\tliquidityFee = fees[0];\\r\\n\\t\\trewardFee = fees[1];\\r\\n\\t\\tinsuranceFee = fees[2];\\r\\n\\t\\tcommunityFee = fees[3];\\r\\n\\t}\\r\\n\\r\\n\\tfunction getOwner() external view override returns (address) {\\r\\n\\t\\treturn owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTotalFee() public view returns (uint) {\\r\\n\\t\\treturn (liquidityFee+insuranceFee+rewardFee+communityFee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decimals() external override view returns (uint8) {\\r\\n\\t\\treturn _decimals;\\r\\n\\t}\\r\\n\\r\\n\\tfunction symbol() external override view returns (string memory) {\\r\\n\\t\\treturn _symbol;\\r\\n\\t}\\r\\n\\r\\n\\tfunction name() external override view returns (string memory) {\\r\\n\\t\\treturn _name;\\r\\n\\t}\\r\\n\\r\\n\\tfunction totalSupply() external override view returns (uint) {\\r\\n\\t\\treturn _totalSupply;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balanceOf(address account) public override view returns (uint) {\\r\\n\\t\\treturn _balances[account];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint amount) public override returns (bool) {\\r\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external override view returns (uint) {\\r\\n\\t\\treturn _allowances[owner][spender];\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address spender, uint amount) external override returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\\r\\n\\t\\t_transfer(sender, recipient, amount);\\r\\n\\t\\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"BEP20: transfer amount exceeds allowance\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseAllowance(address spender, uint addedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\\r\\n\\t\\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"BEP20: decreased allowance below zero\\\"));\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction mint(uint amount) public onlyMinter returns (bool) {\\r\\n\\t\\t_mint(_msgSender(), amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\t//\\u8f6c\\u8d26\\u529f\\u80fd\\uff0c\\u4e70\\u4e0d\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u5356\\u6263\\u624b\\u7eed\\u8d39\\uff0c\\u4ee5DM\\u5f62\\u5f0f\\u5b58\\u5728\\u5408\\u7ea6\\uff0c\\u4e00\\u65e6\\u6709\\u4eba\\u4e92\\u8f6c\\u65f6\\u5427DM\\u6362\\u6210USDT\\u5206\\u7ea2\\u3002\\r\\n\\tfunction _transfer(address sender, address recipient, uint amount) internal {\\r\\n\\t\\trequire(sender != address(0), \\\"BEP20: transfer from the zero address\\\");\\r\\n\\t\\trequire(recipient != address(0), \\\"BEP20: transfer to the zero address\\\");\\r\\n\\t\\tuint recieveAmount = amount;\\r\\n\\t\\t//consider the presale investor's available transfer amount. good.\\r\\n\\t\\trequire(_balances[sender].add(presales[sender].unlocked).sub(presales[sender].amount)>=amount,\\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\t\\t_balances[sender] = _balances[sender].sub(amount, \\\"BEP20: transfer amount exceeds balance\\\");\\r\\n\\r\\n\\r\\n\\t\\t// fee \\r\\n\\t\\tbool isBuy = sender==pancakeswapMDUSDTPair;\\r\\n\\t\\tbool isSell =  recipient==pancakeswapMDUSDTPair;\\r\\n\\r\\n\\t\\tif(isSell) {\\r\\n\\t\\t\\trecieveAmount = amount.mul(100 - getTotalFee()).div(100);\\r\\n\\t\\t\\tuint feeAmount = amount.mul(liquidityFee+rewardFee+insuranceFee+communityFee).div(100);\\r\\n\\t\\t\\t_balances[address(this)] = _balances[address(this)].add(feeAmount);//fees remained in contract\\r\\n\\t\\t\\temit Transfer(sender, address(this), feeAmount);\\r\\n\\t\\t}\\r\\n\\t\\t_balances[recipient] = _balances[recipient].add(recieveAmount);\\r\\n\\t\\t//calculate DM reserved in this contract\\r\\n\\t\\tuint contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\t//swap DM to usdt \\r\\n\\t\\tif (!inSwapAndLiquify && !inRedeem && !isBuy && !isSell && swapAndLiquifyEnabled) {\\r\\n\\t\\t\\tif(minLiquidityAmount <= contractTokenBalance){\\r\\n\\t\\t\\t\\tswapAndLiquify();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t//if price < some threshold number. admin open redeem switch.\\r\\n\\t\\t\\tif (redeemable()) {\\r\\n\\t\\t\\t\\tredeem();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\temit Transfer(sender, recipient, recieveAmount);\\r\\n\\t}\\r\\n\\t\\r\\n\\t//swap reserved DM in contract to USDT and some part of them to liquidty.\\r\\n \\tfunction swapAndLiquify() internal lockTheSwap {\\r\\n\\t\\t\\r\\n\\t\\tuint contractTokenBalance = _balances[address(this)];\\r\\n\\t\\t// convert liquidityFee Part to DM-USDT token ( percentage )\\r\\n\\t\\tuint liquidityhalf = contractTokenBalance.mul(liquidityFee).div(getTotalFee()).div(2);\\r\\n\\t\\t//remained dm = rest\\r\\n\\t\\tuint rest = contractTokenBalance.sub(liquidityhalf);\\r\\n\\t\\tuint initialBalance = IERC20(USDTAddress).balanceOf(address(this));\\r\\n\\t\\t//swap rest DM to Usdt\\r\\n\\t\\tswapTokensForUSDT(rest);\\r\\n\\t\\t//get USDT amount in DM contract\\r\\n\\t\\tuint cBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(initialBalance);\\r\\n\\t\\t//divided USDT in 3 parts. one for Presale investor staking pool. one for insurance pool for future using.remained for community wallet\\r\\n\\t\\trewardPoolBalance = rewardPoolBalance.add(cBalance.mul(rewardFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\tinsurancePoolBalance = insurancePoolBalance.add(cBalance.mul(insuranceFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t//transfer usdt directly to community wallet.\\r\\n\\t\\tIERC20(USDTAddress).transfer(communityAddress, cBalance.mul(communityFee).div(getTotalFee().sub(liquidityFee.div(2))));\\r\\n\\t\\t\\r\\n\\t\\t//add liquidity\\r\\n\\t\\tuint newBalance = IERC20(USDTAddress).balanceOf(address(this)).sub(rewardPoolBalance).sub(insurancePoolBalance);\\r\\n\\t\\taddLiquidity(liquidityhalf, newBalance);\\r\\n \\t}\\r\\n\\r\\n\\t//invoke pancake router swap DM To USDT\\r\\n\\tfunction swapTokensForUSDT(uint tokenAmount) internal {\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = USDTAddress;\\r\\n\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\r\\n\\t\\t// make the swap\\r\\n\\r\\n\\t\\tpancakeswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\t0, // accept any amount of usdt\\r\\n\\t\\t\\tpath,\\r\\n\\t\\t\\tstoreAddress,\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tIStoreContract(storeAddress).withDraw(USDTAddress);\\r\\n\\t}\\r\\n\\r\\n\\tfunction addLiquidity(uint tokenAmount, uint usdtAmount) private {\\r\\n\\t\\t// approve token transfer to cover all possible scenarios\\r\\n\\t\\t_approve(address(this), address(pancakeswapRouter), tokenAmount);\\r\\n\\t\\tIERC20(USDTAddress).approve(address(pancakeswapRouter),usdtAmount);\\r\\n\\r\\n\\t\\t// add the liquidity\\r\\n\\t\\tpancakeswapRouter.addLiquidity(\\r\\n\\t\\t\\taddress(this),\\r\\n\\t\\t\\tUSDTAddress,\\r\\n\\t\\t\\ttokenAmount,\\r\\n\\t\\t\\tusdtAmount,\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\t0, // slippage is unavoidable\\r\\n\\t\\t\\towner(),\\r\\n\\t\\t\\tblock.timestamp\\r\\n\\t\\t);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _mint(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: mint to the zero address\\\");\\r\\n\\t\\trequire(_totalSupply<_maxSupply, \\\"exceed max supply\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\r\\n\\t\\t_balances[account] = _balances[account].add(amount);\\r\\n\\t\\temit Transfer(address(0), account, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burn(address account, uint amount) internal {\\r\\n\\t\\trequire(account != address(0), \\\"BEP20: burn from the zero address\\\");\\r\\n\\r\\n\\t\\t_balances[account] = _balances[account].sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\t_totalSupply = _totalSupply.sub(amount, \\\"BEP20: burn amount exceeds balance\\\");\\r\\n\\t\\temit Transfer(account, address(0), amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approve(address owner, address spender, uint amount) internal {\\r\\n\\t\\trequire(owner != address(0), \\\"BEP20: approve from the zero address\\\");\\r\\n\\t\\trequire(spender != address(0), \\\"BEP20: approve to the zero address\\\");\\r\\n\\r\\n\\t\\t_allowances[owner][spender] = amount;\\r\\n\\t\\temit Approval(owner, spender, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _burnFrom(address account, uint amount) internal {\\r\\n\\t\\t_burn(account, amount);\\r\\n\\t\\t_approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \\\"BEP20: burn amount exceeds allowance\\\"));\\r\\n\\t}\\r\\n\\r\\n\\t/* =========== presale & rewards \\u9884\\u552e\\u5206\\u7ea2\\u529f\\u80fd=========== */\\r\\n\\r\\n\\tevent ClaimReward(address user,uint amount);\\r\\n\\tevent Unlocked(address user,uint amount,uint timeStamp);\\r\\n\\r\\n\\tuint public rewardPoolBalance;\\r\\n\\tuint public rewardedTotalBalance;\\r\\n\\t// mapping(address=>uint) rewardedBalance;\\r\\n\\r\\n\\tuint public USDTDecimals = 18;\\r\\n\\r\\n\\tuint public presalePrice = 5 * 10 ** (USDTDecimals - 3);\\r\\n\\t\\r\\n\\tuint public presaleLimit1 = 200 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\tuint public presaleLimit2 = 3000 * 10 ** uint(_decimals) * 10 ** USDTDecimals / presalePrice; // is dmtoken\\r\\n\\r\\n\\tuint public presaledTotal; // is dmtoken\\r\\n\\tuint public presaleTotal = 250 * 1e6 * 10 ** uint(_decimals); // is dmtoken \\u6700\\u591a\\u9884\\u552e\\u7684DM\\u4ee3\\u5e01\\u6570\\u91cf\\r\\n\\r\\n\\tuint public presaleEndTime = 1637510400; // 20 days\\r\\n\\tstruct Presale {\\r\\n\\t\\tuint amount; // is dm.\\r\\n\\t\\tuint unlocked; // is dm.\\r\\n\\t\\tuint rewards; // is usdt\\r\\n\\t}\\r\\n\\tmapping(address=>Presale) public presales;\\r\\n\\r\\n\\t\\r\\n\\r\\n\\t\\t/* [8,   5 minutes],\\r\\n\\t\\t[18,  7 minutes],\\r\\n\\t\\t[30,  10 minutes],\\r\\n\\t\\t[45,  12 minutes],\\r\\n\\t\\t[62,  15 minutes],\\r\\n\\t\\t[80,  18 minutes],\\r\\n\\t\\t[100, 28 minutes] */\\r\\n\\t\\t\\r\\n\\tuint[][] unlockSteps = [\\r\\n\\t\\t[uint(8),   uint(40 days)],\\r\\n\\t\\t[uint(18),  uint(90 days)],\\r\\n\\t\\t[uint(30),  uint(150 days)],\\r\\n\\t\\t[uint(45),  uint(210 days)],\\r\\n\\t\\t[uint(62),  uint(270 days)],\\r\\n\\t\\t[uint(80),  uint(330 days)],\\r\\n\\t\\t[uint(100), uint(360 days)]\\r\\n\\t];\\r\\n\\r\\n\\tuint public referralRate = 12;\\r\\n\\t//referal rate\\r\\n\\tfunction setReferralRate(uint _referralRate) external onlyOwner {\\r\\n\\t\\treferralRate = _referralRate;\\r\\n\\t}\\r\\n\\t//start presale. record current time\\r\\n\\t/* function startPresale() public onlyOwner {\\r\\n\\t\\tstartTime = block.timestamp;\\r\\n\\t} */\\r\\n\\t//investor buy presale alloc\\r\\n\\tfunction presale(uint _usdt,address referral) public {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\t//calculate quanity to receive\\r\\n\\t\\tuint _quantity = _usdt * 10 ** 18 / presalePrice;\\r\\n\\r\\n\\t\\trequire(_sender!=address(0), \\\"_sender can't be zero address\\\");\\r\\n\\t\\trequire(presaleTotal > _quantity && block.timestamp < presaleEndTime,\\\"presale ended\\\");\\r\\n\\t\\trequire(presaleLimit1 <= presales[_sender].amount + _quantity, \\\"_sender must be greater or equals than limit1\\\");\\r\\n\\t\\trequire(presaleLimit2 >= presales[_sender].amount + _quantity, \\\"presale total must be less or equals than limit2\\\");\\r\\n\\t\\t//send USDT fund from invesotr to Contract Owner\\r\\n\\t\\tIERC20(USDTAddress).transferFrom(_sender, feeAddress, _usdt);\\r\\n\\t\\t_mint(_sender, _quantity);//mint equal amount of DM token\\r\\n\\t\\tif(referral!=address(0)) {\\r\\n\\t\\t\\t_mint(referral, _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\tpresales[referral].amount += _quantity.mul(referralRate).div(100);//lump sum DM token minted\\r\\n\\t\\t\\tpresaleTotal -= _quantity.mul(referralRate).div(100);\\r\\n\\t\\t\\tpresaledTotal += _quantity.mul(referralRate).div(100);\\r\\n\\r\\n\\t\\t\\temit Presaled(referral, _usdt.mul(referralRate).div(100), _quantity.mul(referralRate).div(100));\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\tpresales[_sender].amount += _quantity;//lump sum DM token minted\\r\\n\\t\\tpresaleTotal -= _quantity;\\r\\n\\t\\tpresaledTotal += _quantity;\\r\\n\\r\\n\\t\\temit Presaled(_sender, _usdt, _quantity);\\r\\n\\t}\\r\\n\\t//private sale investor can claim USDT reward from USDT dividens pool\\r\\n\\tfunction claimReward() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint rewardBalance = getReward(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(rewardBalance>0,\\\"Claim : There is no reward amount\\\");\\r\\n\\t\\tIERC20(USDTAddress).transfer(_sender, rewardBalance);\\r\\n\\t\\tpresales[_sender].rewards += rewardBalance;\\r\\n\\t\\t// rewardedBalance[msg.sender] += rewardBalance;\\r\\n\\r\\n\\t\\trewardPoolBalance -= rewardBalance;\\r\\n\\t\\trewardedTotalBalance += rewardBalance;\\r\\n\\r\\n\\t\\temit ClaimReward(_sender, rewardBalance);\\r\\n\\t}\\r\\n\\t//caculate the reward for specified user. Formula =>  percentage(user invested)* pool(usdt)\\r\\n\\tfunction getReward(address account) public view returns (uint rewardBalance) {\\r\\n\\t    if (presaledTotal==0 || account==0x0000000000000000000000000000000000000000) {\\r\\n\\t        return 0;\\r\\n\\t    } else {\\r\\n\\t        rewardBalance = rewardPoolBalance.add(rewardedTotalBalance).mul(presales[account].amount).div(presaledTotal);\\r\\n\\t        if (rewardBalance > presales[account].rewards) return rewardBalance - presales[account].rewards;\\r\\n\\t    }\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\t//user manaully unlock the DM amount\\r\\n\\tfunction unlock() external {\\r\\n\\t\\taddress _sender = msg.sender;\\r\\n\\t\\tuint _unlockAmount = getUnlockAmount(_sender);\\r\\n\\t\\trequire(_sender!=address(0), \\\"sender can't be zero\\\");\\r\\n\\t\\trequire(_unlockAmount>0, \\\"_unlockAmount is zero\\\");\\r\\n\\t\\tpresales[_sender].unlocked += _unlockAmount;\\r\\n\\r\\n\\t\\t// uint timeStamp = block.timestamp;\\r\\n\\t\\temit Unlocked(_sender, _unlockAmount, block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\t//getUnlock Amount user\\r\\n\\tfunction getUnlockAmount(address account) public view returns (uint){\\r\\n\\t\\tif (account==0x0000000000000000000000000000000000000000) return 0;\\r\\n\\t\\tuint time = block.timestamp;\\r\\n\\t\\tfor(uint i = unlockSteps.length - 1; i > 0; i--) {\\r\\n\\t\\t\\tif (time > startTime + unlockSteps[i][1]) {\\r\\n\\t\\t\\t\\treturn presales[account].amount * unlockSteps[i][0] / 100 - presales[account].unlocked;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction emergencyWithdraw(address token) external onlyOwner {\\r\\n\\t\\tuint tokenBalance = IERC20(token).balanceOf(address(this));\\r\\n\\t\\tIERC20(token).transfer(owner(), tokenBalance);\\r\\n\\t\\trewardPoolBalance = 0;\\r\\n\\t\\tinsurancePoolBalance = 0;\\r\\n\\t} \\r\\n\\t\\r\\n\\t/* ======================================== */\\r\\n\\r\\n\\tfunction getStakerInfo(address account) external view returns (bool isEnd, uint[15] memory params, uint[36] memory pools, bool isFirst){\\r\\n\\t\\tuint i=0;\\r\\n\\t\\t// uint limit1, uint limit2, uint remainder, uint reward, uint dmBalance, uint usdtBalance, uint unlockable\\r\\n\\t\\tuint _locked = presales[account].amount;\\r\\n\\r\\n\\t\\tisEnd = block.timestamp > presaleEndTime;\\r\\n\\r\\n\\t\\tparams[i++] = presaleEndTime; \\t\\t \\t\\t//presale endtime\\r\\n\\t\\tparams[i++] = _locked > 0 ? 0 : presaleLimit1; \\t\\t\\t//limit1\\r\\n\\t\\tparams[i++] = presaleLimit2 - _locked; \\t\\t\\t\\t\\t//limit2\\r\\n\\t\\tparams[i++] = presaleTotal; \\t\\t\\t\\t\\t\\t\\t//remainder\\r\\n\\t\\tparams[i++] = getReward(account); \\t\\t\\t\\t\\t\\t//reward\\r\\n\\t\\tparams[i++] = _balances[account]; \\t\\t\\t\\t\\t\\t//dmBalance\\r\\n\\t\\tparams[i++] = account==0x0000000000000000000000000000000000000000 ? 0 : IERC20(USDTAddress).balanceOf(account); \\t//usdtBalance\\r\\n\\t\\tparams[i++] = getUnlockAmount(account); \\t\\t\\t\\t//unlockable\\r\\n\\t\\tparams[i++] = rewardPoolBalance;\\r\\n\\t\\tparams[i++] = rewardedTotalBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBalance;\\r\\n\\t\\tparams[i++] = insurancePoolBurnt;\\r\\n\\r\\n\\r\\n\\t\\t// var pairAddress = await DMTokenContract.pancakeswapMDUSDTPair();\\r\\n\\t\\tparams[i++] = IERC20(USDTAddress).balanceOf(pancakeswapMDUSDTPair);\\r\\n\\t\\tparams[i++] = _balances[pancakeswapMDUSDTPair];\\r\\n\\t\\tparams[i++] = _balances[address(this)];\\r\\n\\r\\n\\r\\n\\t\\ti=0;\\r\\n\\t\\t//this investors statistic in each pool infos.\\r\\n\\t\\tfor(uint k=0; k<minters.length; k++) {\\r\\n\\t\\t\\t(uint _total, uint _staking, uint _rewardable, ) = IStaking(minters[k]).getStakeInfo(account);\\r\\n\\t\\t\\tpools[i++] = _total;\\r\\n\\t\\t\\tpools[i++] = _staking;\\r\\n\\t\\t\\tpools[i++] = _rewardable;\\r\\n\\t\\t\\tpools[i++] = uint(IERC20(IStaking(minters[k]).stakeTokenAddress()).decimals());\\r\\n\\t\\t}\\r\\n\\t\\tisFirst = IPancakeswapPair(pancakeswapMDUSDTPair).token0() == address(this);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\t////////////////////////////////////////////////////////////////////////////////////\\r\\n\\r\\n\\tuint public insurancePoolBalance;\\r\\n\\tuint public insurancePoolBurnt;\\r\\n\\t//\\u67e5\\u770b\\u662f\\u5426\\u8fbe\\u5230\\u56de\\u8d2d\\u6761\\u4ef6\\uff0c4.\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeemable() internal view returns(bool) {\\r\\n\\t\\treturn insurancePoolBalance >= 1e5 * 10 ** uint(USDTDecimals);\\r\\n\\t}\\r\\n\\t//\\u4fdd\\u9669\\u6c60\\u8fbe\\u523010\\u4e07USDT\\u65f6\\uff0c\\u4f7f\\u752850%\\u8d44\\u91d1\\uff0c\\u81ea\\u52a8\\u56de\\u8d2dDM\\u9500\\u6bc1 \\u4e70 ( DMAN-USDT) \\u4ea4\\u6613\\u5bf9\\r\\n\\tfunction redeem() internal lockRedeem{\\r\\n        require(redeemable(), \\\"not enought insurance pool balance\\\");\\r\\n\\r\\n        uint swapAmount = insurancePoolBalance.div(2);//50% amount USDT buy back\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = USDTAddress;\\r\\n        path[1] = address(this);\\r\\n        IERC20(USDTAddress).approve(address(pancakeswapRouter), swapAmount);\\r\\n\\t\\tuint256 _initbalance = _balances[address(this)];\\r\\n        // make the swap\\r\\n        pancakeswapRouter.swapExactTokensForTokens(\\r\\n            swapAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            storeAddress,\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n\\t\\t_balances[address(this)] += _balances[storeAddress];\\r\\n\\t\\t_balances[storeAddress] = 0;\\r\\n\\r\\n\\t\\tinsurancePoolBalance -= swapAmount;\\r\\n\\t\\tuint256 swapedAmount = _balances[address(this)].sub(_initbalance);\\r\\n\\t\\tinsurancePoolBurnt += swapedAmount;\\r\\n\\t\\t_burn(address(this), swapedAmount);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0x77d5e00804f6d9e4aaec3169bbb639494c4a6c1ff1f9341b28d03ad3bf60ba67\",\"license\":\"UNLICENSED\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/DMToken.sol": {
        "ast": {
          "absolutePath": "contracts/DMToken.sol",
          "exportedSymbols": {
            "Context": [
              125
            ],
            "DMToken": [
              3359
            ],
            "IERC20": [
              100
            ],
            "IPancakeswapFactory": [
              589
            ],
            "IPancakeswapPair": [
              829
            ],
            "IPancakeswapRouter": [
              1217
            ],
            "IStaking": [
              1252
            ],
            "IStoreContract": [
              1223
            ],
            "Mintable": [
              528
            ],
            "Ownable": [
              420
            ],
            "SafeMath": [
              310
            ]
          },
          "id": 3360,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.6",
                ".12"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 100,
              "linearizedBaseContracts": [
                100
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": {
                    "id": 2,
                    "nodeType": "StructuredDocumentation",
                    "src": "88:62:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 7,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 3,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "173:2:0"
                  },
                  "returnParameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 7,
                        "src": "199:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "199:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "198:6:0"
                  },
                  "scope": 100,
                  "src": "153:52:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 8,
                    "nodeType": "StructuredDocumentation",
                    "src": "210:47:0",
                    "text": " @dev Returns the token decimals."
                  },
                  "functionSelector": "313ce567",
                  "id": 13,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "277:2:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 13,
                        "src": "303:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:7:0"
                  },
                  "scope": 100,
                  "src": "260:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "315:45:0",
                    "text": " @dev Returns the token symbol."
                  },
                  "functionSelector": "95d89b41",
                  "id": 19,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "378:2:0"
                  },
                  "returnParameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 19,
                        "src": "404:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:15:0"
                  },
                  "scope": 100,
                  "src": "363:56:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 20,
                    "nodeType": "StructuredDocumentation",
                    "src": "424:41:0",
                    "text": " @dev Returns the token name."
                  },
                  "functionSelector": "06fdde03",
                  "id": 25,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "481:2:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 25,
                        "src": "507:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "507:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "506:15:0"
                  },
                  "scope": 100,
                  "src": "468:54:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 26,
                    "nodeType": "StructuredDocumentation",
                    "src": "527:48:0",
                    "text": " @dev Returns the bep token owner."
                  },
                  "functionSelector": "893d20e8",
                  "id": 31,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOwner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "595:2:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 31,
                        "src": "621:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "620:9:0"
                  },
                  "scope": 100,
                  "src": "578:52:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "635:68:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 39,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 39,
                        "src": "725:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "725:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "724:17:0"
                  },
                  "returnParameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 39,
                        "src": "765:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "765:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "764:6:0"
                  },
                  "scope": 100,
                  "src": "706:65:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 40,
                    "nodeType": "StructuredDocumentation",
                    "src": "776:197:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 49,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 49,
                        "src": "994:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 49,
                        "src": "1013:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1013:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:32:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 49,
                        "src": "1044:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1044:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1043:6:0"
                  },
                  "scope": 100,
                  "src": "976:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 50,
                    "nodeType": "StructuredDocumentation",
                    "src": "1055:252:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 59,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 59,
                        "src": "1329:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1329:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 59,
                        "src": "1345:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1345:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1328:33:0"
                  },
                  "returnParameters": {
                    "id": 58,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 59,
                        "src": "1385:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1385:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1384:6:0"
                  },
                  "scope": 100,
                  "src": "1310:81:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 60,
                    "nodeType": "StructuredDocumentation",
                    "src": "1396:616:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 69,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 69,
                        "src": "2032:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2032:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 69,
                        "src": "2049:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2049:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2031:30:0"
                  },
                  "returnParameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 69,
                        "src": "2080:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2080:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2079:6:0"
                  },
                  "scope": 100,
                  "src": "2015:71:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": {
                    "id": 70,
                    "nodeType": "StructuredDocumentation",
                    "src": "2091:280:0",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 81,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 81,
                        "src": "2396:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2396:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 81,
                        "src": "2412:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2412:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 81,
                        "src": "2431:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2395:48:0"
                  },
                  "returnParameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 79,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 81,
                        "src": "2462:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2462:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2461:6:0"
                  },
                  "scope": 100,
                  "src": "2374:94:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 82,
                    "nodeType": "StructuredDocumentation",
                    "src": "2473:148:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 90,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 90,
                        "src": "2639:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2639:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 86,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 90,
                        "src": "2661:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2661:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 88,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 90,
                        "src": "2681:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2681:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2638:54:0"
                  },
                  "src": "2624:69:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "2698:142:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 99,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 99,
                        "src": "2858:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 99,
                        "src": "2881:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2881:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 99,
                        "src": "2906:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2906:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2857:60:0"
                  },
                  "src": "2843:75:0"
                }
              ],
              "scope": 3360,
              "src": "67:2854:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 125,
              "linearizedBaseContracts": [
                125
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "3120:3:0",
                    "statements": []
                  },
                  "documentation": null,
                  "id": 104,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 101,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3108:2:0"
                  },
                  "returnParameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3120:0:0"
                  },
                  "scope": 125,
                  "src": "3096:27:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 112,
                    "nodeType": "Block",
                    "src": "3190:27:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3202:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3202:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 108,
                        "id": 111,
                        "nodeType": "Return",
                        "src": "3195:17:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 113,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3147:2:0"
                  },
                  "returnParameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 113,
                        "src": "3173:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3173:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3172:17:0"
                  },
                  "scope": 125,
                  "src": "3128:89:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 123,
                    "nodeType": "Block",
                    "src": "3279:153:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3284:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$125",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "3284:4:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3419:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3419:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 117,
                        "id": 122,
                        "nodeType": "Return",
                        "src": "3412:15:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 124,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3239:2:0"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 124,
                        "src": "3265:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3265:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3264:14:0"
                  },
                  "scope": 125,
                  "src": "3222:210:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3360,
              "src": "2925:510:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 310,
              "linearizedBaseContracts": [
                310
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "3520:90:0",
                    "statements": [
                      {
                        "assignments": [
                          135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 135,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 149,
                            "src": "3525:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 134,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3525:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 139,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "3534:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 137,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3538:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3534:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3525:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 141,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "3552:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 142,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "3557:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3552:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3560:29:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 140,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3544:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3544:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 146,
                        "nodeType": "ExpressionStatement",
                        "src": "3544:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3604:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 133,
                        "id": 148,
                        "nodeType": "Return",
                        "src": "3597:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 150,
                        "src": "3475:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3475:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 150,
                        "src": "3483:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3483:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3474:16:0"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 150,
                        "src": "3514:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3514:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3513:6:0"
                  },
                  "scope": 310,
                  "src": "3462:148:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "3673:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 160,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "3689:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "3692:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3695:32:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 159,
                            "name": "sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              166,
                              193
                            ],
                            "referencedDeclaration": 193,
                            "src": "3685:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3685:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 158,
                        "id": 164,
                        "nodeType": "Return",
                        "src": "3678:50:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 166,
                        "src": "3628:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3628:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 166,
                        "src": "3636:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3636:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3627:16:0"
                  },
                  "returnParameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 166,
                        "src": "3667:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3667:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3666:6:0"
                  },
                  "scope": 310,
                  "src": "3615:118:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "3824:73:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 178,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 170,
                                "src": "3837:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 179,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 168,
                                "src": "3842:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3837:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 181,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3845:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 177,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3829:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3829:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "3829:29:0"
                      },
                      {
                        "assignments": [
                          185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 185,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 192,
                            "src": "3863:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 184,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3863:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 189,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "3872:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 187,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "3876:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3872:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3863:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 190,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "3891:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 176,
                        "id": 191,
                        "nodeType": "Return",
                        "src": "3884:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 193,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 193,
                        "src": "3751:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3751:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 193,
                        "src": "3759:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3759:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 193,
                        "src": "3767:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3767:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3750:44:0"
                  },
                  "returnParameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 193,
                        "src": "3818:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3818:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3817:6:0"
                  },
                  "scope": 310,
                  "src": "3738:159:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 226,
                    "nodeType": "Block",
                    "src": "3960:142:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 202,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "3973:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3978:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3973:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 208,
                        "nodeType": "IfStatement",
                        "src": "3969:32:0",
                        "trueBody": {
                          "id": 207,
                          "nodeType": "Block",
                          "src": "3981:20:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3994:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 201,
                              "id": 206,
                              "nodeType": "Return",
                              "src": "3987:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 210,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 226,
                            "src": "4007:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 209,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4007:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 214,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 211,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "4016:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "4020:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4016:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4007:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 216,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "4034:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 217,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 195,
                                  "src": "4038:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4034:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 219,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "4043:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4034:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4046:35:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 215,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4026:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4026:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "4026:56:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "4096:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 201,
                        "id": 225,
                        "nodeType": "Return",
                        "src": "4089:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 227,
                        "src": "3915:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3915:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 227,
                        "src": "3923:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3923:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3914:16:0"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 227,
                        "src": "3954:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3954:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3953:6:0"
                  },
                  "scope": 310,
                  "src": "3902:200:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "4165:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 237,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "4181:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 238,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "4184:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4187:28:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 236,
                            "name": "div",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              243,
                              270
                            ],
                            "referencedDeclaration": 270,
                            "src": "4177:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4177:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 235,
                        "id": 241,
                        "nodeType": "Return",
                        "src": "4170:46:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 243,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 243,
                        "src": "4120:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4120:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 243,
                        "src": "4128:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4128:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4119:16:0"
                  },
                  "returnParameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 243,
                        "src": "4159:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4159:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4158:6:0"
                  },
                  "scope": 310,
                  "src": "4107:114:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 269,
                    "nodeType": "Block",
                    "src": "4312:214:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 255,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 247,
                                "src": "4386:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4390:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4386:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 258,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "4393:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 254,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4378:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4378:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "4378:28:0"
                      },
                      {
                        "assignments": [
                          262
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 262,
                            "mutability": "mutable",
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 269,
                            "src": "4411:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 261,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4411:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 266,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 263,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "4420:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 264,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "4424:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4420:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4411:14:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 267,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "4520:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 253,
                        "id": 268,
                        "nodeType": "Return",
                        "src": "4513:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 270,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 270,
                        "src": "4239:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4239:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 270,
                        "src": "4247:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4247:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 270,
                        "src": "4255:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4255:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4238:44:0"
                  },
                  "returnParameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 270,
                        "src": "4306:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4306:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4305:6:0"
                  },
                  "scope": 310,
                  "src": "4226:300:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "4589:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 280,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "4605:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 281,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "4608:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4611:26:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              },
                              "value": "SafeMath: modulo by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              }
                            ],
                            "id": 279,
                            "name": "mod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              286,
                              309
                            ],
                            "referencedDeclaration": 309,
                            "src": "4601:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4601:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 278,
                        "id": 284,
                        "nodeType": "Return",
                        "src": "4594:44:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 286,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 286,
                        "src": "4544:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4544:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 286,
                        "src": "4552:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4552:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4543:16:0"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 286,
                        "src": "4583:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4583:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4582:6:0"
                  },
                  "scope": 310,
                  "src": "4531:112:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 308,
                    "nodeType": "Block",
                    "src": "4734:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 298,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "4747:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4752:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4747:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 301,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4755:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 297,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4739:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4739:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "4739:29:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 304,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "4780:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 305,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "4784:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4780:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 296,
                        "id": 307,
                        "nodeType": "Return",
                        "src": "4773:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 309,
                        "src": "4661:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4661:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 309,
                        "src": "4669:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4669:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 309,
                        "src": "4677:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4677:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4660:44:0"
                  },
                  "returnParameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 309,
                        "src": "4728:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4727:6:0"
                  },
                  "scope": 310,
                  "src": "4648:142:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3360,
              "src": "3439:1354:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 311,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 125,
                    "src": "4817:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$125",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 312,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4817:7:0"
                }
              ],
              "contractDependencies": [
                125
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 420,
              "linearizedBaseContracts": [
                420,
                125
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 420,
                  "src": "4829:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4829:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 320,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 320,
                        "src": "4884:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4884:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 320,
                        "src": "4915:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4915:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4883:57:0"
                  },
                  "src": "4857:84:0"
                },
                {
                  "body": {
                    "id": 340,
                    "nodeType": "Block",
                    "src": "4970:118:0",
                    "statements": [
                      {
                        "assignments": [
                          324
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 324,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 340,
                            "src": "4975:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 323,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4975:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 327,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 325,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "4995:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4995:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4975:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 328,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "5012:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 329,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "5021:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5012:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "5012:18:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5069:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5061:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 333,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5061:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5061:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 337,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "5073:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 332,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "5040:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5040:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 339,
                        "nodeType": "EmitStatement",
                        "src": "5035:48:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 341,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4958:2:0"
                  },
                  "returnParameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4970:0:0"
                  },
                  "scope": 420,
                  "src": "4946:142:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "5140:23:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 346,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "5152:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 345,
                        "id": 347,
                        "nodeType": "Return",
                        "src": "5145:13:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "8da5cb5b",
                  "id": 349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5107:2:0"
                  },
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 349,
                        "src": "5131:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5131:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5130:9:0"
                  },
                  "scope": 420,
                  "src": "5093:70:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "5189:83:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 352,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 314,
                                "src": "5202:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 353,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 113,
                                  "src": "5212:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5212:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5202:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5226:34:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 351,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5194:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5194:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 358,
                        "nodeType": "ExpressionStatement",
                        "src": "5194:67:0"
                      },
                      {
                        "id": 359,
                        "nodeType": "PlaceholderStatement",
                        "src": "5266:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 361,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5186:2:0"
                  },
                  "src": "5168:104:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "5323:79:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 367,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "5354:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5370:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5362:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 368,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5362:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5362:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 366,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "5333:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5333:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 373,
                        "nodeType": "EmitStatement",
                        "src": "5328:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "5378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5395:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5387:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 375,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5387:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5387:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5378:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 380,
                        "nodeType": "ExpressionStatement",
                        "src": "5378:19:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "715018a6",
                  "id": 382,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 364,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "5313:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5313:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 362,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5303:2:0"
                  },
                  "returnParameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5323:0:0"
                  },
                  "scope": 420,
                  "src": "5277:125:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "5469:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 390,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "5493:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 389,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "5474:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5474:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 392,
                        "nodeType": "ExpressionStatement",
                        "src": "5474:28:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "f2fde38b",
                  "id": 394,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 387,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "5459:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5459:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 394,
                        "src": "5434:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5434:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5433:18:0"
                  },
                  "returnParameters": {
                    "id": 388,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5469:0:0"
                  },
                  "scope": 420,
                  "src": "5407:100:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 418,
                    "nodeType": "Block",
                    "src": "5567:153:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 400,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 396,
                                "src": "5580:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5600:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5592:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 401,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5592:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5592:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5580:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5604:40:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 399,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5572:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5572:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 408,
                        "nodeType": "ExpressionStatement",
                        "src": "5572:73:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 314,
                              "src": "5676:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 411,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "5684:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 409,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "5655:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5655:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 413,
                        "nodeType": "EmitStatement",
                        "src": "5650:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 414,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "5698:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 415,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "5707:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5698:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "5698:17:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 419,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 419,
                        "src": "5540:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5540:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5539:18:0"
                  },
                  "returnParameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5567:0:0"
                  },
                  "scope": 420,
                  "src": "5512:208:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3360,
              "src": "4797:926:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 421,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 420,
                    "src": "5748:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$420",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 422,
                  "nodeType": "InheritanceSpecifier",
                  "src": "5748:7:0"
                }
              ],
              "contractDependencies": [
                125,
                420
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 528,
              "linearizedBaseContracts": [
                528,
                420,
                125
              ],
              "name": "Mintable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "ada3da15",
                  "id": 426,
                  "mutability": "mutable",
                  "name": "isMinters",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 528,
                  "src": "5760:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 425,
                    "keyType": {
                      "id": 423,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5768:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "5760:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 424,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "5779:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8623ec7b",
                  "id": 429,
                  "mutability": "mutable",
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 528,
                  "src": "5805:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 427,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5805:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 428,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5805:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 435,
                  "name": "SetMinters",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 431,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newMinter",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 435,
                        "src": "5884:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5884:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isMinter",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 435,
                        "src": "5910:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5910:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5883:41:0"
                  },
                  "src": "5867:58:0"
                },
                {
                  "body": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "5986:104:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "isMinters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "5991:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 444,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 443,
                              "name": "_newMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "6001:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5991:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6015:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5991:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 447,
                        "nodeType": "ExpressionStatement",
                        "src": "5991:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 451,
                              "name": "_newMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "6037:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 448,
                              "name": "minters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "6024:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6024:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6024:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 453,
                        "nodeType": "ExpressionStatement",
                        "src": "6024:24:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 455,
                              "name": "_newMinter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "6069:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6080:4:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 454,
                            "name": "SetMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "6058:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6058:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 458,
                        "nodeType": "EmitStatement",
                        "src": "6053:32:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "fca3b5aa",
                  "id": 460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 440,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "5976:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5976:9:0"
                    }
                  ],
                  "name": "setMinter",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "_newMinter",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 460,
                        "src": "5949:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5949:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5948:20:0"
                  },
                  "returnParameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5986:0:0"
                  },
                  "scope": 528,
                  "src": "5930:160:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "6159:81:0",
                    "statements": [
                      {
                        "body": {
                          "id": 485,
                          "nodeType": "Block",
                          "src": "6202:34:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 480,
                                      "name": "_minters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "6218:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 482,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 481,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 469,
                                      "src": "6227:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6218:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 479,
                                  "name": "setMinter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 460,
                                  "src": "6208:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6208:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 484,
                              "nodeType": "ExpressionStatement",
                              "src": "6208:22:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "6178:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 473,
                              "name": "_minters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "6180:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6180:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6178:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 486,
                        "initializationExpression": {
                          "assignments": [
                            469
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 469,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 486,
                              "src": "6168:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 468,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6168:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 471,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6175:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6168:8:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6197:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 476,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "6197:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 478,
                          "nodeType": "ExpressionStatement",
                          "src": "6197:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "6164:72:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "547d0096",
                  "id": 488,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 466,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "6149:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6149:9:0"
                    }
                  ],
                  "name": "setMinters",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "_minters",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 488,
                        "src": "6113:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6113:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 462,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6113:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6112:27:0"
                  },
                  "returnParameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6159:0:0"
                  },
                  "scope": 528,
                  "src": "6093:147:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "6302:71:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 495,
                              "name": "isMinters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "6307:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 497,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 496,
                              "name": "_minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "6317:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6307:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6328:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6307:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 500,
                        "nodeType": "ExpressionStatement",
                        "src": "6307:26:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 502,
                              "name": "_minter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "6354:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6362:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 501,
                            "name": "SetMinters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "6343:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6343:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 505,
                        "nodeType": "EmitStatement",
                        "src": "6338:30:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "21a5ceee",
                  "id": 507,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 493,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "6292:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6292:9:0"
                    }
                  ],
                  "name": "disableMinter",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "_minter",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 507,
                        "src": "6266:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6266:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6265:17:0"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6302:0:0"
                  },
                  "scope": 528,
                  "src": "6243:130:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 526,
                    "nodeType": "Block",
                    "src": "6400:115:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 510,
                                    "name": "isMinters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 426,
                                    "src": "6413:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 513,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 511,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6423:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 512,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "6423:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6413:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 514,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6438:4:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6413:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 516,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6446:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6446:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 518,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 349,
                                    "src": "6458:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 519,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6458:7:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6446:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6413:52:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d696e7461626c653a2063616c6c6572206973206e6f7420746865206d696e746572",
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6467:36:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b6b8d25a9f0c8c07ba8f8937c3a39a1723470e51379d32233013cd23dad616e0",
                                "typeString": "literal_string \"Mintable: caller is not the minter\""
                              },
                              "value": "Mintable: caller is not the minter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b6b8d25a9f0c8c07ba8f8937c3a39a1723470e51379d32233013cd23dad616e0",
                                "typeString": "literal_string \"Mintable: caller is not the minter\""
                              }
                            ],
                            "id": 509,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6405:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6405:99:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "6405:99:0"
                      },
                      {
                        "id": 525,
                        "nodeType": "PlaceholderStatement",
                        "src": "6509:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 527,
                  "name": "onlyMinter",
                  "nodeType": "ModifierDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6397:2:0"
                  },
                  "src": "6378:137:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3360,
              "src": "5727:793:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 589,
              "linearizedBaseContracts": [
                589
              ],
              "name": "IPancakeswapFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 538,
                  "name": "PairCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 538,
                        "src": "6577:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6577:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 538,
                        "src": "6601:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6601:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 538,
                        "src": "6625:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6625:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 538,
                        "src": "6639:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6639:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6576:68:0"
                  },
                  "src": "6559:86:0"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "017e7e58",
                  "id": 543,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6665:2:0"
                  },
                  "returnParameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 543,
                        "src": "6691:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6691:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6690:9:0"
                  },
                  "scope": 589,
                  "src": "6651:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "094b7415",
                  "id": 548,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToSetter",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6724:2:0"
                  },
                  "returnParameters": {
                    "id": 547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 548,
                        "src": "6750:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6750:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6749:9:0"
                  },
                  "scope": 589,
                  "src": "6704:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e6a43905",
                  "id": 557,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPair",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 550,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 557,
                        "src": "6782:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6782:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 552,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 557,
                        "src": "6798:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 551,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6798:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6781:32:0"
                  },
                  "returnParameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "pair",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 557,
                        "src": "6837:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6837:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6836:14:0"
                  },
                  "scope": 589,
                  "src": "6765:86:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1e3dd18b",
                  "id": 564,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairs",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 559,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 564,
                        "src": "6873:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6873:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6872:6:0"
                  },
                  "returnParameters": {
                    "id": 563,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "pair",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 564,
                        "src": "6902:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6902:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6901:14:0"
                  },
                  "scope": 589,
                  "src": "6855:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "574f2ba3",
                  "id": 569,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6943:2:0"
                  },
                  "returnParameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 569,
                        "src": "6969:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6969:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6968:6:0"
                  },
                  "scope": 589,
                  "src": "6920:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c9c65396",
                  "id": 578,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 578,
                        "src": "7001:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7001:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 578,
                        "src": "7017:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7017:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7000:32:0"
                  },
                  "returnParameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "pair",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 578,
                        "src": "7051:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7051:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7050:14:0"
                  },
                  "scope": 589,
                  "src": "6981:84:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f46901ed",
                  "id": 583,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 583,
                        "src": "7089:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7089:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7088:9:0"
                  },
                  "returnParameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7106:0:0"
                  },
                  "scope": 589,
                  "src": "7071:36:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "a2e74af6",
                  "id": 588,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 588,
                        "src": "7135:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7135:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7134:9:0"
                  },
                  "returnParameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7152:0:0"
                  },
                  "scope": 589,
                  "src": "7111:42:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3360,
              "src": "6524:632:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 829,
              "linearizedBaseContracts": [
                829
              ],
              "name": "IPancakeswapPair",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 597,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 597,
                        "src": "7207:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7207:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 593,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 597,
                        "src": "7230:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7230:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 597,
                        "src": "7255:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7255:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7206:60:0"
                  },
                  "src": "7192:75:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 605,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 605,
                        "src": "7286:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7286:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 605,
                        "src": "7308:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7308:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 605,
                        "src": "7328:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7328:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7285:54:0"
                  },
                  "src": "7271:69:0"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "06fdde03",
                  "id": 610,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7359:2:0"
                  },
                  "returnParameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 610,
                        "src": "7385:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7385:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7384:15:0"
                  },
                  "scope": 829,
                  "src": "7346:54:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "95d89b41",
                  "id": 615,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7419:2:0"
                  },
                  "returnParameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 615,
                        "src": "7445:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7445:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7444:15:0"
                  },
                  "scope": 829,
                  "src": "7404:56:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "313ce567",
                  "id": 620,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7481:2:0"
                  },
                  "returnParameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 620,
                        "src": "7507:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "7507:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7506:7:0"
                  },
                  "scope": 829,
                  "src": "7464:50:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "18160ddd",
                  "id": 625,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7538:2:0"
                  },
                  "returnParameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 625,
                        "src": "7564:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7564:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7563:6:0"
                  },
                  "scope": 829,
                  "src": "7518:52:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "70a08231",
                  "id": 632,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 632,
                        "src": "7593:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7593:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7592:15:0"
                  },
                  "returnParameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 630,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 632,
                        "src": "7631:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 629,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7631:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7630:6:0"
                  },
                  "scope": 829,
                  "src": "7574:63:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "dd62ed3e",
                  "id": 641,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 641,
                        "src": "7660:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7660:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 641,
                        "src": "7675:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7675:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7659:32:0"
                  },
                  "returnParameters": {
                    "id": 640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 641,
                        "src": "7715:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7715:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7714:6:0"
                  },
                  "scope": 829,
                  "src": "7641:80:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "095ea7b3",
                  "id": 650,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7744:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7744:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7761:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7761:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7743:29:0"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7791:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7791:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7790:6:0"
                  },
                  "scope": 829,
                  "src": "7727:70:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "a9059cbb",
                  "id": 659,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 652,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7819:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7819:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 654,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7831:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 653,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7831:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7818:24:0"
                  },
                  "returnParameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 659,
                        "src": "7861:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7861:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7860:6:0"
                  },
                  "scope": 829,
                  "src": "7801:66:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "23b872dd",
                  "id": 670,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 670,
                        "src": "7893:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7893:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 670,
                        "src": "7907:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7907:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 670,
                        "src": "7919:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7919:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7892:38:0"
                  },
                  "returnParameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 668,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 670,
                        "src": "7949:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7949:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7948:6:0"
                  },
                  "scope": 829,
                  "src": "7871:84:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "3644e515",
                  "id": 675,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7986:2:0"
                  },
                  "returnParameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 675,
                        "src": "8012:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8012:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8011:9:0"
                  },
                  "scope": 829,
                  "src": "7961:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "30adf81f",
                  "id": 680,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8049:2:0"
                  },
                  "returnParameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 680,
                        "src": "8075:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8075:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8074:9:0"
                  },
                  "scope": 829,
                  "src": "8025:59:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7ecebe00",
                  "id": 687,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 687,
                        "src": "8104:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8104:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8103:15:0"
                  },
                  "returnParameters": {
                    "id": 686,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 687,
                        "src": "8142:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8142:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8141:6:0"
                  },
                  "scope": 829,
                  "src": "8088:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d505accf",
                  "id": 704,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8170:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8170:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8185:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8185:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8202:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8202:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8214:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8214:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8229:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "8229:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8238:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8238:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 704,
                        "src": "8249:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8249:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8169:90:0"
                  },
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8268:0:0"
                  },
                  "scope": 829,
                  "src": "8154:115:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 712,
                  "name": "Mint",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 712,
                        "src": "8286:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8286:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 708,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 712,
                        "src": "8310:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8310:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 710,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 712,
                        "src": "8324:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8324:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8285:52:0"
                  },
                  "src": "8275:63:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 722,
                  "name": "Burn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 722,
                        "src": "8353:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8353:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 716,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 722,
                        "src": "8377:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8377:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 722,
                        "src": "8391:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8391:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 722,
                        "src": "8405:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8405:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8352:72:0"
                  },
                  "src": "8342:83:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 736,
                  "name": "Swap",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 724,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 736,
                        "src": "8446:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8446:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 726,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 736,
                        "src": "8475:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8475:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 728,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 736,
                        "src": "8496:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8496:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 730,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 736,
                        "src": "8517:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8517:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 732,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 736,
                        "src": "8539:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8539:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 734,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 736,
                        "src": "8561:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 733,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8561:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8439:145:0"
                  },
                  "src": "8429:156:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 742,
                  "name": "Sync",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 738,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 742,
                        "src": "8600:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 737,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "8600:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 740,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 742,
                        "src": "8618:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "8618:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8599:36:0"
                  },
                  "src": "8589:47:0"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "ba9a7a56",
                  "id": 747,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "MINIMUM_LIQUIDITY",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 743,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8668:2:0"
                  },
                  "returnParameters": {
                    "id": 746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 745,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 747,
                        "src": "8694:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8694:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8693:6:0"
                  },
                  "scope": 829,
                  "src": "8642:58:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c45a0155",
                  "id": 752,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 748,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8720:2:0"
                  },
                  "returnParameters": {
                    "id": 751,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 752,
                        "src": "8746:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8746:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8745:9:0"
                  },
                  "scope": 829,
                  "src": "8704:51:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0dfe1681",
                  "id": 757,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8774:2:0"
                  },
                  "returnParameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 757,
                        "src": "8800:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8800:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8799:9:0"
                  },
                  "scope": 829,
                  "src": "8759:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d21220a7",
                  "id": 762,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8828:2:0"
                  },
                  "returnParameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 762,
                        "src": "8854:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8854:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8853:9:0"
                  },
                  "scope": 829,
                  "src": "8813:50:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0902f1ac",
                  "id": 771,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8887:2:0"
                  },
                  "returnParameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 771,
                        "src": "8913:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "8913:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 771,
                        "src": "8931:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "8931:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "blockTimestampLast",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 771,
                        "src": "8949:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8949:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8912:63:0"
                  },
                  "scope": 829,
                  "src": "8867:109:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5909c0d5",
                  "id": 776,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price0CumulativeLast",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 772,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9009:2:0"
                  },
                  "returnParameters": {
                    "id": 775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 774,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 776,
                        "src": "9035:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 773,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9035:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9034:6:0"
                  },
                  "scope": 829,
                  "src": "8980:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5a3d5493",
                  "id": 781,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price1CumulativeLast",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9074:2:0"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 781,
                        "src": "9100:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9100:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9099:6:0"
                  },
                  "scope": 829,
                  "src": "9045:61:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7464fc3d",
                  "id": 786,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "kLast",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9124:2:0"
                  },
                  "returnParameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 786,
                        "src": "9150:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9150:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9149:6:0"
                  },
                  "scope": 829,
                  "src": "9110:46:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "6a627842",
                  "id": 793,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 788,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 793,
                        "src": "9176:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9176:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9175:12:0"
                  },
                  "returnParameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 793,
                        "src": "9206:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9206:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9205:16:0"
                  },
                  "scope": 829,
                  "src": "9162:60:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "89afcb44",
                  "id": 802,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 796,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 795,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 802,
                        "src": "9240:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 794,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9240:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9239:12:0"
                  },
                  "returnParameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 802,
                        "src": "9270:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9270:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 800,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 802,
                        "src": "9284:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9284:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9269:28:0"
                  },
                  "scope": 829,
                  "src": "9226:72:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "022c0d9f",
                  "id": 813,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 813,
                        "src": "9316:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9316:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 813,
                        "src": "9333:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9333:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 808,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 813,
                        "src": "9350:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9350:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 813,
                        "src": "9362:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9362:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9315:67:0"
                  },
                  "returnParameters": {
                    "id": 812,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9391:0:0"
                  },
                  "scope": 829,
                  "src": "9302:90:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "bc25cf77",
                  "id": 818,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "skim",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 818,
                        "src": "9410:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9410:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9409:12:0"
                  },
                  "returnParameters": {
                    "id": 817,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9430:0:0"
                  },
                  "scope": 829,
                  "src": "9396:35:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "fff6cae9",
                  "id": 821,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sync",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9448:2:0"
                  },
                  "returnParameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9459:0:0"
                  },
                  "scope": 829,
                  "src": "9435:25:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "485cc955",
                  "id": 828,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 823,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 828,
                        "src": "9486:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9486:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 825,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 828,
                        "src": "9495:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9495:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9485:18:0"
                  },
                  "returnParameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9512:0:0"
                  },
                  "scope": 829,
                  "src": "9466:47:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3360,
              "src": "7160:2356:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1217,
              "linearizedBaseContracts": [
                1217
              ],
              "name": "IPancakeswapRouter",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c45a0155",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9569:2:0"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 834,
                        "src": "9595:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9595:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9594:9:0"
                  },
                  "scope": 1217,
                  "src": "9553:51:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "ad5c4648",
                  "id": 839,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WETH",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9621:2:0"
                  },
                  "returnParameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 839,
                        "src": "9647:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9647:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9646:9:0"
                  },
                  "scope": 1217,
                  "src": "9608:48:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e8e33700",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9690:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9690:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9711:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9711:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "amountADesired",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9732:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "amountBDesired",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9758:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9758:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9784:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9784:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9806:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9806:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9828:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9828:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9845:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9845:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9683:180:0"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9882:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 857,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9882:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9896:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9896:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 864,
                        "src": "9910:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9910:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9881:44:0"
                  },
                  "scope": 1217,
                  "src": "9662:264:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f305d719",
                  "id": 885,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidityETH",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "9961:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9961:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "amountTokenDesired",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "9981:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9981:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10011:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10011:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10037:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10037:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10061:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10061:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10078:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10078:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9954:142:0"
                  },
                  "returnParameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 879,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10123:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 878,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10123:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10141:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10141:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 885,
                        "src": "10157:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10157:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10122:50:0"
                  },
                  "scope": 1217,
                  "src": "9930:243:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "baa2abde",
                  "id": 906,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 900,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10208:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10208:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 889,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10229:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 888,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10229:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 891,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10250:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 890,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10250:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10271:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10271:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10293:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10293:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10315:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10315:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10332:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10332:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10201:149:0"
                  },
                  "returnParameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 902,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10369:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 901,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10369:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 906,
                        "src": "10383:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10383:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10368:28:0"
                  },
                  "scope": 1217,
                  "src": "10177:220:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "02751cec",
                  "id": 925,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETH",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10435:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10435:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10455:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10455:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10476:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10476:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10502:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10502:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 916,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10526:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10526:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10543:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10543:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10428:133:0"
                  },
                  "returnParameters": {
                    "id": 924,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10580:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10580:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 925,
                        "src": "10598:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10598:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10579:34:0"
                  },
                  "scope": 1217,
                  "src": "10401:213:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "2195995c",
                  "id": 954,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityWithPermit",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 948,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10659:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10659:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 929,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10680:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10680:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 931,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10701:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 930,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10701:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "amountAMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10722:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 932,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10722:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "amountBMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10744:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10744:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10766:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 936,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10766:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10783:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10783:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 941,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10803:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 940,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10803:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10820:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10820:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10829:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10829:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10840:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10840:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10652:202:0"
                  },
                  "returnParameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10873:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10873:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 954,
                        "src": "10887:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10887:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10872:28:0"
                  },
                  "scope": 1217,
                  "src": "10618:283:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "ded9382a",
                  "id": 981,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHWithPermit",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 975,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "10949:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10949:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "10969:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10969:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 960,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "10990:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 959,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10990:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 962,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11016:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 961,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11016:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11040:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11040:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11057:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11057:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11077:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11077:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 970,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11094:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 969,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "11094:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 972,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11103:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 971,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11103:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 974,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11114:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 973,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11114:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10942:186:0"
                  },
                  "returnParameters": {
                    "id": 980,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 977,
                        "mutability": "mutable",
                        "name": "amountToken",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11147:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11147:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 979,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 981,
                        "src": "11165:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 978,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11165:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11146:34:0"
                  },
                  "scope": 1217,
                  "src": "10905:276:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "38ed1739",
                  "id": 998,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 983,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 998,
                        "src": "11225:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11225:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 985,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 998,
                        "src": "11245:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 984,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11245:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 998,
                        "src": "11269:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 986,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11269:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 987,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11269:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 998,
                        "src": "11299:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11299:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 998,
                        "src": "11316:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11316:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11218:116:0"
                  },
                  "returnParameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 996,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 998,
                        "src": "11353:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 994,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11353:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 995,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11353:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11352:23:0"
                  },
                  "scope": 1217,
                  "src": "11185:191:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8803dbee",
                  "id": 1015,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForExactTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1000,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1015,
                        "src": "11420:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 999,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11420:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1015,
                        "src": "11441:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11441:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1015,
                        "src": "11464:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1003,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11464:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1004,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11464:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1015,
                        "src": "11494:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11494:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1009,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1015,
                        "src": "11511:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1008,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11511:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11413:116:0"
                  },
                  "returnParameters": {
                    "id": 1014,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1015,
                        "src": "11548:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1011,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11548:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1012,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11548:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11547:23:0"
                  },
                  "scope": 1217,
                  "src": "11380:191:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "7ff36ab5",
                  "id": 1030,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1017,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1030,
                        "src": "11606:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11606:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1020,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1030,
                        "src": "11625:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1018,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11625:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1019,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11625:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1030,
                        "src": "11650:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11650:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1030,
                        "src": "11662:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1023,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11662:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11605:71:0"
                  },
                  "returnParameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1030,
                        "src": "11718:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1026,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11718:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1027,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11718:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11717:23:0"
                  },
                  "scope": 1217,
                  "src": "11575:166:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4a25d94a",
                  "id": 1047,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForExactETH",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1032,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1047,
                        "src": "11776:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1031,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11776:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1034,
                        "mutability": "mutable",
                        "name": "amountInMax",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1047,
                        "src": "11792:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1033,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11792:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1047,
                        "src": "11810:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11810:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1036,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11810:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1047,
                        "src": "11835:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11835:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1047,
                        "src": "11847:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11847:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11775:86:0"
                  },
                  "returnParameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1047,
                        "src": "11890:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1043,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11890:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1044,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11890:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11889:23:0"
                  },
                  "scope": 1217,
                  "src": "11745:168:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "18cbafe5",
                  "id": 1064,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETH",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1064,
                        "src": "11948:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11948:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1064,
                        "src": "11963:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11963:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1064,
                        "src": "11982:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1052,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11982:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1053,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "11982:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1064,
                        "src": "12007:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12007:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1064,
                        "src": "12019:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12019:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11947:86:0"
                  },
                  "returnParameters": {
                    "id": 1063,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1062,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1064,
                        "src": "12062:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1060,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12062:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1061,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12062:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12061:23:0"
                  },
                  "scope": 1217,
                  "src": "11917:168:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "fb3bdb41",
                  "id": 1079,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHForExactTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1079,
                        "src": "12120:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12120:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1079,
                        "src": "12136:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12136:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1068,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12136:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1071,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1079,
                        "src": "12161:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1070,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12161:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1079,
                        "src": "12173:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12173:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12119:68:0"
                  },
                  "returnParameters": {
                    "id": 1078,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1077,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1079,
                        "src": "12229:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1075,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12229:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1076,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12229:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12228:23:0"
                  },
                  "scope": 1217,
                  "src": "12089:163:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "ad615dec",
                  "id": 1090,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "quote",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "amountA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1090,
                        "src": "12273:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12273:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "reserveA",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1090,
                        "src": "12287:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12287:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "reserveB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1090,
                        "src": "12302:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12302:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12272:44:0"
                  },
                  "returnParameters": {
                    "id": 1089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "amountB",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1090,
                        "src": "12340:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12340:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12339:14:0"
                  },
                  "scope": 1217,
                  "src": "12258:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "054d50d4",
                  "id": 1101,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12380:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12380:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12395:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12395:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12411:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12411:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12379:48:0"
                  },
                  "returnParameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1101,
                        "src": "12451:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12451:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12450:16:0"
                  },
                  "scope": 1217,
                  "src": "12358:109:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "85f8c259",
                  "id": 1112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountIn",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1112,
                        "src": "12492:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12492:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "reserveIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1112,
                        "src": "12508:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12508:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "reserveOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1112,
                        "src": "12524:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12524:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12491:49:0"
                  },
                  "returnParameters": {
                    "id": 1111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1112,
                        "src": "12564:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12564:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12563:15:0"
                  },
                  "scope": 1217,
                  "src": "12471:108:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d06ca61f",
                  "id": 1123,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsOut",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1123,
                        "src": "12606:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12606:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1117,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1123,
                        "src": "12621:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12621:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1116,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12621:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12605:40:0"
                  },
                  "returnParameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1123,
                        "src": "12669:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1119,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12669:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1120,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12669:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12668:23:0"
                  },
                  "scope": 1217,
                  "src": "12583:109:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "1f00ca74",
                  "id": 1134,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountsIn",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1125,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1134,
                        "src": "12718:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12718:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1134,
                        "src": "12734:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12734:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1127,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12734:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12717:41:0"
                  },
                  "returnParameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1134,
                        "src": "12782:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1130,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12782:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1131,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12782:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12781:23:0"
                  },
                  "scope": 1217,
                  "src": "12696:109:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "af2979eb",
                  "id": 1151,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHSupportingFeeOnTransferTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1136,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "12871:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12871:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1138,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "12890:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12890:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "12910:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12910:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "12935:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12935:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "12958:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12958:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "12974:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12974:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12865:127:0"
                  },
                  "returnParameters": {
                    "id": 1150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1151,
                        "src": "13011:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13011:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13010:16:0"
                  },
                  "scope": 1217,
                  "src": "12809:218:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5b0d5984",
                  "id": 1176,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1153,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13103:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13103:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1155,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13122:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1154,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13122:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "amountTokenMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13142:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13142:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1159,
                        "mutability": "mutable",
                        "name": "amountETHMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13167:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1158,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13167:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13190:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13190:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1163,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13206:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1162,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13206:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "approveMax",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13225:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13225:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1167,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13242:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1166,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "13242:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1169,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13251:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13251:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13262:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13262:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13097:179:0"
                  },
                  "returnParameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1174,
                        "mutability": "mutable",
                        "name": "amountETH",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1176,
                        "src": "13295:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13295:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13294:16:0"
                  },
                  "scope": 1217,
                  "src": "13031:280:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5c11d795",
                  "id": 1190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1190,
                        "src": "13386:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13386:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1180,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1190,
                        "src": "13405:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1179,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13405:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1183,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1190,
                        "src": "13428:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13428:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1182,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "13428:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1190,
                        "src": "13457:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13457:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1190,
                        "src": "13473:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13473:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13380:111:0"
                  },
                  "returnParameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13500:0:0"
                  },
                  "scope": 1217,
                  "src": "13318:183:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "b6f9de95",
                  "id": 1202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1202,
                        "src": "13570:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13570:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1202,
                        "src": "13593:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13593:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1194,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "13593:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1202,
                        "src": "13622:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13622:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1202,
                        "src": "13638:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13638:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13564:92:0"
                  },
                  "returnParameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13673:0:0"
                  },
                  "scope": 1217,
                  "src": "13505:169:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "791ac947",
                  "id": 1216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1216,
                        "src": "13743:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13743:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1216,
                        "src": "13762:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13762:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "path",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1216,
                        "src": "13785:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13785:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1208,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "13785:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1216,
                        "src": "13814:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13814:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1216,
                        "src": "13830:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13830:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13737:111:0"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13857:0:0"
                  },
                  "scope": 1217,
                  "src": "13678:180:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3360,
              "src": "9520:4341:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1223,
              "linearizedBaseContracts": [
                1223
              ],
              "name": "IStoreContract",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0a67d2c7",
                  "id": 1222,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withDraw",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1219,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1222,
                        "src": "13912:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13912:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "13911:22:0"
                  },
                  "returnParameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13943:0:0"
                  },
                  "scope": 1223,
                  "src": "13894:50:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3360,
              "src": "13865:82:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": null,
              "fullyImplemented": false,
              "id": 1252,
              "linearizedBaseContracts": [
                1252
              ],
              "name": "IStaking",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "0106395f",
                  "id": 1228,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeTokenAddress",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13998:2:0"
                  },
                  "returnParameters": {
                    "id": 1227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1228,
                        "src": "14023:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14023:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14022:9:0"
                  },
                  "scope": 1252,
                  "src": "13972:60:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c3453153",
                  "id": 1241,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakeInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1230,
                        "mutability": "mutable",
                        "name": "stakerAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1241,
                        "src": "14057:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14057:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14056:23:0"
                  },
                  "returnParameters": {
                    "id": 1240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "mutability": "mutable",
                        "name": "_total",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1241,
                        "src": "14102:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14102:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "_staking",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1241,
                        "src": "14115:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14115:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1237,
                        "mutability": "mutable",
                        "name": "_rewardable",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1241,
                        "src": "14130:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14130:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1239,
                        "mutability": "mutable",
                        "name": "_rewards",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1241,
                        "src": "14148:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1238,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14148:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14101:61:0"
                  },
                  "scope": 1252,
                  "src": "14035:128:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "2461da55",
                  "id": 1246,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "countTotalStake",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14190:2:0"
                  },
                  "returnParameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1244,
                        "mutability": "mutable",
                        "name": "_totalStake",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1246,
                        "src": "14216:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1243,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14216:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14215:18:0"
                  },
                  "scope": 1252,
                  "src": "14166:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e7caa8c4",
                  "id": 1251,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "countTotalReward",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1247,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14262:2:0"
                  },
                  "returnParameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1249,
                        "mutability": "mutable",
                        "name": "_totalReward",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1251,
                        "src": "14288:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14288:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14287:19:0"
                  },
                  "scope": 1252,
                  "src": "14237:70:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3360,
              "src": "13949:361:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1253,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 125,
                    "src": "14427:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$125",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 1254,
                  "nodeType": "InheritanceSpecifier",
                  "src": "14427:7:0"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1255,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 100,
                    "src": "14436:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$100",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1256,
                  "nodeType": "InheritanceSpecifier",
                  "src": "14436:6:0"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1257,
                    "name": "Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 528,
                    "src": "14444:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Mintable_$528",
                      "typeString": "contract Mintable"
                    }
                  },
                  "id": 1258,
                  "nodeType": "InheritanceSpecifier",
                  "src": "14444:8:0"
                }
              ],
              "contractDependencies": [
                100,
                125,
                420,
                528
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 3359,
              "linearizedBaseContracts": [
                3359,
                528,
                420,
                100,
                125
              ],
              "name": "DMToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1261,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1259,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 310,
                    "src": "14463:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$310",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "14457:24:0",
                  "typeName": {
                    "id": 1260,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14476:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14486:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1264,
                    "keyType": {
                      "id": 1262,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14495:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "14486:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1263,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "14506:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14535:66:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1270,
                    "keyType": {
                      "id": 1266,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "14535:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 1269,
                      "keyType": {
                        "id": 1267,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14564:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "14555:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 1268,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14575:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 1279,
                  "name": "Presaled",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1273,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1279,
                        "src": "14663:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14663:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1275,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "usdtAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1279,
                        "src": "14680:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1274,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14680:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1277,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "dMtokenAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1279,
                        "src": "14700:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14700:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "14658:64:0"
                  },
                  "src": "14643:80:0"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14731:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14731:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14757:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14763:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14763:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "444d",
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14788:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c8518835904ba6189138e7a2daecfbc78d674ad5a194a347769948b7caad3649",
                      "typeString": "literal_string \"DM\""
                    },
                    "value": "DM"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1288,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14796:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14796:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "444d546f6b656e",
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14819:9:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_692dbad0874abe3b8684af769d94c17ca68385b1fa82ebf956c1f08d1b012b9b",
                      "typeString": "literal_string \"DMToken\""
                    },
                    "value": "DMToken"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_maxSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14832:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1289,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14832:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "316539",
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14858:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000_by_1",
                        "typeString": "int_const 1000000000"
                      },
                      "value": "1e9"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 1291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14864:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14870:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "14864:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "14858:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000000"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14889:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14889:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_250000000000000000000000000_by_1",
                      "typeString": "int_const 250000000000000000000000000"
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_250000000_by_1",
                        "typeString": "int_const 250000000"
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "323530",
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14917:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_250_by_1",
                          "typeString": "int_const 250"
                        },
                        "value": "250"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "316536",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14923:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1e6"
                      },
                      "src": "14917:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250000000_by_1",
                        "typeString": "int_const 250000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 1302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14929:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14935:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "14929:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "14917:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_250000000000000000000000000_by_1",
                      "typeString": "int_const 250000000000000000000000000"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "98118cb4",
                  "id": 1307,
                  "mutability": "mutable",
                  "name": "liquidityFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14960:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14960:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "35",
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14987:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8b424267",
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "rewardFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "14992:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14992:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "35",
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15016:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5_by_1",
                      "typeString": "int_const 5"
                    },
                    "value": "5"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "97c4fac7",
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "insuranceFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15021:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15021:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15048:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8961be6b",
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "communityFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15053:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15053:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "33",
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15080:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "86e476dd",
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "communityAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15125:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15125:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "41275358",
                  "id": 1320,
                  "mutability": "mutable",
                  "name": "feeAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15160:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15160:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4a74bb02",
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "swapAndLiquifyEnabled",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15191:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15191:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15227:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4d9e9e09",
                  "id": 1328,
                  "mutability": "mutable",
                  "name": "minLiquidityAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15236:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1324,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15236:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000"
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "316533",
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15269:3:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1e3"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 1326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15275:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "15269:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "db6754ed",
                  "id": 1330,
                  "mutability": "mutable",
                  "name": "pancakeswapRouter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15285:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                    "typeString": "contract IPancakeswapRouter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1329,
                    "name": "IPancakeswapRouter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1217,
                    "src": "15285:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                      "typeString": "contract IPancakeswapRouter"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9a258a79",
                  "id": 1332,
                  "mutability": "mutable",
                  "name": "pancakeswapMDUSDTPair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15332:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15332:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ff920c74",
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "USDTAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15372:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f2c4da93",
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "storeAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15404:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15404:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "inSwapAndLiquify",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15437:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15437:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1349,
                    "nodeType": "Block",
                    "src": "15483:68:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1340,
                            "name": "inSwapAndLiquify",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "15488:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15507:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15488:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1343,
                        "nodeType": "ExpressionStatement",
                        "src": "15488:23:0"
                      },
                      {
                        "id": 1344,
                        "nodeType": "PlaceholderStatement",
                        "src": "15516:1:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1345,
                            "name": "inSwapAndLiquify",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "15522:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15541:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "15522:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1348,
                        "nodeType": "ExpressionStatement",
                        "src": "15522:24:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1350,
                  "name": "lockTheSwap",
                  "nodeType": "ModifierDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1339,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15483:0:0"
                  },
                  "src": "15462:89:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1352,
                  "mutability": "mutable",
                  "name": "inRedeem",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15556:13:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15556:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1363,
                    "nodeType": "Block",
                    "src": "15593:52:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1354,
                            "name": "inRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1352,
                            "src": "15598:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15609:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15598:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1357,
                        "nodeType": "ExpressionStatement",
                        "src": "15598:15:0"
                      },
                      {
                        "id": 1358,
                        "nodeType": "PlaceholderStatement",
                        "src": "15618:1:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1359,
                            "name": "inRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1352,
                            "src": "15624:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 1360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15635:5:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "15624:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1362,
                        "nodeType": "ExpressionStatement",
                        "src": "15624:16:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1364,
                  "name": "lockRedeem",
                  "nodeType": "ModifierDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15593:0:0"
                  },
                  "src": "15573:72:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "15650:14:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1374,
                    "nodeType": "Block",
                    "src": "15691:287:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1369,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "15852:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1370,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "15864:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "15864:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15852:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1373,
                        "nodeType": "ExpressionStatement",
                        "src": "15852:27:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1375,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15681:2:0"
                  },
                  "returnParameters": {
                    "id": 1368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15691:0:0"
                  },
                  "scope": 3359,
                  "src": "15670:308:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1386,
                    "nodeType": "Block",
                    "src": "16049:40:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1382,
                            "name": "swapAndLiquifyEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "16054:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1383,
                            "name": "enable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "16078:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16054:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1385,
                        "nodeType": "ExpressionStatement",
                        "src": "16054:30:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "c49b9a80",
                  "id": 1387,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1380,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1379,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "16039:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16039:9:0"
                    }
                  ],
                  "name": "setSwapAndLiquifyEnabled",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "enable",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1387,
                        "src": "16017:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "16017:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16016:13:0"
                  },
                  "returnParameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16049:0:0"
                  },
                  "scope": 3359,
                  "src": "15983:106:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1443,
                    "nodeType": "Block",
                    "src": "16259:400:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1402,
                            "name": "feeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "16264:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1403,
                            "name": "_feeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "16277:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16264:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1405,
                        "nodeType": "ExpressionStatement",
                        "src": "16264:24:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1406,
                            "name": "communityAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "16293:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1407,
                            "name": "_communityAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "16312:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16293:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1409,
                        "nodeType": "ExpressionStatement",
                        "src": "16293:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1410,
                            "name": "USDTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "16334:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1411,
                            "name": "_USDTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1395,
                            "src": "16348:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16334:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1413,
                        "nodeType": "ExpressionStatement",
                        "src": "16334:26:0"
                      },
                      {
                        "assignments": [
                          1415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1415,
                            "mutability": "mutable",
                            "name": "_pancakeswapRouter",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1443,
                            "src": "16365:37:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                              "typeString": "contract IPancakeswapRouter"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1414,
                              "name": "IPancakeswapRouter",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 1217,
                              "src": "16365:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                "typeString": "contract IPancakeswapRouter"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1419,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1417,
                              "name": "_RouterAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1393,
                              "src": "16424:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1416,
                            "name": "IPancakeswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1217,
                            "src": "16405:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPancakeswapRouter_$1217_$",
                              "typeString": "type(contract IPancakeswapRouter)"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16405:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                            "typeString": "contract IPancakeswapRouter"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16365:74:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1420,
                            "name": "pancakeswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "16444:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                              "typeString": "contract IPancakeswapRouter"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1421,
                            "name": "_pancakeswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "16464:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                              "typeString": "contract IPancakeswapRouter"
                            }
                          },
                          "src": "16444:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                            "typeString": "contract IPancakeswapRouter"
                          }
                        },
                        "id": 1423,
                        "nodeType": "ExpressionStatement",
                        "src": "16444:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1424,
                            "name": "pancakeswapMDUSDTPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "16487:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1433,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "16580:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DMToken_$3359",
                                      "typeString": "contract DMToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DMToken_$3359",
                                      "typeString": "contract DMToken"
                                    }
                                  ],
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "16572:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1431,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "16572:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16572:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1435,
                                "name": "USDTAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "16587:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1426,
                                        "name": "_pancakeswapRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1415,
                                        "src": "16531:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                          "typeString": "contract IPancakeswapRouter"
                                        }
                                      },
                                      "id": 1427,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "factory",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 834,
                                      "src": "16531:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 1428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16531:28:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1425,
                                  "name": "IPancakeswapFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 589,
                                  "src": "16511:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPancakeswapFactory_$589_$",
                                    "typeString": "type(contract IPancakeswapFactory)"
                                  }
                                },
                                "id": 1429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16511:49:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPancakeswapFactory_$589",
                                  "typeString": "contract IPancakeswapFactory"
                                }
                              },
                              "id": 1430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "createPair",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 578,
                              "src": "16511:60:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                                "typeString": "function (address,address) external returns (address)"
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16511:88:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16487:112:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1438,
                        "nodeType": "ExpressionStatement",
                        "src": "16487:112:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1439,
                            "name": "storeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "16622:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1440,
                            "name": "_storeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "16637:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16622:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1442,
                        "nodeType": "ExpressionStatement",
                        "src": "16622:28:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "49371b19",
                  "id": 1444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1400,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1399,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "16249:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16249:9:0"
                    }
                  ],
                  "name": "setInitialAddresses",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1389,
                        "mutability": "mutable",
                        "name": "_feeAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1444,
                        "src": "16123:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16123:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1391,
                        "mutability": "mutable",
                        "name": "_communityAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1444,
                        "src": "16144:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16144:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "_RouterAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1444,
                        "src": "16171:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16171:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1395,
                        "mutability": "mutable",
                        "name": "_USDTAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1444,
                        "src": "16195:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16195:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1397,
                        "mutability": "mutable",
                        "name": "_storeAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1444,
                        "src": "16217:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16217:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16122:117:0"
                  },
                  "returnParameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16259:0:0"
                  },
                  "scope": 3359,
                  "src": "16094:565:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1477,
                    "nodeType": "Block",
                    "src": "16757:110:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1453,
                            "name": "liquidityFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1307,
                            "src": "16762:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1454,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "16777:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            "id": 1456,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16782:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16777:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16762:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1458,
                        "nodeType": "ExpressionStatement",
                        "src": "16762:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1459,
                            "name": "rewardFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1310,
                            "src": "16789:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1460,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "16801:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            "id": 1462,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16806:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16801:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16789:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1464,
                        "nodeType": "ExpressionStatement",
                        "src": "16789:19:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1465,
                            "name": "insuranceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1313,
                            "src": "16813:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1466,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "16828:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            "id": 1468,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16833:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16828:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16813:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1470,
                        "nodeType": "ExpressionStatement",
                        "src": "16813:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1471,
                            "name": "communityFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "16840:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1472,
                              "name": "fees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "16855:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                                "typeString": "uint256[4] memory"
                              }
                            },
                            "id": 1474,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16860:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16855:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16840:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "16840:22:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "6b74b211",
                  "id": 1478,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1451,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1450,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "16747:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16747:9:0"
                    }
                  ],
                  "name": "setFees",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "fees",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1478,
                        "src": "16717:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1445,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "16717:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1447,
                          "length": {
                            "argumentTypes": null,
                            "hexValue": "34",
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16722:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "16717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16716:21:0"
                  },
                  "returnParameters": {
                    "id": 1452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16757:0:0"
                  },
                  "scope": 3359,
                  "src": "16700:167:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    31
                  ],
                  "body": {
                    "id": 1487,
                    "nodeType": "Block",
                    "src": "16933:24:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1484,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "16945:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16945:7:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1483,
                        "id": 1486,
                        "nodeType": "Return",
                        "src": "16938:14:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "893d20e8",
                  "id": 1488,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOwner",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1480,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "16906:8:0"
                  },
                  "parameters": {
                    "id": 1479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16889:2:0"
                  },
                  "returnParameters": {
                    "id": 1483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1488,
                        "src": "16924:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16924:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "16923:9:0"
                  },
                  "scope": 3359,
                  "src": "16872:85:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1502,
                    "nodeType": "Block",
                    "src": "17012:67:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1493,
                                    "name": "liquidityFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1307,
                                    "src": "17025:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1494,
                                    "name": "insuranceFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1313,
                                    "src": "17038:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17025:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1496,
                                  "name": "rewardFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1310,
                                  "src": "17051:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17025:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1498,
                                "name": "communityFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1316,
                                "src": "17061:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17025:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1500,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17024:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1492,
                        "id": 1501,
                        "nodeType": "Return",
                        "src": "17017:57:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "7ae316d0",
                  "id": 1503,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalFee",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1489,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16982:2:0"
                  },
                  "returnParameters": {
                    "id": 1492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1491,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1503,
                        "src": "17006:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1490,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17006:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17005:6:0"
                  },
                  "scope": 3359,
                  "src": "16962:117:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    13
                  ],
                  "body": {
                    "id": 1511,
                    "nodeType": "Block",
                    "src": "17143:26:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1509,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "17155:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1508,
                        "id": 1510,
                        "nodeType": "Return",
                        "src": "17148:16:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "313ce567",
                  "id": 1512,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1505,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17113:8:0"
                  },
                  "parameters": {
                    "id": 1504,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17101:2:0"
                  },
                  "returnParameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1507,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1512,
                        "src": "17136:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1506,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "17136:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17135:7:0"
                  },
                  "scope": 3359,
                  "src": "17084:85:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    19
                  ],
                  "body": {
                    "id": 1520,
                    "nodeType": "Block",
                    "src": "17239:24:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1518,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1285,
                          "src": "17251:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1517,
                        "id": 1519,
                        "nodeType": "Return",
                        "src": "17244:14:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "95d89b41",
                  "id": 1521,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1514,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17201:8:0"
                  },
                  "parameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17189:2:0"
                  },
                  "returnParameters": {
                    "id": 1517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1516,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1521,
                        "src": "17224:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17224:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17223:15:0"
                  },
                  "scope": 3359,
                  "src": "17174:89:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    25
                  ],
                  "body": {
                    "id": 1529,
                    "nodeType": "Block",
                    "src": "17331:22:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1527,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1288,
                          "src": "17343:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1526,
                        "id": 1528,
                        "nodeType": "Return",
                        "src": "17336:12:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "06fdde03",
                  "id": 1530,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1523,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17293:8:0"
                  },
                  "parameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17281:2:0"
                  },
                  "returnParameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1525,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1530,
                        "src": "17316:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17316:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17315:15:0"
                  },
                  "scope": 3359,
                  "src": "17268:85:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    7
                  ],
                  "body": {
                    "id": 1538,
                    "nodeType": "Block",
                    "src": "17419:29:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1536,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1304,
                          "src": "17431:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1535,
                        "id": 1537,
                        "nodeType": "Return",
                        "src": "17424:19:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "18160ddd",
                  "id": 1539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1532,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17390:8:0"
                  },
                  "parameters": {
                    "id": 1531,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17378:2:0"
                  },
                  "returnParameters": {
                    "id": 1535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1534,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1539,
                        "src": "17413:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1533,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17413:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17412:6:0"
                  },
                  "scope": 3359,
                  "src": "17358:90:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    39
                  ],
                  "body": {
                    "id": 1551,
                    "nodeType": "Block",
                    "src": "17525:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1547,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "17537:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1549,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1548,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1541,
                            "src": "17547:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17537:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1546,
                        "id": 1550,
                        "nodeType": "Return",
                        "src": "17530:25:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "70a08231",
                  "id": 1552,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1543,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17496:8:0"
                  },
                  "parameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1541,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1552,
                        "src": "17472:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17472:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17471:17:0"
                  },
                  "returnParameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1545,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1552,
                        "src": "17519:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1544,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17519:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17518:6:0"
                  },
                  "scope": 3359,
                  "src": "17453:107:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    49
                  ],
                  "body": {
                    "id": 1571,
                    "nodeType": "Block",
                    "src": "17646:68:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1563,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "17661:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17661:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1565,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1554,
                              "src": "17675:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1566,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1556,
                              "src": "17686:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1562,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "17651:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17651:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1568,
                        "nodeType": "ExpressionStatement",
                        "src": "17651:42:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17705:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1561,
                        "id": 1570,
                        "nodeType": "Return",
                        "src": "17698:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "a9059cbb",
                  "id": 1572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1558,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17622:8:0"
                  },
                  "parameters": {
                    "id": 1557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1554,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1572,
                        "src": "17583:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17583:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1556,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1572,
                        "src": "17602:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1555,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17602:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17582:32:0"
                  },
                  "returnParameters": {
                    "id": 1561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1560,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1572,
                        "src": "17640:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1559,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17640:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17639:6:0"
                  },
                  "scope": 3359,
                  "src": "17565:149:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    59
                  ],
                  "body": {
                    "id": 1588,
                    "nodeType": "Block",
                    "src": "17808:44:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1582,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1271,
                              "src": "17820:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1584,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1583,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "17832:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17820:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1586,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1585,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "17839:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17820:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1581,
                        "id": 1587,
                        "nodeType": "Return",
                        "src": "17813:34:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "dd62ed3e",
                  "id": 1589,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1578,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17779:8:0"
                  },
                  "parameters": {
                    "id": 1577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1574,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1589,
                        "src": "17738:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1576,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1589,
                        "src": "17753:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17753:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17737:32:0"
                  },
                  "returnParameters": {
                    "id": 1581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1589,
                        "src": "17802:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17802:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17801:6:0"
                  },
                  "scope": 3359,
                  "src": "17719:133:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    69
                  ],
                  "body": {
                    "id": 1608,
                    "nodeType": "Block",
                    "src": "17937:65:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1600,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "17951:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17951:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1602,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1591,
                              "src": "17965:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1603,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "17974:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1599,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "17942:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17942:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "ExpressionStatement",
                        "src": "17942:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17993:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1598,
                        "id": 1607,
                        "nodeType": "Return",
                        "src": "17986:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "095ea7b3",
                  "id": 1609,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1595,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17913:8:0"
                  },
                  "parameters": {
                    "id": 1594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1591,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1609,
                        "src": "17874:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17874:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1593,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1609,
                        "src": "17891:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1592,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17891:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17873:30:0"
                  },
                  "returnParameters": {
                    "id": 1598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1597,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1609,
                        "src": "17931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1596,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "17930:6:0"
                  },
                  "scope": 3359,
                  "src": "17857:145:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    81
                  ],
                  "body": {
                    "id": 1645,
                    "nodeType": "Block",
                    "src": "18110:188:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1622,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1611,
                              "src": "18125:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1623,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "18133:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1624,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "18144:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1621,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "18115:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18115:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1626,
                        "nodeType": "ExpressionStatement",
                        "src": "18115:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1628,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1611,
                              "src": "18165:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1629,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "18173:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18173:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1638,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1615,
                                  "src": "18225:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                                  "id": 1639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18233:42:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                                    "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                                  },
                                  "value": "BEP20: transfer amount exceeds allowance"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                                    "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1631,
                                      "name": "_allowances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1271,
                                      "src": "18187:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1633,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1632,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1611,
                                      "src": "18199:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18187:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1636,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1634,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 113,
                                      "src": "18207:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 1635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18207:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18187:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 193,
                                "src": "18187:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                                }
                              },
                              "id": 1640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18187:89:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1627,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "18156:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18156:121:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1642,
                        "nodeType": "ExpressionStatement",
                        "src": "18156:121:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18289:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1620,
                        "id": 1644,
                        "nodeType": "Return",
                        "src": "18282:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "23b872dd",
                  "id": 1646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1617,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18086:8:0"
                  },
                  "parameters": {
                    "id": 1616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1611,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1646,
                        "src": "18029:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18029:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1613,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1646,
                        "src": "18045:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18045:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1615,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1646,
                        "src": "18064:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1614,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18064:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18028:48:0"
                  },
                  "returnParameters": {
                    "id": 1620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1646,
                        "src": "18104:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18104:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18103:6:0"
                  },
                  "scope": 3359,
                  "src": "18007:291:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1672,
                    "nodeType": "Block",
                    "src": "18386:109:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1656,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "18400:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18400:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1658,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1648,
                              "src": "18414:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1666,
                                  "name": "addedValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1650,
                                  "src": "18462:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1659,
                                      "name": "_allowances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1271,
                                      "src": "18423:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1662,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1660,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "18435:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                          "typeString": "function () view returns (address payable)"
                                        }
                                      },
                                      "id": 1661,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18435:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18423:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1664,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1663,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1648,
                                    "src": "18449:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18423:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 150,
                                "src": "18423:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18423:50:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1655,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "18391:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18391:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1669,
                        "nodeType": "ExpressionStatement",
                        "src": "18391:83:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18486:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1654,
                        "id": 1671,
                        "nodeType": "Return",
                        "src": "18479:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "39509351",
                  "id": 1673,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1648,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1673,
                        "src": "18330:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18330:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "addedValue",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1673,
                        "src": "18347:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18347:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18329:34:0"
                  },
                  "returnParameters": {
                    "id": 1654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1653,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1673,
                        "src": "18380:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1652,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18380:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18379:6:0"
                  },
                  "scope": 3359,
                  "src": "18303:192:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1700,
                    "nodeType": "Block",
                    "src": "18588:155:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1683,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "18602:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18602:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1685,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1675,
                              "src": "18616:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1693,
                                  "name": "subtractedValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1677,
                                  "src": "18664:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                                  "id": 1694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18681:39:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                                    "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                                  },
                                  "value": "BEP20: decreased allowance below zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                                    "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1686,
                                      "name": "_allowances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1271,
                                      "src": "18625:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 1689,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1687,
                                        "name": "_msgSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "18637:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                          "typeString": "function () view returns (address payable)"
                                        }
                                      },
                                      "id": 1688,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18637:12:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18625:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1691,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1690,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1675,
                                    "src": "18651:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18625:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 193,
                                "src": "18625:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                                }
                              },
                              "id": 1695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18625:96:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "18593:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18593:129:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1697,
                        "nodeType": "ExpressionStatement",
                        "src": "18593:129:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18734:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1681,
                        "id": 1699,
                        "nodeType": "Return",
                        "src": "18727:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "a457c2d7",
                  "id": 1701,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1675,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1701,
                        "src": "18527:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18527:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1677,
                        "mutability": "mutable",
                        "name": "subtractedValue",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1701,
                        "src": "18544:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1676,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18544:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18526:39:0"
                  },
                  "returnParameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1680,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1701,
                        "src": "18582:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18582:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18581:6:0"
                  },
                  "scope": 3359,
                  "src": "18500:243:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1718,
                    "nodeType": "Block",
                    "src": "18808:53:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1711,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "18819:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18819:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1713,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1703,
                              "src": "18833:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1710,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "18813:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18813:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1715,
                        "nodeType": "ExpressionStatement",
                        "src": "18813:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18852:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1709,
                        "id": 1717,
                        "nodeType": "Return",
                        "src": "18845:11:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "a0712d68",
                  "id": 1719,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1706,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1705,
                        "name": "onlyMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "18782:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18782:10:0"
                    }
                  ],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1703,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1719,
                        "src": "18762:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "18762:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18761:13:0"
                  },
                  "returnParameters": {
                    "id": 1709,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1708,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1719,
                        "src": "18802:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1707,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18802:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "18801:6:0"
                  },
                  "scope": 3359,
                  "src": "18748:113:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1911,
                    "nodeType": "Block",
                    "src": "19070:1465:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1729,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1721,
                                "src": "19083:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19101:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19093:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1730,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19093:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19093:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "19083:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                              "id": 1735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19105:39:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                                "typeString": "literal_string \"BEP20: transfer from the zero address\""
                              },
                              "value": "BEP20: transfer from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                                "typeString": "literal_string \"BEP20: transfer from the zero address\""
                              }
                            ],
                            "id": 1728,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19075:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19075:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1737,
                        "nodeType": "ExpressionStatement",
                        "src": "19075:70:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1739,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1723,
                                "src": "19158:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19179:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19171:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1740,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19171:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19171:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "19158:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 1745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19183:37:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                                "typeString": "literal_string \"BEP20: transfer to the zero address\""
                              },
                              "value": "BEP20: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                                "typeString": "literal_string \"BEP20: transfer to the zero address\""
                              }
                            ],
                            "id": 1738,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19150:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19150:71:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "19150:71:0"
                      },
                      {
                        "assignments": [
                          1749
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1749,
                            "mutability": "mutable",
                            "name": "recieveAmount",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1911,
                            "src": "19226:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1748,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "19226:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1751,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1750,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "19247:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19226:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1763,
                                        "name": "presales",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2437,
                                        "src": "19389:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                          "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                        }
                                      },
                                      "id": 1765,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1764,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1721,
                                        "src": "19398:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19389:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                        "typeString": "struct DMToken.Presale storage ref"
                                      }
                                    },
                                    "id": 1766,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2428,
                                    "src": "19389:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1757,
                                            "name": "presales",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2437,
                                            "src": "19358:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                              "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                            }
                                          },
                                          "id": 1759,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1758,
                                            "name": "sender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1721,
                                            "src": "19367:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19358:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                            "typeString": "struct DMToken.Presale storage ref"
                                          }
                                        },
                                        "id": 1760,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "unlocked",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2430,
                                        "src": "19358:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1753,
                                          "name": "_balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1265,
                                          "src": "19336:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1755,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1754,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1721,
                                          "src": "19346:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "19336:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1756,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 150,
                                      "src": "19336:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19336:48:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 166,
                                  "src": "19336:52:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19336:77:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1768,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1725,
                                "src": "19415:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19336:85:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19422:40:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                                "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                              },
                              "value": "BEP20: transfer amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                                "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                              }
                            ],
                            "id": 1752,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19328:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19328:135:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1772,
                        "nodeType": "ExpressionStatement",
                        "src": "19328:135:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "19468:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1775,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1774,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1721,
                              "src": "19478:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19468:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1780,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1725,
                                "src": "19510:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                                "id": 1781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19518:40:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                                  "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                                },
                                "value": "BEP20: transfer amount exceeds balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                                  "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1776,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "19488:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1778,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1777,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "19498:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19488:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 193,
                              "src": "19488:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19488:71:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19468:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1784,
                        "nodeType": "ExpressionStatement",
                        "src": "19468:91:0"
                      },
                      {
                        "assignments": [
                          1786
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1786,
                            "mutability": "mutable",
                            "name": "isBuy",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1911,
                            "src": "19579:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1785,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19579:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1790,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1787,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1721,
                            "src": "19592:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1788,
                            "name": "pancakeswapMDUSDTPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "19600:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19592:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19579:42:0"
                      },
                      {
                        "assignments": [
                          1792
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1792,
                            "mutability": "mutable",
                            "name": "isSell",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1911,
                            "src": "19626:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1791,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19626:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1796,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1793,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1723,
                            "src": "19641:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1794,
                            "name": "pancakeswapMDUSDTPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1332,
                            "src": "19652:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19641:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19626:47:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1797,
                          "name": "isSell",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1792,
                          "src": "19683:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1854,
                        "nodeType": "IfStatement",
                        "src": "19680:323:0",
                        "trueBody": {
                          "id": 1853,
                          "nodeType": "Block",
                          "src": "19691:312:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1798,
                                  "name": "recieveAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1749,
                                  "src": "19697:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 1807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19749:3:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1804,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 1801,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19724:3:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 1802,
                                              "name": "getTotalFee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1503,
                                              "src": "19730:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                              }
                                            },
                                            "id": 1803,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19730:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "19724:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1799,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1725,
                                          "src": "19713:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1800,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 227,
                                        "src": "19713:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1805,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19713:31:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 243,
                                    "src": "19713:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19713:40:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19697:56:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1810,
                              "nodeType": "ExpressionStatement",
                              "src": "19697:56:0"
                            },
                            {
                              "assignments": [
                                1812
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1812,
                                  "mutability": "mutable",
                                  "name": "feeAmount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1853,
                                  "src": "19759:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1811,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19759:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1826,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 1824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19841:3:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1821,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1819,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1817,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "id": 1815,
                                              "name": "liquidityFee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1307,
                                              "src": "19787:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 1816,
                                              "name": "rewardFee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1310,
                                              "src": "19800:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "19787:22:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "id": 1818,
                                            "name": "insuranceFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1313,
                                            "src": "19810:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "19787:35:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "id": 1820,
                                          "name": "communityFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1316,
                                          "src": "19823:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "19787:48:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1813,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1725,
                                        "src": "19776:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1814,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 227,
                                      "src": "19776:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19776:60:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 243,
                                  "src": "19776:64:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19776:69:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19759:86:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1827,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1265,
                                    "src": "19851:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1832,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1830,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "19869:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DMToken_$3359",
                                          "typeString": "contract DMToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DMToken_$3359",
                                          "typeString": "contract DMToken"
                                        }
                                      ],
                                      "id": 1829,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19861:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1828,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19861:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1831,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19861:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19851:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1840,
                                      "name": "feeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1812,
                                      "src": "19907:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1833,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1265,
                                        "src": "19878:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1838,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1836,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "19896:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_DMToken_$3359",
                                              "typeString": "contract DMToken"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_DMToken_$3359",
                                              "typeString": "contract DMToken"
                                            }
                                          ],
                                          "id": 1835,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "19888:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1834,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "19888:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 1837,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19888:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19878:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 150,
                                    "src": "19878:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19878:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19851:66:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1843,
                              "nodeType": "ExpressionStatement",
                              "src": "19851:66:0"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1845,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1721,
                                    "src": "19964:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1848,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "19980:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DMToken_$3359",
                                          "typeString": "contract DMToken"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DMToken_$3359",
                                          "typeString": "contract DMToken"
                                        }
                                      ],
                                      "id": 1847,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "19972:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1846,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "19972:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19972:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1850,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1812,
                                    "src": "19987:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1844,
                                  "name": "Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "19955:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19955:42:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1852,
                              "nodeType": "EmitStatement",
                              "src": "19950:47:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1855,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "20007:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1857,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1856,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1723,
                              "src": "20017:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20007:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1862,
                                "name": "recieveAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1749,
                                "src": "20055:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1858,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "20030:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1860,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1859,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1723,
                                  "src": "20040:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "20030:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "20030:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20030:39:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20007:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1865,
                        "nodeType": "ExpressionStatement",
                        "src": "20007:62:0"
                      },
                      {
                        "assignments": [
                          1867
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1867,
                            "mutability": "mutable",
                            "name": "contractTokenBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1911,
                            "src": "20118:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1866,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20118:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1874,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1871,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "20164:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 1870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20156:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1869,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20156:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20156:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1868,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1552,
                            "src": "20146:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20146:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20118:52:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1876,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "20201:17:0",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 1875,
                                    "name": "inSwapAndLiquify",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1338,
                                    "src": "20202:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "20222:9:0",
                                  "subExpression": {
                                    "argumentTypes": null,
                                    "id": 1877,
                                    "name": "inRedeem",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1352,
                                    "src": "20223:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "20201:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "20235:6:0",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 1880,
                                  "name": "isBuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1786,
                                  "src": "20236:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "20201:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "20245:7:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 1883,
                                "name": "isSell",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "20246:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "20201:51:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1886,
                            "name": "swapAndLiquifyEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "20256:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20201:76:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1904,
                        "nodeType": "IfStatement",
                        "src": "20197:280:0",
                        "trueBody": {
                          "id": 1903,
                          "nodeType": "Block",
                          "src": "20279:198:0",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1888,
                                  "name": "minLiquidityAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1328,
                                  "src": "20288:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1889,
                                  "name": "contractTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1867,
                                  "src": "20310:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20288:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1895,
                              "nodeType": "IfStatement",
                              "src": "20285:76:0",
                              "trueBody": {
                                "id": 1894,
                                "nodeType": "Block",
                                "src": "20331:30:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1891,
                                        "name": "swapAndLiquify",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2063,
                                        "src": "20338:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                          "typeString": "function ()"
                                        }
                                      },
                                      "id": 1892,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20338:16:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1893,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20338:16:0"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1896,
                                  "name": "redeemable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3237,
                                  "src": "20436:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 1897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20436:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1902,
                              "nodeType": "IfStatement",
                              "src": "20432:40:0",
                              "trueBody": {
                                "id": 1901,
                                "nodeType": "Block",
                                "src": "20450:22:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1898,
                                        "name": "redeem",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3358,
                                        "src": "20457:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                          "typeString": "function ()"
                                        }
                                      },
                                      "id": 1899,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20457:8:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1900,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20457:8:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1906,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1721,
                              "src": "20497:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1907,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1723,
                              "src": "20505:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1908,
                              "name": "recieveAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1749,
                              "src": "20516:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1905,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "20488:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20488:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1910,
                        "nodeType": "EmitStatement",
                        "src": "20483:47:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1912,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1726,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1721,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1912,
                        "src": "19013:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19013:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1723,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1912,
                        "src": "19029:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19029:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1725,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1912,
                        "src": "19048:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1724,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "19048:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "19012:48:0"
                  },
                  "returnParameters": {
                    "id": 1727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19070:0:0"
                  },
                  "scope": 3359,
                  "src": "18994:1541:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2062,
                    "nodeType": "Block",
                    "src": "20665:1280:0",
                    "statements": [
                      {
                        "assignments": [
                          1918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1918,
                            "mutability": "mutable",
                            "name": "contractTokenBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2062,
                            "src": "20674:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1917,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20674:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1925,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1919,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "20702:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1924,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1922,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "20720:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              ],
                              "id": 1921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20712:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1920,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20712:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20712:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20702:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20674:52:0"
                      },
                      {
                        "assignments": [
                          1927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1927,
                            "mutability": "mutable",
                            "name": "liquidityhalf",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2062,
                            "src": "20795:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1926,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20795:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1939,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20878:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1933,
                                    "name": "getTotalFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1503,
                                    "src": "20859:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 1934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20859:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1930,
                                      "name": "liquidityFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1307,
                                      "src": "20841:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1928,
                                      "name": "contractTokenBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1918,
                                      "src": "20816:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1929,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 227,
                                    "src": "20816:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20816:38:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 243,
                                "src": "20816:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20816:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 243,
                            "src": "20816:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20816:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20795:85:0"
                      },
                      {
                        "assignments": [
                          1941
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1941,
                            "mutability": "mutable",
                            "name": "rest",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2062,
                            "src": "20909:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1940,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20909:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1946,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1944,
                              "name": "liquidityhalf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1927,
                              "src": "20946:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1942,
                              "name": "contractTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1918,
                              "src": "20921:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "20921:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20921:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20909:51:0"
                      },
                      {
                        "assignments": [
                          1948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1948,
                            "mutability": "mutable",
                            "name": "initialBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2062,
                            "src": "20965:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1947,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20965:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1958,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1955,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "21025:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 1954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21017:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1953,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21017:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21017:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1950,
                                  "name": "USDTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "20994:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1949,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "20987:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20987:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "20987:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20987:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20965:66:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1960,
                              "name": "rest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1941,
                              "src": "21080:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1959,
                            "name": "swapTokensForUSDT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2125,
                            "src": "21062:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21062:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1962,
                        "nodeType": "ExpressionStatement",
                        "src": "21062:23:0"
                      },
                      {
                        "assignments": [
                          1964
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1964,
                            "mutability": "mutable",
                            "name": "cBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2062,
                            "src": "21126:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1963,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21126:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1977,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1975,
                              "name": "initialBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1948,
                              "src": "21191:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1971,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "21180:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DMToken_$3359",
                                        "typeString": "contract DMToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DMToken_$3359",
                                        "typeString": "contract DMToken"
                                      }
                                    ],
                                    "id": 1970,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "21172:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1969,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "21172:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21172:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1966,
                                      "name": "USDTAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1334,
                                      "src": "21149:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1965,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "21142:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1967,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21142:19:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$100",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39,
                                "src": "21142:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 1973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21142:44:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "21142:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21142:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21126:80:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1978,
                            "name": "rewardPoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2362,
                            "src": "21350:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "32",
                                            "id": 1991,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "21455:1:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1989,
                                            "name": "liquidityFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1307,
                                            "src": "21438:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1990,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 243,
                                          "src": "21438:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1992,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21438:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 1986,
                                          "name": "getTotalFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1503,
                                          "src": "21420:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 1987,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21420:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1988,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 166,
                                      "src": "21420:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1993,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21420:38:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1983,
                                        "name": "rewardFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1310,
                                        "src": "21405:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1981,
                                        "name": "cBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1964,
                                        "src": "21392:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1982,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 227,
                                      "src": "21392:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21392:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 243,
                                  "src": "21392:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21392:67:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1979,
                                "name": "rewardPoolBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2362,
                                "src": "21370:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "21370:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21370:90:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21350:110:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1997,
                        "nodeType": "ExpressionStatement",
                        "src": "21350:110:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1998,
                            "name": "insurancePoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "21465:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "32",
                                            "id": 2011,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "21579:1:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2009,
                                            "name": "liquidityFee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1307,
                                            "src": "21562:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2010,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 243,
                                          "src": "21562:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2012,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21562:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 2006,
                                          "name": "getTotalFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1503,
                                          "src": "21544:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view returns (uint256)"
                                          }
                                        },
                                        "id": 2007,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "21544:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2008,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 166,
                                      "src": "21544:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21544:38:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2003,
                                        "name": "insuranceFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1313,
                                        "src": "21526:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2001,
                                        "name": "cBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1964,
                                        "src": "21513:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2002,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 227,
                                      "src": "21513:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2004,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21513:26:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 243,
                                  "src": "21513:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21513:70:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1999,
                                "name": "insurancePoolBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3218,
                                "src": "21488:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "21488:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21488:96:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21465:119:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2017,
                        "nodeType": "ExpressionStatement",
                        "src": "21465:119:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2022,
                              "name": "communityAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1318,
                              "src": "21667:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "32",
                                          "id": 2033,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "21751:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2031,
                                          "name": "liquidityFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1307,
                                          "src": "21734:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2032,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 243,
                                        "src": "21734:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21734:19:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2028,
                                        "name": "getTotalFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1503,
                                        "src": "21716:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 2029,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21716:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 166,
                                    "src": "21716:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21716:38:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2025,
                                      "name": "communityFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1316,
                                      "src": "21698:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2023,
                                      "name": "cBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1964,
                                      "src": "21685:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 227,
                                    "src": "21685:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21685:26:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 243,
                                "src": "21685:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21685:70:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2019,
                                  "name": "USDTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "21645:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2018,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "21638:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21638:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "21638:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21638:118:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2038,
                        "nodeType": "ExpressionStatement",
                        "src": "21638:118:0"
                      },
                      {
                        "assignments": [
                          2040
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2040,
                            "mutability": "mutable",
                            "name": "newBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2062,
                            "src": "21784:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2039,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21784:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2056,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2054,
                              "name": "insurancePoolBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3218,
                              "src": "21874:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2051,
                                  "name": "rewardPoolBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2362,
                                  "src": "21851:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 2047,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "21840:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_DMToken_$3359",
                                            "typeString": "contract DMToken"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_DMToken_$3359",
                                            "typeString": "contract DMToken"
                                          }
                                        ],
                                        "id": 2046,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "21832:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2045,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "21832:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 2048,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21832:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 2042,
                                          "name": "USDTAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1334,
                                          "src": "21809:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2041,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 100,
                                        "src": "21802:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 2043,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21802:19:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$100",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 2044,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 39,
                                    "src": "21802:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 2049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21802:44:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 166,
                                "src": "21802:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21802:67:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "21802:71:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21802:93:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21784:111:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2058,
                              "name": "liquidityhalf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1927,
                              "src": "21913:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2059,
                              "name": "newBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2040,
                              "src": "21928:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2057,
                            "name": "addLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "21900:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21900:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2061,
                        "nodeType": "ExpressionStatement",
                        "src": "21900:39:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1915,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1914,
                        "name": "lockTheSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "20653:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20653:11:0"
                    }
                  ],
                  "name": "swapAndLiquify",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1913,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20641:2:0"
                  },
                  "returnParameters": {
                    "id": 1916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20665:0:0"
                  },
                  "scope": 3359,
                  "src": "20618:1327:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2124,
                    "nodeType": "Block",
                    "src": "22046:439:0",
                    "statements": [
                      {
                        "assignments": [
                          2072
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2072,
                            "mutability": "mutable",
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2124,
                            "src": "22051:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2070,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22051:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2071,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "22051:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2078,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22089:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22075:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2073,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22079:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2074,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "22079:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22075:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22051:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2079,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "22096:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2081,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22101:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "22096:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2084,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "22114:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              ],
                              "id": 2083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22106:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2082,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22106:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22106:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22096:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2087,
                        "nodeType": "ExpressionStatement",
                        "src": "22096:23:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2088,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "22124:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2090,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22129:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "22124:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2091,
                            "name": "USDTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "22134:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22124:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2093,
                        "nodeType": "ExpressionStatement",
                        "src": "22124:21:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2097,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22169:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 2096,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22161:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2095,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22161:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22161:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2101,
                                  "name": "pancakeswapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "22184:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                ],
                                "id": 2100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22176:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2099,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22176:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22176:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2103,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2065,
                              "src": "22204:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2094,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "22152:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22152:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2105,
                        "nodeType": "ExpressionStatement",
                        "src": "22152:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2109,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2065,
                              "src": "22322:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22339:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 2111,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2072,
                              "src": "22375:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2112,
                              "name": "storeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "22385:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2113,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22403:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22403:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2106,
                              "name": "pancakeswapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1330,
                              "src": "22245:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                "typeString": "contract IPancakeswapRouter"
                              }
                            },
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1190,
                            "src": "22245:71:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                            }
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22245:178:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2116,
                        "nodeType": "ExpressionStatement",
                        "src": "22245:178:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2121,
                              "name": "USDTAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "22468:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2118,
                                  "name": "storeAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "22445:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2117,
                                "name": "IStoreContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1223,
                                "src": "22430:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IStoreContract_$1223_$",
                                  "typeString": "type(contract IStoreContract)"
                                }
                              },
                              "id": 2119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22430:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStoreContract_$1223",
                                "typeString": "contract IStoreContract"
                              }
                            },
                            "id": 2120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withDraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1222,
                            "src": "22430:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22430:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2123,
                        "nodeType": "ExpressionStatement",
                        "src": "22430:50:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2125,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensForUSDT",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2065,
                        "mutability": "mutable",
                        "name": "tokenAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2125,
                        "src": "22019:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2064,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "22019:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "22018:18:0"
                  },
                  "returnParameters": {
                    "id": 2067,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22046:0:0"
                  },
                  "scope": 3359,
                  "src": "21992:493:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2173,
                    "nodeType": "Block",
                    "src": "22555:443:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2135,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22638:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 2134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22630:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2133,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22630:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22630:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2139,
                                  "name": "pancakeswapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "22653:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                ],
                                "id": 2138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22645:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2137,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22645:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22645:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2141,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "22673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2132,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "22621:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22621:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2143,
                        "nodeType": "ExpressionStatement",
                        "src": "22621:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2150,
                                  "name": "pancakeswapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "22726:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                ],
                                "id": 2149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22718:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2148,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22718:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22718:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2152,
                              "name": "usdtAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "22745:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2145,
                                  "name": "USDTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "22697:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2144,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "22690:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22690:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69,
                            "src": "22690:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22690:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2154,
                        "nodeType": "ExpressionStatement",
                        "src": "22690:66:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2160,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "22831:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 2159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22823:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2158,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22823:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22823:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2162,
                              "name": "USDTAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "22842:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2163,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "22859:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2164,
                              "name": "usdtAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "22876:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22892:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22926:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2167,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "22960:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22960:7:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2169,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "22973:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22973:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2155,
                              "name": "pancakeswapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1330,
                              "src": "22787:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                "typeString": "contract IPancakeswapRouter"
                              }
                            },
                            "id": 2157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addLiquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 864,
                            "src": "22787:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                            }
                          },
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22787:206:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "id": 2172,
                        "nodeType": "ExpressionStatement",
                        "src": "22787:206:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2174,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2127,
                        "mutability": "mutable",
                        "name": "tokenAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2174,
                        "src": "22512:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2126,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "22512:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2129,
                        "mutability": "mutable",
                        "name": "usdtAmount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2174,
                        "src": "22530:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2128,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "22530:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "22511:35:0"
                  },
                  "returnParameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22555:0:0"
                  },
                  "scope": 3359,
                  "src": "22490:508:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2225,
                    "nodeType": "Block",
                    "src": "23057:280:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2182,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2176,
                                "src": "23070:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23089:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23081:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2183,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23081:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23081:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "23070:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                              "id": 2188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23093:33:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                                "typeString": "literal_string \"BEP20: mint to the zero address\""
                              },
                              "value": "BEP20: mint to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                                "typeString": "literal_string \"BEP20: mint to the zero address\""
                              }
                            ],
                            "id": 2181,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23062:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23062:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "23062:65:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2192,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "23140:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2193,
                                "name": "_maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1295,
                                "src": "23153:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23140:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "657863656564206d617820737570706c79",
                              "id": 2195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23165:19:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4450fc8497f52f169b0308dfbe33d502250c76d3240a7576dcc499f0facd36f5",
                                "typeString": "literal_string \"exceed max supply\""
                              },
                              "value": "exceed max supply"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4450fc8497f52f169b0308dfbe33d502250c76d3240a7576dcc499f0facd36f5",
                                "typeString": "literal_string \"exceed max supply\""
                              }
                            ],
                            "id": 2191,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23132:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23132:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2197,
                        "nodeType": "ExpressionStatement",
                        "src": "23132:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2198,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "23190:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2201,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2178,
                                "src": "23222:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2199,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "23205:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "23205:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23205:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23190:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2204,
                        "nodeType": "ExpressionStatement",
                        "src": "23190:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2205,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "23234:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2207,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2206,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2176,
                              "src": "23244:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23234:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2212,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2178,
                                "src": "23278:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2208,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "23255:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2210,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2209,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2176,
                                  "src": "23265:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23255:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "23255:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23255:30:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23234:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2215,
                        "nodeType": "ExpressionStatement",
                        "src": "23234:51:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23312:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23304:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23304:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23304:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2221,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2176,
                              "src": "23316:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2222,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2178,
                              "src": "23325:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2216,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "23295:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23295:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2224,
                        "nodeType": "EmitStatement",
                        "src": "23290:42:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2226,
                        "src": "23018:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23018:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2178,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2226,
                        "src": "23035:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2177,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "23035:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "23017:30:0"
                  },
                  "returnParameters": {
                    "id": 2180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23057:0:0"
                  },
                  "scope": 3359,
                  "src": "23003:334:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2272,
                    "nodeType": "Block",
                    "src": "23396:302:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2234,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2228,
                                "src": "23409:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23428:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23420:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2235,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23420:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23420:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "23409:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
                              "id": 2240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23432:35:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                                "typeString": "literal_string \"BEP20: burn from the zero address\""
                              },
                              "value": "BEP20: burn from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                                "typeString": "literal_string \"BEP20: burn from the zero address\""
                              }
                            ],
                            "id": 2233,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23401:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23401:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2242,
                        "nodeType": "ExpressionStatement",
                        "src": "23401:67:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2243,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "23475:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2245,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2244,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "23485:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23475:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2250,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2230,
                                "src": "23519:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                                "id": 2251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23527:36:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                                  "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                                },
                                "value": "BEP20: burn amount exceeds balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                                  "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2246,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1265,
                                  "src": "23496:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 2248,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2247,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2228,
                                  "src": "23506:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23496:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 193,
                              "src": "23496:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 2252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23496:68:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23475:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2254,
                        "nodeType": "ExpressionStatement",
                        "src": "23475:89:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2255,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1304,
                            "src": "23569:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2258,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2230,
                                "src": "23601:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                                "id": 2259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23609:36:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                                  "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                                },
                                "value": "BEP20: burn amount exceeds balance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                                  "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2256,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "23584:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 193,
                              "src": "23584:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                              }
                            },
                            "id": 2260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23584:62:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23569:77:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2262,
                        "nodeType": "ExpressionStatement",
                        "src": "23569:77:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2264,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "23665:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 2267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23682:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23674:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2265,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23674:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23674:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2269,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "23686:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2263,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "23656:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23656:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2271,
                        "nodeType": "EmitStatement",
                        "src": "23651:42:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2228,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2273,
                        "src": "23357:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23357:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2230,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2273,
                        "src": "23374:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2229,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "23374:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "23356:30:0"
                  },
                  "returnParameters": {
                    "id": 2232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23396:0:0"
                  },
                  "scope": 3359,
                  "src": "23342:356:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2316,
                    "nodeType": "Block",
                    "src": "23775:236:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2283,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "23788:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23805:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23797:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2284,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23797:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23797:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "23788:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                              "id": 2289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23809:38:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                                "typeString": "literal_string \"BEP20: approve from the zero address\""
                              },
                              "value": "BEP20: approve from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                                "typeString": "literal_string \"BEP20: approve from the zero address\""
                              }
                            ],
                            "id": 2282,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23780:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23780:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2291,
                        "nodeType": "ExpressionStatement",
                        "src": "23780:68:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2293,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2277,
                                "src": "23861:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23880:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "23872:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2294,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23872:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23872:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "23861:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
                              "id": 2299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23884:36:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                                "typeString": "literal_string \"BEP20: approve to the zero address\""
                              },
                              "value": "BEP20: approve to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                                "typeString": "literal_string \"BEP20: approve to the zero address\""
                              }
                            ],
                            "id": 2292,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "23853:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23853:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2301,
                        "nodeType": "ExpressionStatement",
                        "src": "23853:68:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2302,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1271,
                                "src": "23928:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2305,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2303,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2275,
                                "src": "23940:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23928:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2306,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2304,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2277,
                              "src": "23947:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23928:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2307,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2279,
                            "src": "23958:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23928:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2309,
                        "nodeType": "ExpressionStatement",
                        "src": "23928:36:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2311,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2275,
                              "src": "23983:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2312,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2277,
                              "src": "23990:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2313,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2279,
                              "src": "23999:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2310,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "23974:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23974:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2315,
                        "nodeType": "EmitStatement",
                        "src": "23969:37:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2275,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2317,
                        "src": "23721:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23721:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2277,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2317,
                        "src": "23736:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23736:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2279,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2317,
                        "src": "23753:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2278,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "23753:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "23720:45:0"
                  },
                  "returnParameters": {
                    "id": 2281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23775:0:0"
                  },
                  "scope": 3359,
                  "src": "23703:308:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2345,
                    "nodeType": "Block",
                    "src": "24074:156:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2325,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2319,
                              "src": "24085:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2326,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2321,
                              "src": "24094:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2324,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2273,
                            "src": "24079:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24079:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2328,
                        "nodeType": "ExpressionStatement",
                        "src": "24079:22:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2330,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2319,
                              "src": "24115:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2331,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "24124:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 2332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24124:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2340,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2321,
                                  "src": "24177:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                                  "id": 2341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "24185:38:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                                    "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                                  },
                                  "value": "BEP20: burn amount exceeds allowance"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                                    "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2333,
                                      "name": "_allowances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1271,
                                      "src": "24138:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 2335,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2334,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2319,
                                      "src": "24150:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "24138:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2338,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2336,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 113,
                                      "src": "24159:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                        "typeString": "function () view returns (address payable)"
                                      }
                                    },
                                    "id": 2337,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24159:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "24138:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 193,
                                "src": "24138:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                                }
                              },
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24138:86:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2329,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "24106:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24106:119:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2344,
                        "nodeType": "ExpressionStatement",
                        "src": "24106:119:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 2346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burnFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2319,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2346,
                        "src": "24035:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24035:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2321,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2346,
                        "src": "24052:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2320,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24052:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "24034:30:0"
                  },
                  "returnParameters": {
                    "id": 2323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24074:0:0"
                  },
                  "scope": 3359,
                  "src": "24016:214:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 2352,
                  "name": "ClaimReward",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2348,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2352,
                        "src": "24323:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24323:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2350,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2352,
                        "src": "24336:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2349,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24336:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "24322:26:0"
                  },
                  "src": "24305:44:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 2360,
                  "name": "Unlocked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2354,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2360,
                        "src": "24367:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24367:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2356,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2360,
                        "src": "24380:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2355,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24380:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2358,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timeStamp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2360,
                        "src": "24392:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2357,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "24392:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "24366:41:0"
                  },
                  "src": "24352:56:0"
                },
                {
                  "constant": false,
                  "functionSelector": "7a5c08ae",
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "rewardPoolBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24413:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24413:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "baedc8d6",
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "rewardedTotalBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24446:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24446:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fd64e078",
                  "id": 2367,
                  "mutability": "mutable",
                  "name": "USDTDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24529:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24529:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "24556:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "000e7fa8",
                  "id": 2377,
                  "mutability": "mutable",
                  "name": "presalePrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24564:55:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24564:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24591:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 2370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24595:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2371,
                              "name": "USDTDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2367,
                              "src": "24602:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 2372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24617:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "src": "24602:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2374,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "24601:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24595:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24591:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c8f0c577",
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "presaleLimit1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24626:91:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2378,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24626:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "323030",
                          "id": 2379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24654:3:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24660:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2383,
                                "name": "_decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1282,
                                "src": "24671:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24666:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2381,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "24666:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24666:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24660:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24654:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24684:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2388,
                          "name": "USDTDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2367,
                          "src": "24690:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24684:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24654:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2391,
                      "name": "presalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2377,
                      "src": "24705:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24654:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "71e8ec68",
                  "id": 2409,
                  "mutability": "mutable",
                  "name": "presaleLimit2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24735:92:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24735:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "33303030",
                          "id": 2395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24763:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000_by_1",
                            "typeString": "int_const 3000"
                          },
                          "value": "3000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24770:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2399,
                                "name": "_decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1282,
                                "src": "24781:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24776:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2397,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "24776:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24776:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24770:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24763:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24794:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2404,
                          "name": "USDTDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2367,
                          "src": "24800:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24794:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24763:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2407,
                      "name": "presalePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2377,
                      "src": "24815:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24763:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "da7a3687",
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "presaledTotal",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24847:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2410,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24847:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dc1d85f6",
                  "id": 2423,
                  "mutability": "mutable",
                  "name": "presaleTotal",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "24890:60:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24890:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_250000000_by_1",
                        "typeString": "int_const 250000000"
                      },
                      "id": 2415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "323530",
                        "id": 2413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24917:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_250_by_1",
                          "typeString": "int_const 250"
                        },
                        "value": "250"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "316536",
                        "id": 2414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24923:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1e6"
                      },
                      "src": "24917:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250000000_by_1",
                        "typeString": "int_const 250000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 2416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24929:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2419,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "24940:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 2418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24935:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 2417,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "24935:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24935:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24929:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24917:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "249b7c19",
                  "id": 2426,
                  "mutability": "mutable",
                  "name": "presaleEndTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "25000:39:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25000:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "31363337353130343030",
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25029:10:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1637510400_by_1",
                      "typeString": "int_const 1637510400"
                    },
                    "value": "1637510400"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "DMToken.Presale",
                  "id": 2433,
                  "members": [
                    {
                      "constant": false,
                      "id": 2428,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2433,
                      "src": "25074:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2427,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25074:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2430,
                      "mutability": "mutable",
                      "name": "unlocked",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2433,
                      "src": "25100:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2429,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25100:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2432,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2433,
                      "src": "25128:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2431,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25128:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Presale",
                  "nodeType": "StructDefinition",
                  "scope": 3359,
                  "src": "25054:102:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "efcd708f",
                  "id": 2437,
                  "mutability": "mutable",
                  "name": "presales",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "25159:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                    "typeString": "mapping(address => struct DMToken.Presale)"
                  },
                  "typeName": {
                    "id": 2436,
                    "keyType": {
                      "id": 2434,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "25167:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "25159:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                      "typeString": "mapping(address => struct DMToken.Presale)"
                    },
                    "valueType": {
                      "contractScope": null,
                      "id": 2435,
                      "name": "Presale",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 2433,
                      "src": "25176:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Presale_$2433_storage_ptr",
                        "typeString": "struct DMToken.Presale"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "mutability": "mutable",
                  "name": "unlockSteps",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "25372:249:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 2438,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25372:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2439,
                      "length": null,
                      "nodeType": "ArrayTypeName",
                      "src": "25372:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 2440,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "25372:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "38",
                                "id": 2443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25406:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                }
                              ],
                              "id": 2442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25401:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2441,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25401:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25401:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3430",
                                "id": 2447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25417:7:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3456000_by_1",
                                  "typeString": "int_const 3456000"
                                },
                                "value": "40"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_3456000_by_1",
                                  "typeString": "int_const 3456000"
                                }
                              ],
                              "id": 2446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25412:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2445,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25412:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25412:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2449,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25400:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 2452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25437:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                }
                              ],
                              "id": 2451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25432:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2450,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25432:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25432:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3930",
                                "id": 2456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25448:7:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7776000_by_1",
                                  "typeString": "int_const 7776000"
                                },
                                "value": "90"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_7776000_by_1",
                                  "typeString": "int_const 7776000"
                                }
                              ],
                              "id": 2455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25443:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2454,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25443:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25443:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2458,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25431:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3330",
                                "id": 2461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25468:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                },
                                "value": "30"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                }
                              ],
                              "id": 2460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25463:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2459,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25463:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25463:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313530",
                                "id": 2465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25479:8:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_12960000_by_1",
                                  "typeString": "int_const 12960000"
                                },
                                "value": "150"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_12960000_by_1",
                                  "typeString": "int_const 12960000"
                                }
                              ],
                              "id": 2464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25474:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2463,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25474:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25474:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2467,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25462:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3435",
                                "id": 2470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25500:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_45_by_1",
                                  "typeString": "int_const 45"
                                },
                                "value": "45"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_45_by_1",
                                  "typeString": "int_const 45"
                                }
                              ],
                              "id": 2469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25495:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2468,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25495:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25495:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "323130",
                                "id": 2474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25511:8:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18144000_by_1",
                                  "typeString": "int_const 18144000"
                                },
                                "value": "210"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_18144000_by_1",
                                  "typeString": "int_const 18144000"
                                }
                              ],
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25506:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2472,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25506:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25506:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2476,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25494:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3632",
                                "id": 2479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25532:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_62_by_1",
                                  "typeString": "int_const 62"
                                },
                                "value": "62"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_62_by_1",
                                  "typeString": "int_const 62"
                                }
                              ],
                              "id": 2478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25527:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2477,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25527:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25527:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "323730",
                                "id": 2483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25543:8:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_23328000_by_1",
                                  "typeString": "int_const 23328000"
                                },
                                "value": "270"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_23328000_by_1",
                                  "typeString": "int_const 23328000"
                                }
                              ],
                              "id": 2482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25538:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2481,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25538:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25538:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2485,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25526:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "3830",
                                "id": 2488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25564:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_80_by_1",
                                  "typeString": "int_const 80"
                                },
                                "value": "80"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_80_by_1",
                                  "typeString": "int_const 80"
                                }
                              ],
                              "id": 2487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25559:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2486,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25559:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25559:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "333330",
                                "id": 2492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25575:8:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_28512000_by_1",
                                  "typeString": "int_const 28512000"
                                },
                                "value": "330"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_28512000_by_1",
                                  "typeString": "int_const 28512000"
                                }
                              ],
                              "id": 2491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25570:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2490,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25570:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25570:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2494,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25558:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 2497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25596:3:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "id": 2496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25591:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2495,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25591:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25591:9:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "333630",
                                "id": 2501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25607:8:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31104000_by_1",
                                  "typeString": "int_const 31104000"
                                },
                                "value": "360"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_31104000_by_1",
                                  "typeString": "int_const 31104000"
                                }
                              ],
                              "id": 2500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25602:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2499,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "25602:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25602:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2503,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "25590:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "id": 2504,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25395:226:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_ptr_$7_memory_ptr",
                      "typeString": "uint256[2] memory[7] memory"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "a053ce1f",
                  "id": 2508,
                  "mutability": "mutable",
                  "name": "referralRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "25627:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25627:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "3132",
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25654:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2519,
                    "nodeType": "Block",
                    "src": "25741:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2515,
                            "name": "referralRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2508,
                            "src": "25746:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2516,
                            "name": "_referralRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2510,
                            "src": "25761:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25746:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2518,
                        "nodeType": "ExpressionStatement",
                        "src": "25746:28:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "ca4863fd",
                  "id": 2520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 2513,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 2512,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "25731:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "25731:9:0"
                    }
                  ],
                  "name": "setReferralRate",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2510,
                        "mutability": "mutable",
                        "name": "_referralRate",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2520,
                        "src": "25702:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2509,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "25702:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "25701:20:0"
                  },
                  "returnParameters": {
                    "id": 2514,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "25741:0:0"
                  },
                  "scope": 3359,
                  "src": "25677:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2693,
                    "nodeType": "Block",
                    "src": "25992:1286:0",
                    "statements": [
                      {
                        "assignments": [
                          2528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2528,
                            "mutability": "mutable",
                            "name": "_sender",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2693,
                            "src": "25997:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25997:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2531,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2529,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "26015:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "26015:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25997:28:0"
                      },
                      {
                        "assignments": [
                          2533
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2533,
                            "mutability": "mutable",
                            "name": "_quantity",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2693,
                            "src": "26064:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2532,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "26064:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2541,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2534,
                              "name": "_usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2522,
                              "src": "26081:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 2537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 2535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26089:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 2536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26095:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "26089:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "26081:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2539,
                            "name": "presalePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2377,
                            "src": "26100:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26081:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26064:48:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2543,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2528,
                                "src": "26127:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2546,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26144:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "26136:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2544,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "26136:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26136:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "26127:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5f73656e6465722063616e2774206265207a65726f2061646472657373",
                              "id": 2549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26148:31:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4703dfc6bd7160e7514ede9dabc819181b71dbe13b1667e513b231085c6566cc",
                                "typeString": "literal_string \"_sender can't be zero address\""
                              },
                              "value": "_sender can't be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4703dfc6bd7160e7514ede9dabc819181b71dbe13b1667e513b231085c6566cc",
                                "typeString": "literal_string \"_sender can't be zero address\""
                              }
                            ],
                            "id": 2542,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "26119:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26119:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2551,
                        "nodeType": "ExpressionStatement",
                        "src": "26119:61:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2553,
                                  "name": "presaleTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2423,
                                  "src": "26193:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2554,
                                  "name": "_quantity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2533,
                                  "src": "26208:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26193:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2556,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "26221:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "26221:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2558,
                                  "name": "presaleEndTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2426,
                                  "src": "26239:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26221:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "26193:60:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "70726573616c6520656e646564",
                              "id": 2561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26254:15:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74951b53a97d120d47a67906ab228156fb292d99e2ea2d657d8506aa44f7489b",
                                "typeString": "literal_string \"presale ended\""
                              },
                              "value": "presale ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_74951b53a97d120d47a67906ab228156fb292d99e2ea2d657d8506aa44f7489b",
                                "typeString": "literal_string \"presale ended\""
                              }
                            ],
                            "id": 2552,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "26185:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26185:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2563,
                        "nodeType": "ExpressionStatement",
                        "src": "26185:85:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2565,
                                "name": "presaleLimit1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2393,
                                "src": "26283:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2566,
                                      "name": "presales",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2437,
                                      "src": "26300:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                        "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                      }
                                    },
                                    "id": 2568,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2567,
                                      "name": "_sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2528,
                                      "src": "26309:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26300:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                      "typeString": "struct DMToken.Presale storage ref"
                                    }
                                  },
                                  "id": 2569,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2428,
                                  "src": "26300:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2570,
                                  "name": "_quantity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2533,
                                  "src": "26327:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26300:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "26283:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5f73656e646572206d7573742062652067726561746572206f7220657175616c73207468616e206c696d697431",
                              "id": 2573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26338:47:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac5a9ea354be1d4b316f3f31b00d1814625f49525c47489c9f7258ccb4737f71",
                                "typeString": "literal_string \"_sender must be greater or equals than limit1\""
                              },
                              "value": "_sender must be greater or equals than limit1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac5a9ea354be1d4b316f3f31b00d1814625f49525c47489c9f7258ccb4737f71",
                                "typeString": "literal_string \"_sender must be greater or equals than limit1\""
                              }
                            ],
                            "id": 2564,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "26275:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26275:111:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2575,
                        "nodeType": "ExpressionStatement",
                        "src": "26275:111:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2577,
                                "name": "presaleLimit2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2409,
                                "src": "26399:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2578,
                                      "name": "presales",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2437,
                                      "src": "26416:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                        "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                      }
                                    },
                                    "id": 2580,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2579,
                                      "name": "_sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2528,
                                      "src": "26425:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26416:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                      "typeString": "struct DMToken.Presale storage ref"
                                    }
                                  },
                                  "id": 2581,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2428,
                                  "src": "26416:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2582,
                                  "name": "_quantity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2533,
                                  "src": "26443:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26416:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "26399:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "70726573616c6520746f74616c206d757374206265206c657373206f7220657175616c73207468616e206c696d697432",
                              "id": 2585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26454:50:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd7245da5b7c70a73e9431ed2cb82aa5921b02cb5e3c923b57e9a5409c80bf76",
                                "typeString": "literal_string \"presale total must be less or equals than limit2\""
                              },
                              "value": "presale total must be less or equals than limit2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd7245da5b7c70a73e9431ed2cb82aa5921b02cb5e3c923b57e9a5409c80bf76",
                                "typeString": "literal_string \"presale total must be less or equals than limit2\""
                              }
                            ],
                            "id": 2576,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "26391:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26391:114:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2587,
                        "nodeType": "ExpressionStatement",
                        "src": "26391:114:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2592,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2528,
                              "src": "26595:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2593,
                              "name": "feeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1320,
                              "src": "26604:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2594,
                              "name": "_usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2522,
                              "src": "26616:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2589,
                                  "name": "USDTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "26569:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2588,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "26562:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26562:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81,
                            "src": "26562:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26562:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2596,
                        "nodeType": "ExpressionStatement",
                        "src": "26562:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2598,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2528,
                              "src": "26633:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2599,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2533,
                              "src": "26642:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2597,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "26627:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26627:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2601,
                        "nodeType": "ExpressionStatement",
                        "src": "26627:25:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2602,
                            "name": "referral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "26691:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26709:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26701:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2603,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26701:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26701:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "26691:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2671,
                        "nodeType": "IfStatement",
                        "src": "26688:408:0",
                        "trueBody": {
                          "id": 2670,
                          "nodeType": "Block",
                          "src": "26713:383:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2609,
                                    "name": "referral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2524,
                                    "src": "26725:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 2615,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "26767:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 2612,
                                            "name": "referralRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2508,
                                            "src": "26749:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2610,
                                            "name": "_quantity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2533,
                                            "src": "26735:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2611,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 227,
                                          "src": "26735:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2613,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "26735:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2614,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 243,
                                      "src": "26735:31:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2616,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "26735:36:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2608,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2226,
                                  "src": "26719:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26719:53:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2618,
                              "nodeType": "ExpressionStatement",
                              "src": "26719:53:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2619,
                                      "name": "presales",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2437,
                                      "src": "26778:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                        "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                      }
                                    },
                                    "id": 2621,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2620,
                                      "name": "referral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2524,
                                      "src": "26787:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26778:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                      "typeString": "struct DMToken.Presale storage ref"
                                    }
                                  },
                                  "id": 2622,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2428,
                                  "src": "26778:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 2628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "26839:3:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 2625,
                                          "name": "referralRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2508,
                                          "src": "26821:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2623,
                                          "name": "_quantity",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2533,
                                          "src": "26807:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 227,
                                        "src": "26807:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2626,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "26807:27:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 243,
                                    "src": "26807:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26807:36:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26778:65:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2631,
                              "nodeType": "ExpressionStatement",
                              "src": "26778:65:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2632,
                                  "name": "presaleTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2423,
                                  "src": "26875:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 2638,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "26923:3:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 2635,
                                          "name": "referralRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2508,
                                          "src": "26905:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2633,
                                          "name": "_quantity",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2533,
                                          "src": "26891:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2634,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 227,
                                        "src": "26891:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2636,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "26891:27:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 243,
                                    "src": "26891:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26891:36:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26875:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2641,
                              "nodeType": "ExpressionStatement",
                              "src": "26875:52:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2642,
                                  "name": "presaledTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2411,
                                  "src": "26933:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 2648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "26982:3:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 2645,
                                          "name": "referralRate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2508,
                                          "src": "26964:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2643,
                                          "name": "_quantity",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2533,
                                          "src": "26950:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 227,
                                        "src": "26950:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "26950:27:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 243,
                                    "src": "26950:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26950:36:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26933:53:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2651,
                              "nodeType": "ExpressionStatement",
                              "src": "26933:53:0"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2653,
                                    "name": "referral",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2524,
                                    "src": "27008:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 2659,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "27046:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 2656,
                                            "name": "referralRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2508,
                                            "src": "27028:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2654,
                                            "name": "_usdt",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2522,
                                            "src": "27018:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2655,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 227,
                                          "src": "27018:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2657,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "27018:23:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2658,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 243,
                                      "src": "27018:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "27018:32:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 2666,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "27084:3:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 2663,
                                            "name": "referralRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2508,
                                            "src": "27066:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2661,
                                            "name": "_quantity",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2533,
                                            "src": "27052:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2662,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 227,
                                          "src": "27052:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "27052:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2665,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 243,
                                      "src": "27052:31:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "27052:36:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2652,
                                  "name": "Presaled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1279,
                                  "src": "26999:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 2668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26999:90:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2669,
                              "nodeType": "EmitStatement",
                              "src": "26994:95:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2672,
                                "name": "presales",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2437,
                                "src": "27102:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                  "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                }
                              },
                              "id": 2674,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2673,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2528,
                                "src": "27111:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27102:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                "typeString": "struct DMToken.Presale storage ref"
                              }
                            },
                            "id": 2675,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2428,
                            "src": "27102:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2676,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2533,
                            "src": "27130:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27102:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2678,
                        "nodeType": "ExpressionStatement",
                        "src": "27102:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2679,
                            "name": "presaleTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2423,
                            "src": "27170:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2680,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2533,
                            "src": "27186:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27170:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2682,
                        "nodeType": "ExpressionStatement",
                        "src": "27170:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2683,
                            "name": "presaledTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "27200:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2684,
                            "name": "_quantity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2533,
                            "src": "27217:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27200:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2686,
                        "nodeType": "ExpressionStatement",
                        "src": "27200:26:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2688,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2528,
                              "src": "27247:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2689,
                              "name": "_usdt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2522,
                              "src": "27256:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2690,
                              "name": "_quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2533,
                              "src": "27263:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2687,
                            "name": "Presaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1279,
                            "src": "27238:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27238:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2692,
                        "nodeType": "EmitStatement",
                        "src": "27233:40:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "7c2003e3",
                  "id": 2694,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "presale",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2522,
                        "mutability": "mutable",
                        "name": "_usdt",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2694,
                        "src": "25956:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2521,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "25956:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2524,
                        "mutability": "mutable",
                        "name": "referral",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2694,
                        "src": "25967:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25967:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "25955:29:0"
                  },
                  "returnParameters": {
                    "id": 2526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "25992:0:0"
                  },
                  "scope": 3359,
                  "src": "25939:1339:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2753,
                    "nodeType": "Block",
                    "src": "27385:490:0",
                    "statements": [
                      {
                        "assignments": [
                          2698
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2698,
                            "mutability": "mutable",
                            "name": "_sender",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2753,
                            "src": "27390:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2697,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "27390:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2701,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2699,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "27408:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "27408:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27390:28:0"
                      },
                      {
                        "assignments": [
                          2703
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2703,
                            "mutability": "mutable",
                            "name": "rewardBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2753,
                            "src": "27423:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2702,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "27423:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2707,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2705,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2698,
                              "src": "27454:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2704,
                            "name": "getReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2806,
                            "src": "27444:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27444:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27423:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2709,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2698,
                                "src": "27475:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27492:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "27484:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2710,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27484:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27484:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "27475:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "73656e6465722063616e2774206265207a65726f",
                              "id": 2715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27496:22:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_28354aff1bb1b4693ff6fd1152cb93a4f1de7bce90cf70884b4e26a6ce3897a4",
                                "typeString": "literal_string \"sender can't be zero\""
                              },
                              "value": "sender can't be zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_28354aff1bb1b4693ff6fd1152cb93a4f1de7bce90cf70884b4e26a6ce3897a4",
                                "typeString": "literal_string \"sender can't be zero\""
                              }
                            ],
                            "id": 2708,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "27467:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27467:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2717,
                        "nodeType": "ExpressionStatement",
                        "src": "27467:52:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2719,
                                "name": "rewardBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2703,
                                "src": "27532:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27546:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "27532:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436c61696d203a205468657265206973206e6f2072657761726420616d6f756e74",
                              "id": 2722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27548:35:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50cec39cb0c3bdae39cebfd180364bcfb26a87dd6cd6c57848be8ea18ee8a290",
                                "typeString": "literal_string \"Claim : There is no reward amount\""
                              },
                              "value": "Claim : There is no reward amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50cec39cb0c3bdae39cebfd180364bcfb26a87dd6cd6c57848be8ea18ee8a290",
                                "typeString": "literal_string \"Claim : There is no reward amount\""
                              }
                            ],
                            "id": 2718,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "27524:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27524:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2724,
                        "nodeType": "ExpressionStatement",
                        "src": "27524:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2729,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2698,
                              "src": "27618:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2730,
                              "name": "rewardBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2703,
                              "src": "27627:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2726,
                                  "name": "USDTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "27596:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2725,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "27589:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27589:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "27589:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27589:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2732,
                        "nodeType": "ExpressionStatement",
                        "src": "27589:52:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2733,
                                "name": "presales",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2437,
                                "src": "27646:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                  "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                }
                              },
                              "id": 2735,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2734,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2698,
                                "src": "27655:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "27646:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                "typeString": "struct DMToken.Presale storage ref"
                              }
                            },
                            "id": 2736,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2432,
                            "src": "27646:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2737,
                            "name": "rewardBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2703,
                            "src": "27675:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27646:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "27646:42:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2740,
                            "name": "rewardPoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2362,
                            "src": "27747:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2741,
                            "name": "rewardBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2703,
                            "src": "27768:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27747:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2743,
                        "nodeType": "ExpressionStatement",
                        "src": "27747:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2744,
                            "name": "rewardedTotalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "27786:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2745,
                            "name": "rewardBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2703,
                            "src": "27810:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27786:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2747,
                        "nodeType": "ExpressionStatement",
                        "src": "27786:37:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2749,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2698,
                              "src": "27847:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2750,
                              "name": "rewardBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2703,
                              "src": "27856:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2748,
                            "name": "ClaimReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2352,
                            "src": "27835:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27835:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2752,
                        "nodeType": "EmitStatement",
                        "src": "27830:40:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "b88a802f",
                  "id": 2754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2695,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27373:2:0"
                  },
                  "returnParameters": {
                    "id": 2696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27385:0:0"
                  },
                  "scope": 3359,
                  "src": "27353:522:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2805,
                    "nodeType": "Block",
                    "src": "28049:373:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2761,
                              "name": "presaledTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "28061:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28076:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "28061:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 2764,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2756,
                              "src": "28081:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                              "id": 2765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28090:42:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "value": "0x0000000000000000000000000000000000000000"
                            },
                            "src": "28081:51:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "28061:71:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2801,
                          "nodeType": "Block",
                          "src": "28169:236:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2771,
                                  "name": "rewardBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2759,
                                  "src": "28181:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2783,
                                      "name": "presaledTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2411,
                                      "src": "28275:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 2777,
                                              "name": "presales",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2437,
                                              "src": "28245:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                                "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                              }
                                            },
                                            "id": 2779,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 2778,
                                              "name": "account",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2756,
                                              "src": "28254:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "28245:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                              "typeString": "struct DMToken.Presale storage ref"
                                            }
                                          },
                                          "id": 2780,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2428,
                                          "src": "28245:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 2774,
                                              "name": "rewardedTotalBalance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2364,
                                              "src": "28219:20:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 2772,
                                              "name": "rewardPoolBalance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2362,
                                              "src": "28197:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 2773,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "add",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 150,
                                            "src": "28197:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 2775,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "28197:43:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2776,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 227,
                                        "src": "28197:47:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "28197:73:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 243,
                                    "src": "28197:77:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "28197:92:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28181:108:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2786,
                              "nodeType": "ExpressionStatement",
                              "src": "28181:108:0"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2787,
                                  "name": "rewardBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2759,
                                  "src": "28305:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2788,
                                      "name": "presales",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2437,
                                      "src": "28321:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                        "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                      }
                                    },
                                    "id": 2790,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2789,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2756,
                                      "src": "28330:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "28321:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                      "typeString": "struct DMToken.Presale storage ref"
                                    }
                                  },
                                  "id": 2791,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2432,
                                  "src": "28321:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28305:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2800,
                              "nodeType": "IfStatement",
                              "src": "28301:95:0",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2793,
                                    "name": "rewardBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2759,
                                    "src": "28355:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2794,
                                        "name": "presales",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2437,
                                        "src": "28371:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                          "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                        }
                                      },
                                      "id": 2796,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2795,
                                        "name": "account",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2756,
                                        "src": "28380:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "28371:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                        "typeString": "struct DMToken.Presale storage ref"
                                      }
                                    },
                                    "id": 2797,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewards",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2432,
                                    "src": "28371:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "28355:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 2760,
                                "id": 2799,
                                "nodeType": "Return",
                                "src": "28348:48:0"
                              }
                            }
                          ]
                        },
                        "id": 2802,
                        "nodeType": "IfStatement",
                        "src": "28057:348:0",
                        "trueBody": {
                          "id": 2770,
                          "nodeType": "Block",
                          "src": "28134:29:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "28153:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 2760,
                              "id": 2769,
                              "nodeType": "Return",
                              "src": "28146:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28416:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2760,
                        "id": 2804,
                        "nodeType": "Return",
                        "src": "28409:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "c00007b0",
                  "id": 2806,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReward",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2756,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2806,
                        "src": "27991:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27991:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "27990:17:0"
                  },
                  "returnParameters": {
                    "id": 2760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2759,
                        "mutability": "mutable",
                        "name": "rewardBalance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2806,
                        "src": "28029:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2758,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28029:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "28028:20:0"
                  },
                  "scope": 3359,
                  "src": "27972:450:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2851,
                    "nodeType": "Block",
                    "src": "28493:348:0",
                    "statements": [
                      {
                        "assignments": [
                          2810
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2810,
                            "mutability": "mutable",
                            "name": "_sender",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2851,
                            "src": "28498:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2809,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "28498:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2813,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2811,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "28516:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "28516:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28498:28:0"
                      },
                      {
                        "assignments": [
                          2815
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2815,
                            "mutability": "mutable",
                            "name": "_unlockAmount",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2851,
                            "src": "28531:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2814,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "28531:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2819,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2817,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2810,
                              "src": "28568:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2816,
                            "name": "getUnlockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2917,
                            "src": "28552:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28552:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "28531:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2821,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2810,
                                "src": "28589:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 2824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28606:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "28598:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2822,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "28598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "28598:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "28589:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "73656e6465722063616e2774206265207a65726f",
                              "id": 2827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28610:22:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_28354aff1bb1b4693ff6fd1152cb93a4f1de7bce90cf70884b4e26a6ce3897a4",
                                "typeString": "literal_string \"sender can't be zero\""
                              },
                              "value": "sender can't be zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_28354aff1bb1b4693ff6fd1152cb93a4f1de7bce90cf70884b4e26a6ce3897a4",
                                "typeString": "literal_string \"sender can't be zero\""
                              }
                            ],
                            "id": 2820,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28581:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28581:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2829,
                        "nodeType": "ExpressionStatement",
                        "src": "28581:52:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2831,
                                "name": "_unlockAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2815,
                                "src": "28646:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 2832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "28660:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "28646:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5f756e6c6f636b416d6f756e74206973207a65726f",
                              "id": 2834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28663:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23456f822b3d4333c50f38cfeb769b797b8f40a76aad257fcda9c94bbd4b2f89",
                                "typeString": "literal_string \"_unlockAmount is zero\""
                              },
                              "value": "_unlockAmount is zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23456f822b3d4333c50f38cfeb769b797b8f40a76aad257fcda9c94bbd4b2f89",
                                "typeString": "literal_string \"_unlockAmount is zero\""
                              }
                            ],
                            "id": 2830,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "28638:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28638:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2836,
                        "nodeType": "ExpressionStatement",
                        "src": "28638:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2837,
                                "name": "presales",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2437,
                                "src": "28692:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                  "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                }
                              },
                              "id": 2839,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2838,
                                "name": "_sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2810,
                                "src": "28701:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28692:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                "typeString": "struct DMToken.Presale storage ref"
                              }
                            },
                            "id": 2840,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "unlocked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2430,
                            "src": "28692:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2841,
                            "name": "_unlockAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2815,
                            "src": "28722:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28692:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2843,
                        "nodeType": "ExpressionStatement",
                        "src": "28692:43:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2845,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2810,
                              "src": "28796:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2846,
                              "name": "_unlockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2815,
                              "src": "28805:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2847,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "28820:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "28820:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2844,
                            "name": "Unlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2360,
                            "src": "28787:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 2849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28787:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2850,
                        "nodeType": "EmitStatement",
                        "src": "28782:54:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "a69df4b5",
                  "id": 2852,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unlock",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2807,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "28481:2:0"
                  },
                  "returnParameters": {
                    "id": 2808,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "28493:0:0"
                  },
                  "scope": 3359,
                  "src": "28466:375:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2916,
                    "nodeType": "Block",
                    "src": "28940:326:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2859,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2854,
                            "src": "28949:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28958:42:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "value": "0x0000000000000000000000000000000000000000"
                          },
                          "src": "28949:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2864,
                        "nodeType": "IfStatement",
                        "src": "28945:65:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29009:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 2858,
                          "id": 2863,
                          "nodeType": "Return",
                          "src": "29002:8:0"
                        }
                      },
                      {
                        "assignments": [
                          2866
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2866,
                            "mutability": "mutable",
                            "name": "time",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2916,
                            "src": "29015:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2865,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "29015:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2869,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2867,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "29027:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "29027:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "29015:27:0"
                      },
                      {
                        "body": {
                          "id": 2912,
                          "nodeType": "Block",
                          "src": "29096:153:0",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2883,
                                  "name": "time",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2866,
                                  "src": "29106:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2890,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2884,
                                    "name": "startTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1366,
                                    "src": "29113:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2885,
                                        "name": "unlockSteps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2505,
                                        "src": "29125:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                                          "typeString": "uint256[] storage ref[] storage ref"
                                        }
                                      },
                                      "id": 2887,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2886,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2871,
                                        "src": "29137:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "29125:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 2889,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 2888,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "29140:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "29125:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "29113:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "29106:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2911,
                              "nodeType": "IfStatement",
                              "src": "29102:142:0",
                              "trueBody": {
                                "id": 2910,
                                "nodeType": "Block",
                                "src": "29144:100:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2908,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2903,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2901,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 2892,
                                                "name": "presales",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2437,
                                                "src": "29158:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                                  "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                                }
                                              },
                                              "id": 2894,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 2893,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2854,
                                                "src": "29167:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "29158:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                                "typeString": "struct DMToken.Presale storage ref"
                                              }
                                            },
                                            "id": 2895,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2428,
                                            "src": "29158:24:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 2896,
                                                "name": "unlockSteps",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2505,
                                                "src": "29185:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                                                  "typeString": "uint256[] storage ref[] storage ref"
                                                }
                                              },
                                              "id": 2898,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 2897,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2871,
                                                "src": "29197:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "29185:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 2900,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "30",
                                              "id": 2899,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "29200:1:0",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "29185:17:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "29158:44:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 2902,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "29205:3:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "src": "29158:50:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 2904,
                                            "name": "presales",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2437,
                                            "src": "29211:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                              "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                                            }
                                          },
                                          "id": 2906,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 2905,
                                            "name": "account",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2854,
                                            "src": "29220:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29211:17:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Presale_$2433_storage",
                                            "typeString": "struct DMToken.Presale storage ref"
                                          }
                                        },
                                        "id": 2907,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "unlocked",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2430,
                                        "src": "29211:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "29158:79:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 2858,
                                    "id": 2909,
                                    "nodeType": "Return",
                                    "src": "29151:86:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2877,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2871,
                            "src": "29084:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29088:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "29084:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2913,
                        "initializationExpression": {
                          "assignments": [
                            2871
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2871,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2913,
                              "src": "29051:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2870,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "29051:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2876,
                          "initialValue": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2872,
                                "name": "unlockSteps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2505,
                                "src": "29060:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                                  "typeString": "uint256[] storage ref[] storage ref"
                                }
                              },
                              "id": 2873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "29060:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29081:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "29060:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "29051:31:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": false,
                            "src": "29091:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2880,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2871,
                              "src": "29091:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2882,
                          "nodeType": "ExpressionStatement",
                          "src": "29091:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "29047:202:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29260:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2858,
                        "id": 2915,
                        "nodeType": "Return",
                        "src": "29253:8:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "3033bed8",
                  "id": 2917,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUnlockAmount",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2854,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2917,
                        "src": "28897:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28897:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "28896:17:0"
                  },
                  "returnParameters": {
                    "id": 2858,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2857,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2917,
                        "src": "28935:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2856,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28935:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "28934:6:0"
                  },
                  "scope": 3359,
                  "src": "28872:394:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2953,
                    "nodeType": "Block",
                    "src": "29381:173:0",
                    "statements": [
                      {
                        "assignments": [
                          2925
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2925,
                            "mutability": "mutable",
                            "name": "tokenBalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2953,
                            "src": "29386:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2924,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "29386:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2935,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2932,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "29438:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 2931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "29430:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2930,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "29430:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29430:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2927,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2919,
                                  "src": "29413:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2926,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "29406:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29406:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "29406:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29406:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "29386:58:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2940,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "29472:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29472:7:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2942,
                              "name": "tokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2925,
                              "src": "29481:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2937,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2919,
                                  "src": "29456:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2936,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "29449:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29449:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49,
                            "src": "29449:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29449:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2944,
                        "nodeType": "ExpressionStatement",
                        "src": "29449:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2945,
                            "name": "rewardPoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2362,
                            "src": "29499:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29519:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "29499:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2948,
                        "nodeType": "ExpressionStatement",
                        "src": "29499:21:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2949,
                            "name": "insurancePoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "29525:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29548:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "29525:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2952,
                        "nodeType": "ExpressionStatement",
                        "src": "29525:24:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "6ff1c9bc",
                  "id": 2954,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 2922,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 2921,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "29371:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "29371:9:0"
                    }
                  ],
                  "name": "emergencyWithdraw",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2919,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2954,
                        "src": "29347:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "29347:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "29346:15:0"
                  },
                  "returnParameters": {
                    "id": 2923,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "29381:0:0"
                  },
                  "scope": 3359,
                  "src": "29320:234:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3215,
                    "nodeType": "Block",
                    "src": "29747:1588:0",
                    "statements": [
                      {
                        "assignments": [
                          2972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2972,
                            "mutability": "mutable",
                            "name": "i",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3215,
                            "src": "29752:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2971,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "29752:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2974,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29759:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "29752:8:0"
                      },
                      {
                        "assignments": [
                          2976
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2976,
                            "mutability": "mutable",
                            "name": "_locked",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3215,
                            "src": "29876:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2975,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "29876:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2981,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2977,
                              "name": "presales",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2437,
                              "src": "29891:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Presale_$2433_storage_$",
                                "typeString": "mapping(address => struct DMToken.Presale storage ref)"
                              }
                            },
                            "id": 2979,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2978,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2956,
                              "src": "29900:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29891:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Presale_$2433_storage",
                              "typeString": "struct DMToken.Presale storage ref"
                            }
                          },
                          "id": 2980,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2428,
                          "src": "29891:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "29876:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2982,
                            "name": "isEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2959,
                            "src": "29922:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2983,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "29930:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "29930:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2985,
                              "name": "presaleEndTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2426,
                              "src": "29948:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "29930:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "29922:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2988,
                        "nodeType": "ExpressionStatement",
                        "src": "29922:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2989,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "29969:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 2992,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "29976:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 2990,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "29976:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "29969:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2993,
                            "name": "presaleEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2426,
                            "src": "29983:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29969:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2995,
                        "nodeType": "ExpressionStatement",
                        "src": "29969:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2996,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30025:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 2999,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30032:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 2997,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30032:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30025:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 3000,
                                "name": "_locked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2976,
                                "src": "30039:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 3001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30049:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "30039:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "id": 3004,
                              "name": "presaleLimit1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "30057:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "30039:31:0",
                            "trueExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30053:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30025:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3007,
                        "nodeType": "ExpressionStatement",
                        "src": "30025:45:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3008,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30087:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3011,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30094:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3009,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30094:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30087:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 3012,
                              "name": "presaleLimit2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "30101:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 3013,
                              "name": "_locked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2976,
                              "src": "30117:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "30101:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30087:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3016,
                        "nodeType": "ExpressionStatement",
                        "src": "30087:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3017,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30143:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3020,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30150:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3018,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30150:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30143:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3021,
                            "name": "presaleTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2423,
                            "src": "30157:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30143:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3023,
                        "nodeType": "ExpressionStatement",
                        "src": "30143:26:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3024,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30193:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3027,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30200:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3025,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30200:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30193:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3029,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2956,
                                "src": "30217:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3028,
                              "name": "getReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2806,
                              "src": "30207:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 3030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30207:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30193:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3032,
                        "nodeType": "ExpressionStatement",
                        "src": "30193:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3033,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30245:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3036,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30252:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3034,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30252:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30245:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3037,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "30259:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3039,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3038,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2956,
                              "src": "30269:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30259:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30245:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3041,
                        "nodeType": "ExpressionStatement",
                        "src": "30245:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3042,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30300:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3045,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30307:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3043,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30307:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30300:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 3048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 3046,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2956,
                                "src": "30314:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 3047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30323:42:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              "src": "30314:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3054,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2956,
                                  "src": "30402:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 3051,
                                      "name": "USDTAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1334,
                                      "src": "30379:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3050,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "30372:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 3052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "30372:19:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$100",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 3053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39,
                                "src": "30372:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 3055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30372:38:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "30314:96:0",
                            "trueExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30368:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30300:110:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3058,
                        "nodeType": "ExpressionStatement",
                        "src": "30300:110:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3059,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30430:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3062,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30437:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3060,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30437:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30430:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3064,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2956,
                                "src": "30460:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3063,
                              "name": "getUnlockAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2917,
                              "src": "30444:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 3065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30444:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30430:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3067,
                        "nodeType": "ExpressionStatement",
                        "src": "30430:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3068,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30490:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3071,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30497:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3069,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30497:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30490:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3072,
                            "name": "rewardPoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2362,
                            "src": "30504:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30490:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3074,
                        "nodeType": "ExpressionStatement",
                        "src": "30490:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3075,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30526:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3078,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30533:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3076,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30533:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30526:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3079,
                            "name": "rewardedTotalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "30540:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30526:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3081,
                        "nodeType": "ExpressionStatement",
                        "src": "30526:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3082,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30565:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3085,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30572:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3083,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30572:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30565:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3086,
                            "name": "insurancePoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "30579:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30565:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3088,
                        "nodeType": "ExpressionStatement",
                        "src": "30565:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3089,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30604:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3092,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30611:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3090,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30611:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30604:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3093,
                            "name": "insurancePoolBurnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3220,
                            "src": "30618:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30604:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3095,
                        "nodeType": "ExpressionStatement",
                        "src": "30604:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3096,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30716:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3099,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30723:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3097,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30723:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30716:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3104,
                                "name": "pancakeswapMDUSDTPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1332,
                                "src": "30760:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3101,
                                    "name": "USDTAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1334,
                                    "src": "30737:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3100,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100,
                                  "src": "30730:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 3102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30730:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$100",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 3103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "30730:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30730:52:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30716:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3107,
                        "nodeType": "ExpressionStatement",
                        "src": "30716:66:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3108,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30787:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3111,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30794:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3109,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30794:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30787:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3112,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "30801:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3114,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3113,
                              "name": "pancakeswapMDUSDTPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "30811:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30801:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30787:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3116,
                        "nodeType": "ExpressionStatement",
                        "src": "30787:46:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3117,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2963,
                              "src": "30838:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                                "typeString": "uint256[15] memory"
                              }
                            },
                            "id": 3120,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "30845:3:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 3118,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2972,
                                "src": "30845:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "30838:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3121,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "30852:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3126,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3124,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "30870:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 3123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "30862:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3122,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "30862:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30862:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30852:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30838:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3128,
                        "nodeType": "ExpressionStatement",
                        "src": "30838:38:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3129,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2972,
                            "src": "30885:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30887:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "30885:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3132,
                        "nodeType": "ExpressionStatement",
                        "src": "30885:3:0"
                      },
                      {
                        "body": {
                          "id": 3200,
                          "nodeType": "Block",
                          "src": "30980:271:0",
                          "statements": [
                            {
                              "assignments": [
                                3145,
                                3147,
                                3149,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3145,
                                  "mutability": "mutable",
                                  "name": "_total",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3200,
                                  "src": "30987:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3144,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "30987:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3147,
                                  "mutability": "mutable",
                                  "name": "_staking",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3200,
                                  "src": "31000:13:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3146,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "31000:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3149,
                                  "mutability": "mutable",
                                  "name": "_rewardable",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3200,
                                  "src": "31015:16:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3148,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "31015:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 3158,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3156,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2956,
                                    "src": "31071:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 3151,
                                          "name": "minters",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 429,
                                          "src": "31046:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 3153,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 3152,
                                          "name": "k",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3134,
                                          "src": "31054:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "31046:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3150,
                                      "name": "IStaking",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1252,
                                      "src": "31037:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IStaking_$1252_$",
                                        "typeString": "type(contract IStaking)"
                                      }
                                    },
                                    "id": 3154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "31037:20:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStaking_$1252",
                                      "typeString": "contract IStaking"
                                    }
                                  },
                                  "id": 3155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getStakeInfo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1241,
                                  "src": "31037:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 3157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "31037:42:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256,uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "30986:93:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 3159,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2967,
                                    "src": "31085:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$36_memory_ptr",
                                      "typeString": "uint256[36] memory"
                                    }
                                  },
                                  "id": 3162,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "31091:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 3160,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "31091:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31085:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3163,
                                  "name": "_total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3145,
                                  "src": "31098:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "31085:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3165,
                              "nodeType": "ExpressionStatement",
                              "src": "31085:19:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 3166,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2967,
                                    "src": "31110:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$36_memory_ptr",
                                      "typeString": "uint256[36] memory"
                                    }
                                  },
                                  "id": 3169,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "31116:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 3167,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "31116:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31110:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3170,
                                  "name": "_staking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3147,
                                  "src": "31123:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "31110:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3172,
                              "nodeType": "ExpressionStatement",
                              "src": "31110:21:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 3173,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2967,
                                    "src": "31137:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$36_memory_ptr",
                                      "typeString": "uint256[36] memory"
                                    }
                                  },
                                  "id": 3176,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "31143:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 3174,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "31143:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31137:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3177,
                                  "name": "_rewardable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3149,
                                  "src": "31150:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "31137:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3179,
                              "nodeType": "ExpressionStatement",
                              "src": "31137:24:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 3180,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2967,
                                    "src": "31167:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$36_memory_ptr",
                                      "typeString": "uint256[36] memory"
                                    }
                                  },
                                  "id": 3183,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 3182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "31173:3:0",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "id": 3181,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2972,
                                      "src": "31173:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31167:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 3188,
                                                        "name": "minters",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 429,
                                                        "src": "31201:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                          "typeString": "address[] storage ref"
                                                        }
                                                      },
                                                      "id": 3190,
                                                      "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 3189,
                                                        "name": "k",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 3134,
                                                        "src": "31209:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "31201:10:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 3187,
                                                    "name": "IStaking",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1252,
                                                    "src": "31192:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IStaking_$1252_$",
                                                      "typeString": "type(contract IStaking)"
                                                    }
                                                  },
                                                  "id": 3191,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "31192:20:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IStaking_$1252",
                                                    "typeString": "contract IStaking"
                                                  }
                                                },
                                                "id": 3192,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "stakeTokenAddress",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1228,
                                                "src": "31192:38:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                  "typeString": "function () view external returns (address)"
                                                }
                                              },
                                              "id": 3193,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "31192:40:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 3186,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 100,
                                            "src": "31185:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 3194,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "31185:48:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$100",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 3195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "decimals",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13,
                                        "src": "31185:57:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                          "typeString": "function () view external returns (uint8)"
                                        }
                                      },
                                      "id": 3196,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "31185:59:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 3185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "31180:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 3184,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "31180:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 3197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "31180:65:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "31167:78:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3199,
                              "nodeType": "ExpressionStatement",
                              "src": "31167:78:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3137,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3134,
                            "src": "30957:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3138,
                              "name": "minters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "30959:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "30959:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "30957:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3201,
                        "initializationExpression": {
                          "assignments": [
                            3134
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3134,
                              "mutability": "mutable",
                              "name": "k",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 3201,
                              "src": "30947:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3133,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "30947:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 3136,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30954:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "30947:8:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 3142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "30975:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 3141,
                              "name": "k",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3134,
                              "src": "30975:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3143,
                          "nodeType": "ExpressionStatement",
                          "src": "30975:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "30943:308:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3202,
                            "name": "isFirst",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2969,
                            "src": "31255:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 3204,
                                      "name": "pancakeswapMDUSDTPair",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1332,
                                      "src": "31282:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3203,
                                    "name": "IPancakeswapPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "31265:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IPancakeswapPair_$829_$",
                                      "typeString": "type(contract IPancakeswapPair)"
                                    }
                                  },
                                  "id": 3205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "31265:39:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPancakeswapPair_$829",
                                    "typeString": "contract IPancakeswapPair"
                                  }
                                },
                                "id": 3206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token0",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 757,
                                "src": "31265:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 3207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31265:48:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3210,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "31325:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 3209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "31317:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3208,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "31317:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31317:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "31265:65:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31255:75:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3214,
                        "nodeType": "ExpressionStatement",
                        "src": "31255:75:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "733bdef0",
                  "id": 3216,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakerInfo",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 2957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2956,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3216,
                        "src": "29635:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "29635:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "29634:17:0"
                  },
                  "returnParameters": {
                    "id": 2970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2959,
                        "mutability": "mutable",
                        "name": "isEnd",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3216,
                        "src": "29675:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2958,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "29675:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2963,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3216,
                        "src": "29687:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$15_memory_ptr",
                          "typeString": "uint256[15]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2960,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "29687:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2962,
                          "length": {
                            "argumentTypes": null,
                            "hexValue": "3135",
                            "id": 2961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29692:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "29687:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$15_storage_ptr",
                            "typeString": "uint256[15]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2967,
                        "mutability": "mutable",
                        "name": "pools",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3216,
                        "src": "29711:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$36_memory_ptr",
                          "typeString": "uint256[36]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2964,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "29711:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2966,
                          "length": {
                            "argumentTypes": null,
                            "hexValue": "3336",
                            "id": 2965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29716:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_36_by_1",
                              "typeString": "int_const 36"
                            },
                            "value": "36"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "29711:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$36_storage_ptr",
                            "typeString": "uint256[36]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2969,
                        "mutability": "mutable",
                        "name": "isFirst",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3216,
                        "src": "29734:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2968,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "29734:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "29674:73:0"
                  },
                  "scope": 3359,
                  "src": "29612:1723:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "constant": false,
                  "functionSelector": "c9559786",
                  "id": 3218,
                  "mutability": "mutable",
                  "name": "insurancePoolBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "31779:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "31779:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8e33f3ed",
                  "id": 3220,
                  "mutability": "mutable",
                  "name": "insurancePoolBurnt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3359,
                  "src": "31815:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3219,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "31815:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3236,
                    "nodeType": "Block",
                    "src": "32034:71:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3225,
                            "name": "insurancePoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "32046:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "316535",
                              "id": 3226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32070:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "1e5"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 3227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "32076:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3230,
                                    "name": "USDTDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2367,
                                    "src": "32087:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "32082:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3228,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "32082:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 3231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "32082:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32076:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "32070:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32046:54:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3224,
                        "id": 3235,
                        "nodeType": "Return",
                        "src": "32039:61:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 3237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "redeemable",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 3221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32003:2:0"
                  },
                  "returnParameters": {
                    "id": 3224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3223,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3237,
                        "src": "32028:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3222,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "32028:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "32027:6:0"
                  },
                  "scope": 3359,
                  "src": "31984:121:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3357,
                    "nodeType": "Block",
                    "src": "32245:933:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3243,
                                "name": "redeemable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3237,
                                "src": "32264:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 3244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32264:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f7567687420696e737572616e636520706f6f6c2062616c616e6365",
                              "id": 3245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32278:36:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80e3c4d4d9950e85e964347b877fee876357f44a0d982d0bdc737fef224cca9f",
                                "typeString": "literal_string \"not enought insurance pool balance\""
                              },
                              "value": "not enought insurance pool balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80e3c4d4d9950e85e964347b877fee876357f44a0d982d0bdc737fef224cca9f",
                                "typeString": "literal_string \"not enought insurance pool balance\""
                              }
                            ],
                            "id": 3242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "32256:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32256:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3247,
                        "nodeType": "ExpressionStatement",
                        "src": "32256:59:0"
                      },
                      {
                        "assignments": [
                          3249
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3249,
                            "mutability": "mutable",
                            "name": "swapAmount",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3357,
                            "src": "32328:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3248,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "32328:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3254,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 3252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32371:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3250,
                              "name": "insurancePoolBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3218,
                              "src": "32346:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 243,
                            "src": "32346:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32346:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32328:45:0"
                      },
                      {
                        "assignments": [
                          3259
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3259,
                            "mutability": "mutable",
                            "name": "path",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3357,
                            "src": "32410:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3257,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32410:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3258,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "32410:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3265,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 3263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32448:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 3262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "32434:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3260,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32438:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3261,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "32438:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 3264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32434:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32410:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3266,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3259,
                              "src": "32461:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3268,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32466:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "32461:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3269,
                            "name": "USDTAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "32471:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "32461:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3271,
                        "nodeType": "ExpressionStatement",
                        "src": "32461:21:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3272,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3259,
                              "src": "32493:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 3274,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 3273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32498:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "32493:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3277,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "32511:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              ],
                              "id": 3276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "32503:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3275,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32503:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32503:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "32493:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3280,
                        "nodeType": "ExpressionStatement",
                        "src": "32493:23:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3287,
                                  "name": "pancakeswapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1330,
                                  "src": "32563:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                    "typeString": "contract IPancakeswapRouter"
                                  }
                                ],
                                "id": 3286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "32555:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3285,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32555:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32555:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3289,
                              "name": "swapAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3249,
                              "src": "32583:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3282,
                                  "name": "USDTAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "32534:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3281,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "32527:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$100_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32527:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$100",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69,
                            "src": "32527:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32527:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3291,
                        "nodeType": "ExpressionStatement",
                        "src": "32527:67:0"
                      },
                      {
                        "assignments": [
                          3293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3293,
                            "mutability": "mutable",
                            "name": "_initbalance",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3357,
                            "src": "32599:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3292,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32599:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3300,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3294,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "32622:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3299,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3297,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "32640:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DMToken_$3359",
                                  "typeString": "contract DMToken"
                                }
                              ],
                              "id": 3296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "32632:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3295,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32632:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32632:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "32622:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32599:47:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3304,
                              "name": "swapAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3249,
                              "src": "32740:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32765:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "id": 3306,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3259,
                              "src": "32809:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3307,
                              "name": "storeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "32828:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3308,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "32855:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "32855:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3301,
                              "name": "pancakeswapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1330,
                              "src": "32683:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeswapRouter_$1217",
                                "typeString": "contract IPancakeswapRouter"
                              }
                            },
                            "id": 3303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 998,
                            "src": "32683:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            }
                          },
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32683:198:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3311,
                        "nodeType": "ExpressionStatement",
                        "src": "32683:198:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3312,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "32888:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3317,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3315,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "32906:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 3314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "32898:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3313,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "32898:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32898:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "32888:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3318,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "32916:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3320,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3319,
                              "name": "storeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "32926:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "32916:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32888:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3322,
                        "nodeType": "ExpressionStatement",
                        "src": "32888:51:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3323,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "32944:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3325,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3324,
                              "name": "storeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "32954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "32944:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32970:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "32944:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3328,
                        "nodeType": "ExpressionStatement",
                        "src": "32944:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3329,
                            "name": "insurancePoolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3218,
                            "src": "32978:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3330,
                            "name": "swapAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3249,
                            "src": "33002:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "32978:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3332,
                        "nodeType": "ExpressionStatement",
                        "src": "32978:34:0"
                      },
                      {
                        "assignments": [
                          3334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3334,
                            "mutability": "mutable",
                            "name": "swapedAmount",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3357,
                            "src": "33017:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3333,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "33017:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3344,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3342,
                              "name": "_initbalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3293,
                              "src": "33069:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3335,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1265,
                                "src": "33040:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 3340,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3338,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "33058:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_DMToken_$3359",
                                      "typeString": "contract DMToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DMToken_$3359",
                                      "typeString": "contract DMToken"
                                    }
                                  ],
                                  "id": 3337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "33050:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3336,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "33050:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 3339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33050:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "33040:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 166,
                            "src": "33040:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33040:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33017:65:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3345,
                            "name": "insurancePoolBurnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3220,
                            "src": "33087:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3346,
                            "name": "swapedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "33109:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "33087:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3348,
                        "nodeType": "ExpressionStatement",
                        "src": "33087:34:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3352,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "33140:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DMToken_$3359",
                                    "typeString": "contract DMToken"
                                  }
                                ],
                                "id": 3351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "33132:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3350,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "33132:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "33132:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3354,
                              "name": "swapedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3334,
                              "src": "33147:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3349,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2273,
                            "src": "33126:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33126:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3356,
                        "nodeType": "ExpressionStatement",
                        "src": "33126:34:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 3358,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 3240,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 3239,
                        "name": "lockRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "32235:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "32235:10:0"
                    }
                  ],
                  "name": "redeem",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 3238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32223:2:0"
                  },
                  "returnParameters": {
                    "id": 3241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32245:0:0"
                  },
                  "scope": 3359,
                  "src": "32208:970:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3360,
              "src": "14407:18774:0"
            }
          ],
          "src": "39:33142:0"
        },
        "id": 0
      }
    }
  }
}
